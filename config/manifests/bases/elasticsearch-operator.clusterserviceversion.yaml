apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[]'
    capabilities: Basic Install
  name: elasticsearch-operator.v0.0.38
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Cerebro is the Schema for the cerebroes API
      displayName: Cerebro
      kind: Cerebro
      name: cerebros.cerebro.k8s.webcenter.fr
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: apps/v1
      - kind: Ingress
        name: ""
        version: networking.k8s.io/v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      specDescriptors:
      - description: Config is the Cerebro config The key is the file stored on kibana/config
        displayName: Config
        path: config
      - description: Deployment permit to set the deployment settings
        displayName: Deployment
        path: deployment
      - description: Annotations permit to set annotation on deployment
        displayName: Annotations
        path: deployment.annotations
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: deployment.env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: deployment.envFrom
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: deployment.labels
      - description: Node permit to set extra option on Node process
        displayName: Node
        path: deployment.node
      - description: NodeSelector permit to set node selector on pod
        displayName: Node Selector
        path: deployment.nodeSelector
      - description: PodSpec is merged with expected pod It usefull to add some extra
          properties on pod spec
        displayName: Pod Template
        path: deployment.podTemplate
      - description: Replicas is the number of replicas
        displayName: Replicas
        path: deployment.replicas
      - description: Resources permit to set ressources on Kibana container
        displayName: Resources
        path: deployment.resources
      - description: Tolerations permit to set toleration on pod
        displayName: Tolerations
        path: deployment.tolerations
      - description: Endpoint permit to set endpoints to access on Cerebro from external
          kubernetes You can set ingress and / or load balancer
        displayName: Endpoint
        path: endpoint
      - description: Ingress permit to set ingress settings
        displayName: Ingress
        path: endpoint.ingress
      - description: Annotations to set in ingress
        displayName: Annotations
        path: endpoint.ingress.annotations
      - description: Enabled permit to enabled / disabled ingress Default to false
        displayName: Enabled
        path: endpoint.ingress.enabled
      - description: Host is the hostname to access on Kibana
        displayName: Host
        path: endpoint.ingress.host
      - description: IngressSpec it merge with expected ingress spec
        displayName: Ingress Spec
        path: endpoint.ingress.ingressSpec
      - description: Labels to set in ingress
        displayName: Labels
        path: endpoint.ingress.labels
      - description: SecretRef is the secret ref that store certificates
        displayName: Secret Ref
        path: endpoint.ingress.secretRef
      - description: Load balancer permit to set load balancer settings
        displayName: Load Balancer
        path: endpoint.loadBalancer
      - description: Enabled permit to enabled / disabled load balancer Cloud provider
          need to support it Default to false
        displayName: Enabled
        path: endpoint.loadBalancer.enabled
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: Version is the Cerebro version to use Default is use the latest
        displayName: Version
        path: version
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: IsError is true if controller is stuck on Error
        displayName: Is Error
        path: isOnError
      - description: Phase is the current deployment phase
        displayName: Phase
        path: phase
      - description: Url is the Cerebro endpoint
        displayName: Url
        path: url
      version: v1alpha1
    - description: ComponentTemplate is the Schema for the componenttemplates API
      displayName: Component Template
      kind: ComponentTemplate
      name: componenttemplates.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: Aliases is the component aliases
        displayName: Aliases
        path: aliases
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Mappings is the component mapping
        displayName: Mappings
        path: mappings
      - description: Name is the custom component template name If empty, it use the
          ressource name
        displayName: Name
        path: name
      - description: Template is the raw template You can use it instead to set settings,
          mappings or aliases
        displayName: Template
        path: rawTemplate
      - description: Settings is the component setting
        displayName: Settings
        path: settings
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: OriginalObject is the original object used on 3 way diff merge
        displayName: Original Object
        path: originalObject
      - description: Sync
        displayName: Sync
        path: sync
      version: v1alpha1
    - description: Elasticsearch is the Schema for the elasticsearchs API
      displayName: Elasticsearch
      kind: Elasticsearch
      name: elasticsearches.elasticsearch.k8s.webcenter.fr
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: apps/v1
      - kind: Ingress
        name: ""
        version: networking.k8s.io/v1
      - kind: License
        name: ""
        version: elasticsearchapi.k8s.webcenter.fr/v1alpha1
      - kind: Metricbeat
        name: ""
        version: beat.k8s.webcenter.fr/v1alpha1
      - kind: NetworkPolicy
        name: ""
        version: networking.k8s.io/v1
      - kind: PodDisruptionBudget
        name: ""
        version: policy/v1
      - kind: PodMonitor
        name: ""
        version: monitoring.coreos.com/v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: apps/v1
      - kind: User
        name: ""
        version: elasticsearchapi.k8s.webcenter.fr/v1alpha1
      specDescriptors:
      - description: ClusterName is the Elasticsearch cluster name Default is use
          the custom ressource name
        displayName: Cluster Name
        path: clusterName
      - description: Endpoint permit to set endpoints to access on Elasticsearch from
          external kubernetes You can set ingress and / or load balancer
        displayName: Endpoint
        path: endpoint
      - description: Ingress permit to set ingress settings
        displayName: Ingress
        path: endpoint.ingress
      - description: Annotations to set in ingress
        displayName: Annotations
        path: endpoint.ingress.annotations
      - description: Enabled permit to enabled / disabled ingress Default to false
        displayName: Enabled
        path: endpoint.ingress.enabled
      - description: Host is the hostname to access on Elasticsearch
        displayName: Host
        path: endpoint.ingress.host
      - description: IngressSpec it merge with expected ingress spec
        displayName: Ingress Spec
        path: endpoint.ingress.ingressSpec
      - description: Labels to set in ingress
        displayName: Labels
        path: endpoint.ingress.labels
      - description: SecretRef is the secret ref that store certificates
        displayName: Secret Ref
        path: endpoint.ingress.secretRef
      - description: TargetNodeGroupName permit to define if specific node group is
          responsible to receive external access, like ingest nodes
        displayName: Target Node Group Name
        path: endpoint.ingress.targetNodeGroupName
      - description: Load balancer permit to set load balancer settings
        displayName: Load Balancer
        path: endpoint.loadBalancer
      - description: Enabled permit to enabled / disabled load balancer Cloud provider
          need to support it Default to false
        displayName: Enabled
        path: endpoint.loadBalancer.enabled
      - description: TargetNodeGroupName permit to define if specific node group is
          responsible to receive external access, like ingest nodes
        displayName: Target Node Group Name
        path: endpoint.loadBalancer.targetNodeGroupName
      - description: GlobalNodeGroup permit to set some default parameters for each
          node groups
        displayName: Global Node Group
        path: globalNodeGroup
      - description: AdditionalVolumes permit to use additionnal volumes Default is
          empty
        displayName: Additional Volumes
        path: globalNodeGroup.additionalVolumes
      - description: Name is the volume name
        displayName: Name
        path: globalNodeGroup.additionalVolumes[0].name
      - description: Annotations permit to set annotation on containers
        displayName: Annotations
        path: globalNodeGroup.annotations
      - description: AntiAffinity permit to set anti affinity policy
        displayName: Anti Affinity
        path: globalNodeGroup.antiAffinity
      - description: TopologyKey is the topology key to use Default to topology.kubernetes.io/zone
        displayName: Topology Key
        path: globalNodeGroup.antiAffinity.topologyKey
      - description: Type permit to set anti affinity as soft or hard
        displayName: Type
        path: globalNodeGroup.antiAffinity.type
      - description: Config is the Elasticsearch config dedicated for this node groups
          like roles The key is the file stored on elasticsearch/config
        displayName: Config
        path: globalNodeGroup.config
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: globalNodeGroup.env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: globalNodeGroup.envFrom
      - description: InitContainerResources permit to set resources on init containers
        displayName: Init Container Resources
        path: globalNodeGroup.initContainerResources
      - description: Jvm permit to set extra option on JVM like memory or proxy to
          download plugins Becarefull with memory, not forget to set the right ressource
          on pod
        displayName: Jvm
        path: globalNodeGroup.jvm
      - description: KeystoreSecretRef is the secret that store the security settings
        displayName: Keystore Secret Ref
        path: globalNodeGroup.keystoreSecretRef
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: globalNodeGroup.labels
      - description: PodDisruptionBudget is the pod disruption budget policy
        displayName: Pod Disruption Budget Spec
        path: globalNodeGroup.podDisruptionBudget
      - description: PodTemplate is merged with expected pod It usefull to add some
          extra properties on pod spec
        displayName: Pod Template
        path: globalNodeGroup.podTemplate
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: LicenseSecretRef permit to set secret that contain Elasticsearch
          license on key `license`
        displayName: License Secret Ref
        path: licenseSecretRef
      - description: Monitoring permit to monitor current cluster Default, it not
          monitor cluster
        displayName: Monitoring
        path: monitoring
      - description: Metricbeat permit to monitor cluster with metricbeat and to dedicated
          monitoring cluster
        displayName: Metricbeat
        path: monitoring.metricbeat
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: monitoring.metricbeat.elasticsearchRef
      - description: Enabled permit to enable Metricbeat monitoring It will deploy
          metricbeat to collect metric Default to false
        displayName: Enabled
        path: monitoring.metricbeat.enabled
      - description: Resources permit to set resources on metricbeat
        displayName: Resources
        path: monitoring.metricbeat.initContainerResources
      - description: RefreshPeriod permit to set the time to collect data Defaullt
          to  `10s`
        displayName: Refresh Period
        path: monitoring.metricbeat.refreshPeriod
      - description: Prometheus permit to monitor cluster with Prometheus and graphana
          (via exporter)
        displayName: Prometheus
        path: monitoring.prometheus
      - description: Enabled permit to enable Prometheus monitoring It will deploy
          exporter for Elasticsearch and add podMonitor policy Default to false
        displayName: Enabled
        path: monitoring.prometheus.enabled
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: monitoring.prometheus.image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: monitoring.prometheus.imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: monitoring.prometheus.imagePullSecrets
      - description: Version is the exporter version to use Default is use the latest
        displayName: Version
        path: monitoring.prometheus.version
      - description: NodeGroups permit to groups node per use case For exemple master,
          data and ingest
        displayName: Node Groups
        path: nodeGroups
      - description: Annotations permit to set annotation on containers
        displayName: Annotations
        path: nodeGroups[0].annotations
      - description: AntiAffinity permit to set anti affinity policy
        displayName: Anti Affinity
        path: nodeGroups[0].antiAffinity
      - description: TopologyKey is the topology key to use Default to topology.kubernetes.io/zone
        displayName: Topology Key
        path: nodeGroups[0].antiAffinity.topologyKey
      - description: Type permit to set anti affinity as soft or hard
        displayName: Type
        path: nodeGroups[0].antiAffinity.type
      - description: Config is the Elasticsearch config dedicated for this node groups
          The key is the file stored on elasticsearch/config
        displayName: Config
        path: nodeGroups[0].config
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: nodeGroups[0].env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: nodeGroups[0].envFrom
      - description: Jvm permit to set extra option on JVM like Xmx, Xms
        displayName: Jvm
        path: nodeGroups[0].jvm
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: nodeGroups[0].labels
      - description: Name is the the node group name
        displayName: Name
        path: nodeGroups[0].name
      - description: NodeSelector permit to set node selector on pod
        displayName: Node Selector
        path: nodeGroups[0].nodeSelector
      - description: Persistence is the spec to persist data
        displayName: Persistence
        path: nodeGroups[0].persistence
      - description: Volume is the volume source to use instead volumeClaim It usefull
          if you should to use hostPath
        displayName: Volume
        path: nodeGroups[0].persistence.volume
      - description: VolumeClaim is the persistent volume claim spec use by statefullset
        displayName: Volume Claim Spec
        path: nodeGroups[0].persistence.volumeClaim
      - description: PodDisruptionBudget is the pod disruption budget policy
        displayName: Pod Disruption Budget Spec
        path: nodeGroups[0].podDisruptionBudget
      - description: PodTemplate is merged with expected pod It usefull to add some
          extra properties on pod spec
        displayName: Pod Template
        path: nodeGroups[0].podTemplate
      - description: Replicas is the number of replicas
        displayName: Replicas
        path: nodeGroups[0].replicas
      - description: Resources permit to set ressources on Elasticsearch container
        displayName: Resources
        path: nodeGroups[0].resources
      - description: Roles is the list of Elasticsearch roles
        displayName: Roles
        path: nodeGroups[0].roles
      - description: Tolerations permit to set toleration on pod
        displayName: Tolerations
        path: nodeGroups[0].tolerations
      - description: WaitClusterStatus permit to wait the cluster state on readyness
          probe Default to green
        displayName: Wait Cluster Status
        path: nodeGroups[0].waitClusterStatus
      - description: PluginsList is the list of additionnal plugin to install on each
          Elasticsearch node Default is empty
        displayName: Plugins List
        path: pluginsList
      - description: SetVMMaxMapCount permit to set the right value for VMMaxMapCount
          on node It need to run pod as root with privileged option Default is true
        displayName: Set VMMax Map Count
        path: setVMMaxMapCount
      - description: Tls permit to set the TLS setting for API access
        displayName: Tls
        path: tls
      - description: 'CertificateSecretRef is the secret that store your custom certificates.
          It need to have the following keys: tls.key, tls.crt and optionally ca.crt'
        displayName: Certificate Secret Ref
        path: tls.certificateSecretRef
      - description: Enabled permit to enabled TLS on API Default true
        displayName: Enabled
        path: tls.enabled
      - description: KeySize is the key size when generate privates keys Default to
          2048
        displayName: Key Size
        path: tls.keySize
      - description: RenewalDays is the number of days before certificate expire to
          become effective renewal Default to 30
        displayName: Renewal Days
        path: tls.renewalDays
      - description: SelfSignedCertificate permit to set self signed certificate settings
        displayName: Self Signed Certificate
        path: tls.selfSignedCertificate
      - description: AltIps permit to set subject alt names of type ip when generate
          certificate
        displayName: Alt Ips
        path: 'tls.selfSignedCertificate.altIPs:'
      - description: AltNames permit to set subject alt names of type dns when generate
          certificate
        displayName: Alt Names
        path: 'tls.selfSignedCertificate.altNames:'
      - description: ValidityDays is the number of days that certificates are valid
          Default to 365
        displayName: Validity Days
        path: tls.validityDays
      - description: Version is the Elasticsearch version to use Default is use the
          latest
        displayName: Version
        path: version
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: CredentialsRef is the secret that store the credentials to access
          on Elasticsearch
        displayName: Credentials Ref
        path: credentialsRef
      - description: Health is the cluster health
        displayName: Health
        path: health
      - description: IsError is true if controller is stuck on Error
        displayName: Is Error
        path: isOnError
      - description: Phase is the current cluster deployment phase
        displayName: Phase
        path: phase
      - description: Url is the Elasticsearch endpoint
        displayName: Url
        path: url
      version: v1alpha1
    - description: Filebeat is the Schema for the filebeats API
      displayName: Filebeat
      kind: Filebeat
      name: filebeats.beat.k8s.webcenter.fr
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Ingress
        name: ""
        version: networking.k8s.io/v1
      - kind: NetworkPolicy
        name: ""
        version: networking.k8s.io/v1
      - kind: PodDisruptionBudget
        name: ""
        version: policy/v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: apps/v1
      specDescriptors:
      - description: Config is the Filebeat config The key is the file stored on filebeat
        displayName: Config
        path: config
      - description: Deployment permit to set the deployment settings
        displayName: Deployment
        path: deployment
      - description: AdditionalVolumes permit to use additionnal volumes Default is
          empty
        displayName: Additional Volumes
        path: deployment.additionalVolumes
      - description: Name is the volume name
        displayName: Name
        path: deployment.additionalVolumes[0].name
      - description: Annotations permit to set annotation on deployment
        displayName: Annotations
        path: deployment.annotations
      - description: AntiAffinity permit to set anti affinity policy
        displayName: Anti Affinity
        path: deployment.antiAffinity
      - description: TopologyKey is the topology key to use Default to topology.kubernetes.io/zone
        displayName: Topology Key
        path: deployment.antiAffinity.topologyKey
      - description: Type permit to set anti affinity as soft or hard
        displayName: Type
        path: deployment.antiAffinity.type
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: deployment.env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: deployment.envFrom
      - description: InitContainerResources permit to set resources on init containers
        displayName: Init Container Resources
        path: deployment.initContainerResources
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: deployment.labels
      - description: NodeSelector permit to set node selector on pod
        displayName: Node Selector
        path: deployment.nodeSelector
      - description: Persistence is the spec to persist data Default is emptyDir
        displayName: Persistence
        path: deployment.persistence
      - description: Volume is the volume source to use instead volumeClaim It usefull
          if you should to use hostPath
        displayName: Volume
        path: deployment.persistence.volume
      - description: VolumeClaim is the persistent volume claim spec use by statefullset
        displayName: Volume Claim Spec
        path: deployment.persistence.volumeClaim
      - description: PodDisruptionBudget is the pod disruption budget policy
        displayName: Pod Disruption Budget Spec
        path: deployment.podDisruptionBudget
      - description: PodSpec is merged with expected pod It usefull to add some extra
          properties on pod spec
        displayName: Pod Template
        path: deployment.podTemplate
      - description: Ports is the list of container port to affect on filebeat container
          It can be usefull to expose syslog input
        displayName: Ports
        path: deployment.ports
      - description: Replicas is the number of replicas
        displayName: Replicas
        path: deployment.replicas
      - description: Resources permit to set ressources on container
        displayName: Resources
        path: deployment.resources
      - description: Tolerations permit to set toleration on pod
        displayName: Tolerations
        path: deployment.tolerations
      - description: ElasticsearchRef is the Elasticsearch ref to connect on. It will
          generate Elasticsearch output bas eon it
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: Ingresses permit to declare some ingresses The name is decorated
          with cluster name and so on
        displayName: Ingresses
        path: ingresses
      - description: Annotations is the extra annotations for ingress
        displayName: Annotations
        path: ingresses[0].annotations
      - description: ContainerPort is the port to set when create service consumed
          by ingress
        displayName: Container Port
        path: ingresses[0].containerPort
      - description: ContainerPortProtocol is the protocol to set when create service
          consumed by ingress
        displayName: Container Port Protocol
        path: ingresses[0].containerProtocol
      - description: Labels is the extra labels for ingress
        displayName: Labels
        path: ingresses[0].labels
      - description: Name is the ingress name The name is decorated with cluster name
          and so on
        displayName: Name
        path: ingresses[0].name
      - description: Spec is the ingress spec
        displayName: Spec
        path: ingresses[0].spec
      - description: LogstashRef is the Logstash ref to connect on. It will generate
          Logstash output base on it
        displayName: Logstash Ref
        path: logstashRef
      - description: ExternalLogstahsRef is the external Logstash instance not managed
          by operator
        displayName: External Logstash Ref
        path: logstashRef.external
      - description: Addresses is the list of Logstash addresses
        displayName: Addresses
        path: logstashRef.external.addresses
      - description: 'LogstashCaSecretRef is the secret that store your custom CA
          certificate to connect on Logstash via beat protocole. It need to have the
          following keys: ca.crt'
        displayName: Logstash Ca Secret Ref
        path: logstashRef.logstashCASecretRef
      - description: ManagedLogstashRef is the managed Logstash instance by operator
        displayName: Managed Logstash Ref
        path: logstashRef.managed
      - description: Name is the Logstash cluster deployed by operator
        displayName: Name
        path: logstashRef.managed.name
      - description: Namespace is the namespace where Logstash is deployed by operator
          No need to set if is deployed on the same namespace
        displayName: Namespace
        path: logstashRef.managed.namespace
      - description: Port is the port number to connect on service
        displayName: Port
        path: logstashRef.managed.port
      - description: TargetService is the target service that expose the beat protocole
        displayName: Target Service
        path: logstashRef.managed.targetService
      - description: Module is the module specification The key is the file stored
          on filebeat/modules.d
        displayName: Module
        path: module
      - description: Monitoring permit to monitor current cluster Default, it not
          monitor cluster
        displayName: Monitoring
        path: monitoring
      - description: Metricbeat permit to monitor cluster with metricbeat and to dedicated
          monitoring cluster
        displayName: Metricbeat
        path: monitoring.metricbeat
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: monitoring.metricbeat.elasticsearchRef
      - description: Enabled permit to enable Metricbeat monitoring It will deploy
          metricbeat to collect metric Default to false
        displayName: Enabled
        path: monitoring.metricbeat.enabled
      - description: Resources permit to set resources on metricbeat
        displayName: Resources
        path: monitoring.metricbeat.initContainerResources
      - description: RefreshPeriod permit to set the time to collect data Defaullt
          to  `10s`
        displayName: Refresh Period
        path: monitoring.metricbeat.refreshPeriod
      - description: Prometheus permit to monitor cluster with Prometheus and graphana
          (via exporter)
        displayName: Prometheus
        path: monitoring.prometheus
      - description: Enabled permit to enable Prometheus monitoring It will deploy
          exporter for filebeat and add podMonitor policy Default to false
        displayName: Enabled
        path: monitoring.prometheus.enabled
      - description: 'Url is the plugin URL where to download exporter Default is
          use project https://github.com/pjhampton/kibana-prometheus-exporter If version
          is set to latest, it use arbitrary: https://github.com/pjhampton/kibana-prometheus-exporter/releases/download/8.6.0/kibanaPrometheusExporter-8.6.0.zip'
        displayName: Url
        path: monitoring.prometheus.url
      - description: Services permit to declare some services The name is decorated
          with cluster name and so on
        displayName: Services
        path: services
      - description: Annotations is the extra annotations for ingress
        displayName: Annotations
        path: services[0].annotations
      - description: Labels is the extra labels for ingress
        displayName: Labels
        path: services[0].labels
      - description: Name is the service name The name is decorated with cluster name
          and so on
        displayName: Name
        path: services[0].name
      - description: Spec is the service spec
        displayName: Spec
        path: services[0].spec
      - description: Version is the Filebeat version to use Default is use the latest
        displayName: Version
        path: version
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: IsError is true if controller is stuck on Error
        displayName: Is Error
        path: isOnError
      - description: Phase is the current deployment phase
        displayName: Phase
        path: phase
      version: v1alpha1
    - description: Host is the Schema for the hosts API
      displayName: Host
      kind: Host
      name: hosts.cerebro.k8s.webcenter.fr
      resources:
      - kind: none
        name: ""
        version: none
      specDescriptors:
      - description: CerebroRef is the Cerebro where to enroll Elasticsearch cluster
        displayName: Cerebro Ref
        path: cerebroRef
      - description: Name is the cerebro name
        displayName: Name
        path: cerebroRef.name
      - description: Namespace is the cerebro namespace
        displayName: Namespace
        path: cerebroRef.namespace
      - description: ElasticsearchRef is the Elasticsearch cluster to enroll on
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: IsError is true if controller is stuck on Error
        displayName: Is Error
        path: isOnError
      version: v1alpha1
    - description: IndexLifecyclePolicy is the Schema for the indexlifecyclepolicies
        API
      displayName: Index Lifecycle Policy
      kind: IndexLifecyclePolicy
      name: indexlifecyclepolicies.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Name is the custom index lifecycle policy name If empty, it use
          the ressource name
        displayName: Name
        path: name
      - description: Policy is the raw policy on JSON
        displayName: Policy
        path: policy
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: OriginalObject is the original object used on 3 way diff merge
        displayName: Original Object
        path: originalObject
      - description: Sync
        displayName: Sync
        path: sync
      version: v1alpha1
    - description: IndexTemplate is the Schema for the indextemplates API
      displayName: Index Template
      kind: IndexTemplate
      name: indextemplates.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: AllowAutoCreate permit to allow auto create index
        displayName: Allow Auto Create
        path: allowAutoCreate
      - description: ComposedOf is the list of component templates
        displayName: Composed Of
        path: composedOf
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: IndexPatterns is the list of index to apply this template
        displayName: Index Patterns
        path: indexPatterns
      - description: Meta is extended info as JSON string
        displayName: Meta
        path: meta
      - description: Name is the custom index template name If empty, it use the ressource
          name
        displayName: Name
        path: name
      - description: Priority is the priority to apply this template
        displayName: Priority
        path: priority
      - description: RawTemplate is the raw template You can use it instead to set
          indexPatterns, composedOf, priority, template etc.
        displayName: Raw Template
        path: rawTemplate
      - description: Template is the template specification
        displayName: Template
        path: template
      - description: Aliases is the template alias as JSON string
        displayName: Aliases
        path: template.aliases
      - description: Mappings is the template mapping as JSON string
        displayName: Mappings
        path: template.mappings
      - description: Settings is the template setting as JSON string
        displayName: Settings
        path: template.settings
      - description: The version
        displayName: Version
        path: version
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: OriginalObject is the original object used on 3 way diff merge
        displayName: Original Object
        path: originalObject
      - description: Health
        displayName: Sync
        path: sync
      version: v1alpha1
    - description: Kibana is the Schema for the kibanas API
      displayName: Kibana
      kind: Kibana
      name: kibanas.kibana.k8s.webcenter.fr
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: apps/v1
      - kind: Ingress
        name: ""
        version: networking.k8s.io/v1
      - kind: NetworkPolicy
        name: ""
        version: networking.k8s.io/v1
      - kind: PodDisruptionBudget
        name: ""
        version: policy/v1
      - kind: PodMonitor
        name: ""
        version: monitoring.coreos.com/v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      specDescriptors:
      - description: Config is the Kibana config The key is the file stored on kibana/config
        displayName: Config
        path: config
      - description: Deployment permit to set the deployment settings
        displayName: Deployment
        path: deployment
      - description: Annotations permit to set annotation on deployment
        displayName: Annotations
        path: deployment.annotations
      - description: AntiAffinity permit to set anti affinity policy
        displayName: Anti Affinity
        path: deployment.antiAffinity
      - description: TopologyKey is the topology key to use Default to topology.kubernetes.io/zone
        displayName: Topology Key
        path: deployment.antiAffinity.topologyKey
      - description: Type permit to set anti affinity as soft or hard
        displayName: Type
        path: deployment.antiAffinity.type
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: deployment.env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: deployment.envFrom
      - description: InitContainerResources permit to set resources on init containers
        displayName: Init Container Resources
        path: deployment.initContainerResources
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: deployment.labels
      - description: Node permit to set extra option on Node process
        displayName: Node
        path: deployment.node
      - description: NodeSelector permit to set node selector on pod
        displayName: Node Selector
        path: deployment.nodeSelector
      - description: PodDisruptionBudget is the pod disruption budget policy
        displayName: Pod Disruption Budget Spec
        path: deployment.podDisruptionBudget
      - description: PodSpec is merged with expected pod It usefull to add some extra
          properties on pod spec
        displayName: Pod Template
        path: deployment.podTemplate
      - description: Replicas is the number of replicas
        displayName: Replicas
        path: deployment.replicas
      - description: Resources permit to set ressources on Kibana container
        displayName: Resources
        path: deployment.resources
      - description: Tolerations permit to set toleration on pod
        displayName: Tolerations
        path: deployment.tolerations
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Endpoint permit to set endpoints to access on Kibana from external
          kubernetes You can set ingress and / or load balancer
        displayName: Endpoint
        path: endpoint
      - description: Ingress permit to set ingress settings
        displayName: Ingress
        path: endpoint.ingress
      - description: Annotations to set in ingress
        displayName: Annotations
        path: endpoint.ingress.annotations
      - description: Enabled permit to enabled / disabled ingress Default to false
        displayName: Enabled
        path: endpoint.ingress.enabled
      - description: Host is the hostname to access on Kibana
        displayName: Host
        path: endpoint.ingress.host
      - description: IngressSpec it merge with expected ingress spec
        displayName: Ingress Spec
        path: endpoint.ingress.ingressSpec
      - description: Labels to set in ingress
        displayName: Labels
        path: endpoint.ingress.labels
      - description: SecretRef is the secret ref that store certificates
        displayName: Secret Ref
        path: endpoint.ingress.secretRef
      - description: Load balancer permit to set load balancer settings
        displayName: Load Balancer
        path: endpoint.loadBalancer
      - description: Enabled permit to enabled / disabled load balancer Cloud provider
          need to support it Default to false
        displayName: Enabled
        path: endpoint.loadBalancer.enabled
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: KeystoreSecretRef is the secret that store the security settings
        displayName: Keystore Secret Ref
        path: keystoreSecretRef
      - description: Monitoring permit to monitor current cluster Default, it not
          monitor cluster
        displayName: Monitoring
        path: monitoring
      - description: Metricbeat permit to monitor cluster with metricbeat and to dedicated
          monitoring cluster
        displayName: Metricbeat
        path: monitoring.metricbeat
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: monitoring.metricbeat.elasticsearchRef
      - description: Enabled permit to enable Metricbeat monitoring It will deploy
          metricbeat to collect metric Default to false
        displayName: Enabled
        path: monitoring.metricbeat.enabled
      - description: Resources permit to set resources on metricbeat
        displayName: Resources
        path: monitoring.metricbeat.initContainerResources
      - description: RefreshPeriod permit to set the time to collect data Defaullt
          to  `10s`
        displayName: Refresh Period
        path: monitoring.metricbeat.refreshPeriod
      - description: Prometheus permit to monitor cluster with Prometheus and graphana
          (via exporter)
        displayName: Prometheus
        path: monitoring.prometheus
      - description: Enabled permit to enable Prometheus monitoring It will deploy
          exporter for Kibana and add podMonitor policy Default to false
        displayName: Enabled
        path: monitoring.prometheus.enabled
      - description: 'Url is the plugin URL where to download exporter Default is
          use project https://github.com/pjhampton/kibana-prometheus-exporter If version
          is set to latest, it use arbitrary: https://github.com/pjhampton/kibana-prometheus-exporter/releases/download/8.6.0/kibanaPrometheusExporter-8.6.0.zip'
        displayName: Url
        path: monitoring.prometheus.url
      - description: PluginsList is the list of additionnal plugin to install on each
          Kibana instance Default is empty
        displayName: Plugins List
        path: pluginsList
      - description: Tls permit to set the TLS setting for Kibana access
        displayName: Tls
        path: tls
      - description: 'CertificateSecretRef is the secret that store your custom certificates.
          It need to have the following keys: tls.key, tls.crt and optionally ca.crt'
        displayName: Certificate Secret Ref
        path: tls.certificateSecretRef
      - description: Enabled permit to enabled TLS on Kibana Default to false
        displayName: Enabled
        path: tls.enabled
      - description: KeySize is the key size when generate privates keys Default to
          2048
        displayName: Key Size
        path: tls.keySize
      - description: RenewalDays is the number of days before certificate expire to
          become effective renewal Default to 30
        displayName: Renewal Days
        path: tls.renewalDays
      - description: SelfSignedCertificate permit to set self signed certificate settings
        displayName: Self Signed Certificate
        path: tls.selfSignedCertificate
      - description: AltIps permit to set subject alt names of type ip when generate
          certificate
        displayName: Alt Ips
        path: 'tls.selfSignedCertificate.altIPs:'
      - description: AltNames permit to set subject alt names of type dns when generate
          certificate
        displayName: Alt Names
        path: 'tls.selfSignedCertificate.altNames:'
      - description: ValidityDays is the number of days that certificates are valid
          Default to 365
        displayName: Validity Days
        path: tls.validityDays
      - description: Version is the Kibana version to use Default is use the latest
        displayName: Version
        path: version
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: IsError is true if controller is stuck on Error
        displayName: Is Error
        path: isOnError
      - description: Phase is the current deployment phase
        displayName: Phase
        path: phase
      - description: Url is the Kibana endpoint
        displayName: Url
        path: url
      version: v1alpha1
    - description: License is the Schema for the licenses API
      displayName: License
      kind: License
      name: licenses.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Basic permit to enable basic license Default to true if secretRef
          not set
        displayName: Basic
        path: isBasic
      - description: SecretName is the secret that contain the license
        displayName: Secret Ref
        path: secretRef
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: ExpireAt is the expiration date
        displayName: Expire At
        path: expireAt
      - description: LicenseChecksum is the checksum of the current license
        displayName: License Checksum
        path: licenseChecksum
      - description: LicenseType is the license type
        displayName: License Type
        path: licenseType
      - description: Sync
        displayName: Sync
        path: sync
      version: v1alpha1
    - description: Logstash is the Schema for the logstashes API
      displayName: Logstash
      kind: Logstash
      name: logstashes.logstash.k8s.webcenter.fr
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Ingress
        name: ""
        version: networking.k8s.io/v1
      - kind: NetworkPolicy
        name: ""
        version: networking.k8s.io/v1
      - kind: PodDisruptionBudget
        name: ""
        version: policy/v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: apps/v1
      specDescriptors:
      - description: Config is the Logstash config The key is the file stored on logstash/config
        displayName: Config
        path: config
      - description: Deployment permit to set the deployment settings
        displayName: Deployment
        path: deployment
      - description: AdditionalVolumes permit to use additionnal volumes Default is
          empty
        displayName: Additional Volumes
        path: deployment.additionalVolumes
      - description: Name is the volume name
        displayName: Name
        path: deployment.additionalVolumes[0].name
      - description: Annotations permit to set annotation on deployment
        displayName: Annotations
        path: deployment.annotations
      - description: AntiAffinity permit to set anti affinity policy
        displayName: Anti Affinity
        path: deployment.antiAffinity
      - description: TopologyKey is the topology key to use Default to topology.kubernetes.io/zone
        displayName: Topology Key
        path: deployment.antiAffinity.topologyKey
      - description: Type permit to set anti affinity as soft or hard
        displayName: Type
        path: deployment.antiAffinity.type
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: deployment.env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: deployment.envFrom
      - description: InitContainerResources permit to set resources on init containers
        displayName: Init Container Resources
        path: deployment.initContainerResources
      - description: Node permit to set extra option on Node process
        displayName: Jvm
        path: deployment.jvm
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: deployment.labels
      - description: NodeSelector permit to set node selector on pod
        displayName: Node Selector
        path: deployment.nodeSelector
      - description: Persistence is the spec to persist data
        displayName: Persistence
        path: deployment.persistence
      - description: Volume is the volume source to use instead volumeClaim It usefull
          if you should to use hostPath
        displayName: Volume
        path: deployment.persistence.volume
      - description: VolumeClaim is the persistent volume claim spec use by statefullset
        displayName: Volume Claim Spec
        path: deployment.persistence.volumeClaim
      - description: PodDisruptionBudget is the pod disruption budget policy
        displayName: Pod Disruption Budget Spec
        path: deployment.podDisruptionBudget
      - description: PodSpec is merged with expected pod It usefull to add some extra
          properties on pod spec
        displayName: Pod Template
        path: deployment.podTemplate
      - description: Ports is the list of container port to affect on logstash container
          It can be usefull to expose beats input
        displayName: Ports
        path: deployment.ports
      - description: Replicas is the number of replicas
        displayName: Replicas
        path: deployment.replicas
      - description: Resources permit to set ressources on Logstash container
        displayName: Resources
        path: deployment.resources
      - description: Tolerations permit to set toleration on pod
        displayName: Tolerations
        path: deployment.tolerations
      - description: ElasticsearchRef is the Elasticsearch ref to connect on. It will
          expose CA certificate and Elasticsearch URL as encironment variable to use
          it in logstash setting
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: Ingresses permit to declare some ingresses The name is decorated
          with cluster name and so on
        displayName: Ingresses
        path: ingresses
      - description: Annotations is the extra annotations for ingress
        displayName: Annotations
        path: ingresses[0].annotations
      - description: ContainerPort is the port to set when create service consumed
          by ingress
        displayName: Container Port
        path: ingresses[0].containerPort
      - description: ContainerPortProtocol is the protocol to set when create service
          consumed by ingress
        displayName: Container Port Protocol
        path: ingresses[0].containerProtocol
      - description: Labels is the extra labels for ingress
        displayName: Labels
        path: ingresses[0].labels
      - description: Name is the ingress name The name is decorated with cluster name
          and so on
        displayName: Name
        path: ingresses[0].name
      - description: Spec is the ingress spec
        displayName: Spec
        path: ingresses[0].spec
      - description: KeystoreSecretRef is the secret that store the security settings
        displayName: Keystore Secret Ref
        path: keystoreSecretRef
      - description: Monitoring permit to monitor current cluster Default, it not
          monitor cluster
        displayName: Monitoring
        path: monitoring
      - description: Metricbeat permit to monitor cluster with metricbeat and to dedicated
          monitoring cluster
        displayName: Metricbeat
        path: monitoring.metricbeat
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: monitoring.metricbeat.elasticsearchRef
      - description: Enabled permit to enable Metricbeat monitoring It will deploy
          metricbeat to collect metric Default to false
        displayName: Enabled
        path: monitoring.metricbeat.enabled
      - description: Resources permit to set resources on metricbeat
        displayName: Resources
        path: monitoring.metricbeat.initContainerResources
      - description: RefreshPeriod permit to set the time to collect data Defaullt
          to  `10s`
        displayName: Refresh Period
        path: monitoring.metricbeat.refreshPeriod
      - description: Prometheus permit to monitor cluster with Prometheus and graphana
          (via exporter)
        displayName: Prometheus
        path: monitoring.prometheus
      - description: Enabled permit to enable Prometheus monitoring It will deploy
          exporter for Logstash and add podMonitor policy Default to false
        displayName: Enabled
        path: monitoring.prometheus.enabled
      - description: 'Url is the plugin URL where to download exporter Default is
          use project https://github.com/pjhampton/kibana-prometheus-exporter If version
          is set to latest, it use arbitrary: https://github.com/pjhampton/kibana-prometheus-exporter/releases/download/8.6.0/kibanaPrometheusExporter-8.6.0.zip'
        displayName: Url
        path: monitoring.prometheus.url
      - description: Patterns is the patterns specification used by grok The key is
          the file stored on logstash/patterns
        displayName: Pattern
        path: pattern
      - description: Pipeline is the pipeline specification The key is the file stored
          on logstash/pipelines
        displayName: Pipeline
        path: pipeline
      - description: PluginsList is the list of additionnal plugin to install on each
          logstash instance Default is empty
        displayName: Plugins List
        path: pluginsList
      - description: Services permit to declare some services The name is decorated
          with cluster name and so on
        displayName: Services
        path: services
      - description: Annotations is the extra annotations for ingress
        displayName: Annotations
        path: services[0].annotations
      - description: Labels is the extra labels for ingress
        displayName: Labels
        path: services[0].labels
      - description: Name is the service name The name is decorated with cluster name
          and so on
        displayName: Name
        path: services[0].name
      - description: Spec is the service spec
        displayName: Spec
        path: services[0].spec
      - description: Version is the logstash version to use Default is use the latest
        displayName: Version
        path: version
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: IsError is true if controller is stuck on Error
        displayName: Is Error
        path: isOnError
      - description: Phase is the current deployment phase
        displayName: Phase
        path: phase
      version: v1alpha1
    - description: LogstashPipeline is the Schema for the logstashpipelines API
      displayName: Logstash Pipeline
      kind: LogstashPipeline
      name: logstashpipelines.kibanaapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: Description is the pipeline description
        displayName: Description
        path: description
      - description: KibanaRef is the Kibana ref to connect on.
        displayName: Kibana Ref
        path: kibanaRef
      - description: KibanaCredentialSecretRef is the secret that contain credential
          to acess on Kibana API. It need to contain the keys `username` and `password`.
        displayName: Kibana Credential Secret Ref
        path: kibanaRef.credentialSecretRef
      - description: ExternalKibanaRef is the external Kibana not managed by operator
        displayName: External Kibana Ref
        path: kibanaRef.external
      - description: 'KibanaCaSecretRef is the secret that store your custom CA certificate
          to connect on Kibana API. It need to have the following keys: ca.crt'
        displayName: Kibana Ca Secret Ref
        path: kibanaRef.kibanaCASecretRef
      - description: ManagedKibanaRef is the managed Kibana by operator
        displayName: Managed Kibana Ref
        path: kibanaRef.managed
      - description: Name is the Logstash pipeline ID If empty, it use the ressource
          name
        displayName: Name
        path: name
      - description: Pipeline is the pipeline definition
        displayName: Pipeline
        path: pipeline
      - description: Settings is the pipeline settings It's a JSON string
        displayName: Settings
        path: settings
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: OriginalObject is the original object used on 3 way diff merge
        displayName: Original Object
        path: originalObject
      - description: Sync
        displayName: Sync
        path: sync
      version: v1alpha1
    - description: Metricbeat is the Schema for the metricbeats API
      displayName: Metricbeat
      kind: Metricbeat
      name: metricbeats.beat.k8s.webcenter.fr
      specDescriptors:
      - description: Config is the Metricbeat config The key is the file stored on
          metricbeat
        displayName: Config
        path: config
      - description: Deployment permit to set the deployment settings
        displayName: Deployment
        path: deployment
      - description: AdditionalVolumes permit to use additionnal volumes Default is
          empty
        displayName: Additional Volumes
        path: deployment.additionalVolumes
      - description: Name is the volume name
        displayName: Name
        path: deployment.additionalVolumes[0].name
      - description: Annotations permit to set annotation on deployment
        displayName: Annotations
        path: deployment.annotations
      - description: AntiAffinity permit to set anti affinity policy
        displayName: Anti Affinity
        path: deployment.antiAffinity
      - description: TopologyKey is the topology key to use Default to topology.kubernetes.io/zone
        displayName: Topology Key
        path: deployment.antiAffinity.topologyKey
      - description: Type permit to set anti affinity as soft or hard
        displayName: Type
        path: deployment.antiAffinity.type
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: deployment.env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: deployment.envFrom
      - description: InitContainerResources permit to set resources on init containers
        displayName: Init Container Resources
        path: deployment.initContainerResources
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: deployment.labels
      - description: NodeSelector permit to set node selector on pod
        displayName: Node Selector
        path: deployment.nodeSelector
      - description: Persistence is the spec to persist data Default is emptyDir
        displayName: Persistence
        path: deployment.persistence
      - description: Volume is the volume source to use instead volumeClaim It usefull
          if you should to use hostPath
        displayName: Volume
        path: deployment.persistence.volume
      - description: VolumeClaim is the persistent volume claim spec use by statefullset
        displayName: Volume Claim Spec
        path: deployment.persistence.volumeClaim
      - description: PodDisruptionBudget is the pod disruption budget policy
        displayName: Pod Disruption Budget Spec
        path: deployment.podDisruptionBudget
      - description: PodSpec is merged with expected pod It usefull to add some extra
          properties on pod spec
        displayName: Pod Template
        path: deployment.podTemplate
      - description: Replicas is the number of replicas
        displayName: Replicas
        path: deployment.replicas
      - description: Resources permit to set ressources on container
        displayName: Resources
        path: deployment.resources
      - description: Tolerations permit to set toleration on pod
        displayName: Tolerations
        path: deployment.tolerations
      - description: ElasticsearchRef is the Elasticsearch ref to connect on. It will
          generate Elasticsearch output bas on it
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: Module is the module specification The key is the file stored
          on metricbeat/modules.d
        displayName: Module
        path: module
      - description: Version is the Metricbeat version to use Default is use the latest
        displayName: Version
        path: version
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: IsError is true if controller is stuck on Error
        displayName: Is Error
        path: isOnError
      - description: Phase is the current deployment phase
        displayName: Phase
        path: phase
      version: v1alpha1
    - description: RoleMapping is the Schema for the rolemappings API
      displayName: Role Mapping
      kind: RoleMapping
      name: rolemappings.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Enabled permit to enable or disable the role mapping Default
          to true
        displayName: Enabled
        path: enabled
      - description: Metadata is the meta data JSON string
        displayName: Metadata
        path: metadata
      - description: Name is the custom role mapping name If empty, it use the ressource
          name
        displayName: Name
        path: name
      - description: Roles is the list of role to map
        displayName: Roles
        path: roles
      - description: Rules is the mapping rules JSON string
        displayName: Rules
        path: rules
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: OriginalObject is the original object used on 3 way diff merge
        displayName: Original Object
        path: originalObject
      - description: Sync
        displayName: Sync
        path: sync
      version: v1alpha1
    - description: Role is the Schema for the roles API
      displayName: Role
      kind: Role
      name: roles.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: Applications is the list of application privilege
        displayName: Applications
        path: applications
      - description: Application
        displayName: Application
        path: applications[0].application
      - description: Privileges
        displayName: Privileges
        path: applications[0].privileges
      - description: Resources
        displayName: Resources
        path: applications[0].resources
      - description: Cluster is a list of cluster privileges
        displayName: Cluster
        path: cluster
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Global  defining global privileges JSON string
        displayName: Global
        path: global
      - description: Indices is the list of indices permissions
        displayName: Indices
        path: indices
      - description: FieldSecurity JSON string
        displayName: Field Security
        path: indices[0].fieldSecurity
      - description: Names
        displayName: Names
        path: indices[0].names
      - description: Privileges
        displayName: Privileges
        path: indices[0].privileges
      - description: Query
        displayName: Query
        path: indices[0].query
      - description: Metadata is optional meta-data JSON string
        displayName: Metadata
        path: metadata
      - description: Name is the custom role name If empty, it use the ressource name
        displayName: Name
        path: name
      - description: RunAs is the list of users that the owners of this role can impersonate
        displayName: Run As
        path: runAs
      - description: TransientMetadata JSON string
        displayName: Transient Metadata
        path: transientMetadata
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: OriginalObject is the original object used on 3 way diff merge
        displayName: Original Object
        path: originalObject
      - description: Sync
        displayName: Sync
        path: sync
      version: v1alpha1
    - description: Role is the Schema for the roles API
      displayName: Role
      kind: Role
      name: roles.kibanaapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: Elasticsearch is the Elasticsearch right
        displayName: Elasticsearch
        path: elasticsearch
      - description: Cluster is the cluster privilege
        displayName: Cluster
        path: elasticsearch.cluster
      - description: Indices is the indice privileges
        displayName: Indices
        path: elasticsearch.indices
      - description: FieldSecurity JSON string
        displayName: Field Security
        path: elasticsearch.indices[0].fieldSecurity
      - description: Names
        displayName: Names
        path: elasticsearch.indices[0].names
      - description: Privileges
        displayName: Privileges
        path: elasticsearch.indices[0].privileges
      - description: Query
        displayName: Query
        path: elasticsearch.indices[0].query
      - description: RunAs is the privilege like users
        displayName: Run As
        path: elasticsearch.run_as
      - description: Kibana is the Kibana right
        displayName: Kibana
        path: kibana
      - description: KibanaRef is the Kibana ref to connect on.
        displayName: Kibana Ref
        path: kibanaRef
      - description: KibanaCredentialSecretRef is the secret that contain credential
          to acess on Kibana API. It need to contain the keys `username` and `password`.
        displayName: Kibana Credential Secret Ref
        path: kibanaRef.credentialSecretRef
      - description: ExternalKibanaRef is the external Kibana not managed by operator
        displayName: External Kibana Ref
        path: kibanaRef.external
      - description: 'KibanaCaSecretRef is the secret that store your custom CA certificate
          to connect on Kibana API. It need to have the following keys: ca.crt'
        displayName: Kibana Ca Secret Ref
        path: kibanaRef.kibanaCASecretRef
      - description: ManagedKibanaRef is the managed Kibana by operator
        displayName: Managed Kibana Ref
        path: kibanaRef.managed
      - description: Base is the base privilege
        displayName: Base
        path: kibana[0].base
      - description: Feature ontains privileges for specific features
        displayName: Feature
        path: kibana[0].feature
      - description: Spaces is the list of space o apply the privileges to
        displayName: Spaces
        path: kibana[0].spaces
      - description: Metadata is optional meta-data JSON string
        displayName: Metadata
        path: metadata
      - description: Name is the role name If empty, it use the ressource name
        displayName: Name
        path: name
      - description: TransientMedata
        displayName: Transient Medata
        path: transient_metadata
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: OriginalObject is the original object used on 3 way diff merge
        displayName: Original Object
        path: originalObject
      - description: Sync
        displayName: Sync
        path: sync
      version: v1alpha1
    - description: SnapshotLifecyclePolicy is the Schema for the snapshotlifecyclepolicies
        API
      displayName: Snapshot Lifecycle Policy
      kind: SnapshotLifecyclePolicy
      name: snapshotlifecyclepolicies.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: Config is the config backup
        displayName: Config
        path: config
      - description: ExpendWildcards
        displayName: Expend Wildcards
        path: config.expandWildcards
      - description: FeatureStates
        displayName: Feature States
        path: config.featureStates
      - description: IgnoreUnavailable
        displayName: Ignore Unavailable
        path: config.ignoreUnavailable
      - description: IncludeGlobalState
        displayName: Include Global State
        path: config.includeGlobalState
      - description: Indices
        displayName: Indices
        path: config.indices
      - description: Metadata
        displayName: Metadata
        path: config.metadata
      - description: Partial
        displayName: Partial
        path: config.partial
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Name is the template name to generte final name
        displayName: Name
        path: name
      - description: Repository is the target repository to store backup
        displayName: Repository
        path: repository
      - description: Retention is the retention policy
        displayName: Retention
        path: retention
      - description: ExpireAfter
        displayName: Expire After
        path: retention.expireAfter
      - description: MaxCount
        displayName: Max Count
        path: retention.maxCount
      - description: MinCount
        displayName: Min Count
        path: retention.minCount
      - description: Schedule is schedule policy
        displayName: Schedule
        path: schedule
      - description: SnapshotLifecyclePolicyName is the custom snapshot lifecycle
          policy name If empty, it use the ressource name
        displayName: Snapshot Lifecycle Policy Name
        path: snapshotLifecyclePolicyName
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: OriginalObject is the original object used on 3 way diff merge
        displayName: Original Object
        path: originalObject
      - description: Sync
        displayName: Sync
        path: sync
      version: v1alpha1
    - description: SnapshotRepository is the Schema for the snapshotrepositories API
      displayName: Snapshot Repository
      kind: SnapshotRepository
      name: snapshotrepositories.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Name is the custom snapshot repository name If empty, it use
          the ressource name
        displayName: Name
        path: name
      - description: The config of snapshot repository
        displayName: Settings
        path: settings
      - description: Type the Snapshot repository type
        displayName: Type
        path: type
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: OriginalObject is the original object used on 3 way diff merge
        displayName: Original Object
        path: originalObject
      - description: Sync
        displayName: Sync
        path: sync
      version: v1alpha1
    - description: User is the Schema for the users API
      displayName: User
      kind: User
      name: users.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Email is the email user
        displayName: Email
        path: email
      - description: Enabled permit to enable user Default to true
        displayName: Enabled
        path: enabled
      - description: FullName is the full name
        displayName: Full Name
        path: fullName
      - description: IsProtected must be set when you manage protected account like
          kibana_system Default to false
        displayName: Is Protected
        path: isProtected
      - description: Metadata is the meta data Is JSON string
        displayName: Metadata
        path: metadata
      - description: PasswordHash is the password as hash
        displayName: Password Hash
        path: passwordHash
      - description: Roles is the list of roles
        displayName: Roles
        path: roles
      - description: CredentialSecretRef permit to set password. Or you can use password
          hash
        displayName: Secret Ref
        path: secretRef
      - description: key is the key name on secret to read the effective password
        displayName: Key
        path: secretRef.key
      - description: Name is the secret name
        displayName: Name
        path: secretRef.name
      - description: Username is the user name If empty, it use the ressource name
        displayName: Username
        path: username
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: OriginalObject is the original object used on 3 way diff merge
        displayName: Original Object
        path: originalObject
      - description: PasswordHash is the current password hash
        displayName: Password Hash
        path: passwordHash
      - description: Sync
        displayName: Sync
        path: sync
      version: v1alpha1
    - description: UserSpace is the Schema for the userspaces API
      displayName: User Space
      kind: UserSpace
      name: userspaces.kibanaapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: Color is the user space color
        displayName: Color
        path: color
      - description: Description is the user space description
        displayName: Description
        path: description
      - description: DisabledFeatures is the list of feature disabled on current user
          space
        displayName: Disabled Features
        path: disabledFeatures
      - description: ID is the user space ID If empty, it use the ressource name
        displayName: ID
        path: id
      - description: Initials is the user space initials
        displayName: Initials
        path: initials
      - description: KibanaRef is the Kibana ref to connect on.
        displayName: Kibana Ref
        path: kibanaRef
      - description: KibanaCredentialSecretRef is the secret that contain credential
          to acess on Kibana API. It need to contain the keys `username` and `password`.
        displayName: Kibana Credential Secret Ref
        path: kibanaRef.credentialSecretRef
      - description: ExternalKibanaRef is the external Kibana not managed by operator
        displayName: External Kibana Ref
        path: kibanaRef.external
      - description: 'KibanaCaSecretRef is the secret that store your custom CA certificate
          to connect on Kibana API. It need to have the following keys: ca.crt'
        displayName: Kibana Ca Secret Ref
        path: kibanaRef.kibanaCASecretRef
      - description: ManagedKibanaRef is the managed Kibana by operator
        displayName: Managed Kibana Ref
        path: kibanaRef.managed
      - description: Name is the user space name
        displayName: Name
        path: name
      - description: CopyObjects permit to copy objects into current user space
        displayName: Kibana User Space Copies
        path: userSpaceCopies
      - description: CreateNewCopies is set to true to create new copy of objects
          Default to false
        displayName: Create New Copies
        path: userSpaceCopies[0].createNewCopies
      - description: CreateNewCopies is set to true to create new copy of objects
          Default to false
        displayName: Force Update When Reconcile
        path: userSpaceCopies[0].forceUpdate
      - description: IncludeReferences is set to true to copy all references Default
          to true
        displayName: Include References
        path: userSpaceCopies[0].includeReferences
      - description: OriginUserSpace is the user space name from copy objects
        displayName: Kibana Objects
        path: userSpaceCopies[0].objects
      - description: ID is the object to copy
        displayName: ID
        path: userSpaceCopies[0].objects[0].id
      - description: Tpye is the object type to copy
        displayName: Type
        path: userSpaceCopies[0].objects[0].type
      - description: OriginUserSpace is the user space name from copy objects
        displayName: Origin User Space
        path: userSpaceCopies[0].originUserSpace
      - description: Overwrite is set to true to overwrite existing objects Default
          to true
        displayName: Overwrite
        path: userSpaceCopies[0].overwrite
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: OriginalObject is the original object used on 3 way diff merge
        displayName: Original Object
        path: originalObject
      - description: Sync
        displayName: Sync
        path: sync
      version: v1alpha1
    - description: Watch is the Schema for the watches API
      displayName: Watch
      kind: Watch
      name: watches.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: Actions JSON string
        displayName: Actions
        path: actions
      - description: Condition JSON string
        displayName: Condition
        path: condition
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Input JSON string
        displayName: Input
        path: input
      - description: Metadata JSON string
        displayName: Metadata
        path: metadata
      - description: Name is the custom watch name If empty, it use the ressource
          name
        displayName: Name
        path: name
      - description: ThrottlePeriod
        displayName: Throttle Period
        path: throttle_period
      - description: ThrottlePeriodInMillis
        displayName: Throttle Period In Millis
        path: throttle_period_in_millis
      - description: Transform JSON string
        displayName: Transform
        path: transform
      - description: Trigger JSON string
        displayName: Trigger
        path: trigger
      statusDescriptors:
      - description: List of conditions
        displayName: Conditions
        path: conditions
      - description: OriginalObject is the original object used on 3 way diff merge
        displayName: Original Object
        path: originalObject
      - description: Sync
        displayName: Sync
        path: sync
      version: v1alpha1
    - description: Cerebro is the Schema for the cerebroes API
      displayName: Cerebro
      kind: Cerebro
      name: cerebros.cerebro.k8s.webcenter.fr
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: apps/v1
      - kind: Ingress
        name: ""
        version: networking.k8s.io/v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      specDescriptors:
      - description: Config is the Cerebro config The key is the file stored on kibana/config
        displayName: Config
        path: config
      - description: Deployment permit to set the deployment settings
        displayName: Deployment
        path: deployment
      - description: Annotations permit to set annotation on deployment
        displayName: Annotations
        path: deployment.annotations
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: deployment.env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: deployment.envFrom
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: deployment.labels
      - description: Node permit to set extra option on Node process
        displayName: Node
        path: deployment.node
      - description: NodeSelector permit to set node selector on pod
        displayName: Node Selector
        path: deployment.nodeSelector
      - description: PodSpec is merged with expected pod It usefull to add some extra
          properties on pod spec
        displayName: Pod Template
        path: deployment.podTemplate
      - description: Replicas is the number of replicas
        displayName: Replicas
        path: deployment.replicas
      - description: Resources permit to set ressources on Kibana container
        displayName: Resources
        path: deployment.resources
      - description: Tolerations permit to set toleration on pod
        displayName: Tolerations
        path: deployment.tolerations
      - description: Endpoint permit to set endpoints to access on Cerebro from external
          kubernetes You can set ingress and / or load balancer
        displayName: Endpoint
        path: endpoint
      - description: Ingress permit to set ingress settings
        displayName: Ingress
        path: endpoint.ingress
      - description: Annotations to set in ingress
        displayName: Annotations
        path: endpoint.ingress.annotations
      - description: Enabled permit to enabled / disabled ingress Default to false
        displayName: Enabled
        path: endpoint.ingress.enabled
      - description: Host is the hostname to access on Kibana
        displayName: Host
        path: endpoint.ingress.host
      - description: IngressSpec it merge with expected ingress spec
        displayName: Ingress Spec
        path: endpoint.ingress.ingressSpec
      - description: Labels to set in ingress
        displayName: Labels
        path: endpoint.ingress.labels
      - description: SecretRef is the secret ref that store certificates
        displayName: Secret Ref
        path: endpoint.ingress.secretRef
      - description: Load balancer permit to set load balancer settings
        displayName: Load Balancer
        path: endpoint.loadBalancer
      - description: Enabled permit to enabled / disabled load balancer Cloud provider
          need to support it Default to false
        displayName: Enabled
        path: endpoint.loadBalancer.enabled
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: Version is the Cerebro version to use Default is use the latest
        displayName: Version
        path: version
      statusDescriptors:
      - description: Url is the Cerebro endpoint
        displayName: Url
        path: url
      version: v1
    - description: ComponentTemplate is the Schema for the componenttemplates API
      displayName: Component Template
      kind: ComponentTemplate
      name: componenttemplates.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: Aliases is the component aliases
        displayName: Aliases
        path: aliases
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Mappings is the component mapping
        displayName: Mappings
        path: mappings
      - description: Name is the custom component template name If empty, it use the
          ressource name
        displayName: Name
        path: name
      - description: Template is the raw template You can use it instead to set settings,
          mappings or aliases
        displayName: Template
        path: rawTemplate
      - description: Settings is the component setting
        displayName: Settings
        path: settings
      version: v1
    - description: Elasticsearch is the Schema for the elasticsearchs API
      displayName: Elasticsearch
      kind: Elasticsearch
      name: elasticsearches.elasticsearch.k8s.webcenter.fr
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: apps/v1
      - kind: Ingress
        name: ""
        version: networking.k8s.io/v1
      - kind: License
        name: ""
        version: elasticsearchapi.k8s.webcenter.fr/v1
      - kind: Metricbeat
        name: ""
        version: beat.k8s.webcenter.fr/v1
      - kind: NetworkPolicy
        name: ""
        version: networking.k8s.io/v1
      - kind: PodDisruptionBudget
        name: ""
        version: policy/v1
      - kind: PodMonitor
        name: ""
        version: monitoring.coreos.com/v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: apps/v1
      - kind: User
        name: ""
        version: elasticsearchapi.k8s.webcenter.fr/v1
      specDescriptors:
      - description: ClusterName is the Elasticsearch cluster name Default is use
          the custom ressource name
        displayName: Cluster Name
        path: clusterName
      - description: Endpoint permit to set endpoints to access on Elasticsearch from
          external kubernetes You can set ingress and / or load balancer
        displayName: Endpoint
        path: endpoint
      - description: Ingress permit to set ingress settings
        displayName: Ingress
        path: endpoint.ingress
      - description: Annotations to set in ingress
        displayName: Annotations
        path: endpoint.ingress.annotations
      - description: Enabled permit to enabled / disabled ingress Default to false
        displayName: Enabled
        path: endpoint.ingress.enabled
      - description: Host is the hostname to access on Elasticsearch
        displayName: Host
        path: endpoint.ingress.host
      - description: IngressSpec it merge with expected ingress spec
        displayName: Ingress Spec
        path: endpoint.ingress.ingressSpec
      - description: Labels to set in ingress
        displayName: Labels
        path: endpoint.ingress.labels
      - description: SecretRef is the secret ref that store certificates
        displayName: Secret Ref
        path: endpoint.ingress.secretRef
      - description: TargetNodeGroupName permit to define if specific node group is
          responsible to receive external access, like ingest nodes
        displayName: Target Node Group Name
        path: endpoint.ingress.targetNodeGroupName
      - description: Load balancer permit to set load balancer settings
        displayName: Load Balancer
        path: endpoint.loadBalancer
      - description: Enabled permit to enabled / disabled load balancer Cloud provider
          need to support it Default to false
        displayName: Enabled
        path: endpoint.loadBalancer.enabled
      - description: TargetNodeGroupName permit to define if specific node group is
          responsible to receive external access, like ingest nodes
        displayName: Target Node Group Name
        path: endpoint.loadBalancer.targetNodeGroupName
      - description: GlobalNodeGroup permit to set some default parameters for each
          node groups
        displayName: Global Node Group
        path: globalNodeGroup
      - description: AdditionalVolumes permit to use additionnal volumes Default is
          empty
        displayName: Additional Volumes
        path: globalNodeGroup.additionalVolumes
      - description: Name is the volume name
        displayName: Name
        path: globalNodeGroup.additionalVolumes[0].name
      - description: Annotations permit to set annotation on containers
        displayName: Annotations
        path: globalNodeGroup.annotations
      - description: AntiAffinity permit to set anti affinity policy
        displayName: Anti Affinity
        path: globalNodeGroup.antiAffinity
      - description: TopologyKey is the topology key to use Default to topology.kubernetes.io/zone
        displayName: Topology Key
        path: globalNodeGroup.antiAffinity.topologyKey
      - description: Type permit to set anti affinity as soft or hard
        displayName: Type
        path: globalNodeGroup.antiAffinity.type
      - description: CacertsSecretRef is the secret that store custom CA to import
          on cacerts It usefull to access on onpremise S3 service to store snaoshot
          and more
        displayName: Cacerts Secret Ref
        path: globalNodeGroup.caSecretRef
      - description: Config is the Elasticsearch config dedicated for this node groups
          like roles The key is the file stored on elasticsearch/config
        displayName: Config
        path: globalNodeGroup.config
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: globalNodeGroup.env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: globalNodeGroup.envFrom
      - description: InitContainerResources permit to set resources on init containers
        displayName: Init Container Resources
        path: globalNodeGroup.initContainerResources
      - description: Jvm permit to set extra option on JVM like memory or proxy to
          download plugins Becarefull with memory, not forget to set the right ressource
          on pod
        displayName: Jvm
        path: globalNodeGroup.jvm
      - description: KeystoreSecretRef is the secret that store the security settings
        displayName: Keystore Secret Ref
        path: globalNodeGroup.keystoreSecretRef
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: globalNodeGroup.labels
      - description: PodDisruptionBudget is the pod disruption budget policy
        displayName: Pod Disruption Budget Spec
        path: globalNodeGroup.podDisruptionBudget
      - description: PodTemplate is merged with expected pod It usefull to add some
          extra properties on pod spec
        displayName: Pod Template
        path: globalNodeGroup.podTemplate
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: LicenseSecretRef permit to set secret that contain Elasticsearch
          license on key `license`
        displayName: License Secret Ref
        path: licenseSecretRef
      - description: Monitoring permit to monitor current cluster Default, it not
          monitor cluster
        displayName: Monitoring
        path: monitoring
      - description: Metricbeat permit to monitor cluster with metricbeat and to dedicated
          monitoring cluster
        displayName: Metricbeat
        path: monitoring.metricbeat
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: monitoring.metricbeat.elasticsearchRef
      - description: Enabled permit to enable Metricbeat monitoring It will deploy
          metricbeat to collect metric Default to false
        displayName: Enabled
        path: monitoring.metricbeat.enabled
      - description: Resources permit to set resources on metricbeat
        displayName: Resources
        path: monitoring.metricbeat.initContainerResources
      - description: RefreshPeriod permit to set the time to collect data Defaullt
          to  `10s`
        displayName: Refresh Period
        path: monitoring.metricbeat.refreshPeriod
      - description: Version is the Metricbeat version to use Default it use the same
          version of the product that it monitor
        displayName: Version
        path: monitoring.metricbeat.version
      - description: Prometheus permit to monitor cluster with Prometheus and graphana
          (via exporter)
        displayName: Prometheus
        path: monitoring.prometheus
      - description: Enabled permit to enable Prometheus monitoring It will deploy
          exporter for Elasticsearch and add podMonitor policy Default to false
        displayName: Enabled
        path: monitoring.prometheus.enabled
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: monitoring.prometheus.image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: monitoring.prometheus.imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: monitoring.prometheus.imagePullSecrets
      - description: Resources permit to set ressources on Prometheus expporter container
          If not defined, it will use the default requirements
        displayName: Resources
        path: monitoring.prometheus.resources
      - description: Version is the exporter version to use Default is use the latest
        displayName: Version
        path: monitoring.prometheus.version
      - description: NodeGroups permit to groups node per use case For exemple master,
          data and ingest
        displayName: Node Groups
        path: nodeGroups
      - description: Annotations permit to set annotation on containers
        displayName: Annotations
        path: nodeGroups[0].annotations
      - description: AntiAffinity permit to set anti affinity policy
        displayName: Anti Affinity
        path: nodeGroups[0].antiAffinity
      - description: TopologyKey is the topology key to use Default to topology.kubernetes.io/zone
        displayName: Topology Key
        path: nodeGroups[0].antiAffinity.topologyKey
      - description: Type permit to set anti affinity as soft or hard
        displayName: Type
        path: nodeGroups[0].antiAffinity.type
      - description: Config is the Elasticsearch config dedicated for this node groups
          The key is the file stored on elasticsearch/config
        displayName: Config
        path: nodeGroups[0].config
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: nodeGroups[0].env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: nodeGroups[0].envFrom
      - description: Jvm permit to set extra option on JVM like Xmx, Xms
        displayName: Jvm
        path: nodeGroups[0].jvm
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: nodeGroups[0].labels
      - description: Name is the the node group name
        displayName: Name
        path: nodeGroups[0].name
      - description: NodeSelector permit to set node selector on pod
        displayName: Node Selector
        path: nodeGroups[0].nodeSelector
      - description: Persistence is the spec to persist data
        displayName: Persistence
        path: nodeGroups[0].persistence
      - description: Volume is the volume source to use instead volumeClaim It usefull
          if you should to use hostPath
        displayName: Volume
        path: nodeGroups[0].persistence.volume
      - description: VolumeClaim is the persistent volume claim spec use by statefullset
        displayName: Volume Claim Spec
        path: nodeGroups[0].persistence.volumeClaim
      - description: PodDisruptionBudget is the pod disruption budget policy
        displayName: Pod Disruption Budget Spec
        path: nodeGroups[0].podDisruptionBudget
      - description: PodTemplate is merged with expected pod It usefull to add some
          extra properties on pod spec
        displayName: Pod Template
        path: nodeGroups[0].podTemplate
      - description: Replicas is the number of replicas
        displayName: Replicas
        path: nodeGroups[0].replicas
      - description: Resources permit to set ressources on Elasticsearch container
        displayName: Resources
        path: nodeGroups[0].resources
      - description: Roles is the list of Elasticsearch roles
        displayName: Roles
        path: nodeGroups[0].roles
      - description: Tolerations permit to set toleration on pod
        displayName: Tolerations
        path: nodeGroups[0].tolerations
      - description: WaitClusterStatus permit to wait the cluster state on readyness
          probe Default to green
        displayName: Wait Cluster Status
        path: nodeGroups[0].waitClusterStatus
      - description: PluginsList is the list of additionnal plugin to install on each
          Elasticsearch node Default is empty
        displayName: Plugins List
        path: pluginsList
      - description: SetVMMaxMapCount permit to set the right value for VMMaxMapCount
          on node It need to run pod as root with privileged option Default is true
        displayName: Set VMMax Map Count
        path: setVMMaxMapCount
      - description: Tls permit to set the TLS setting for API access
        displayName: Tls
        path: tls
      - description: 'CertificateSecretRef is the secret that store your custom certificates.
          It need to have the following keys: tls.key, tls.crt and optionally ca.crt'
        displayName: Certificate Secret Ref
        path: tls.certificateSecretRef
      - description: Enabled permit to enabled TLS on API Default true
        displayName: Enabled
        path: tls.enabled
      - description: KeySize is the key size when generate privates keys Default to
          2048
        displayName: Key Size
        path: tls.keySize
      - description: RenewalDays is the number of days before certificate expire to
          become effective renewal Default to 30
        displayName: Renewal Days
        path: tls.renewalDays
      - description: SelfSignedCertificate permit to set self signed certificate settings
        displayName: Self Signed Certificate
        path: tls.selfSignedCertificate
      - description: AltIps permit to set subject alt names of type ip when generate
          certificate
        displayName: Alt Ips
        path: tls.selfSignedCertificate.altIPs
      - description: AltNames permit to set subject alt names of type dns when generate
          certificate
        displayName: Alt Names
        path: tls.selfSignedCertificate.altNames
      - description: ValidityDays is the number of days that certificates are valid
          Default to 365
        displayName: Validity Days
        path: tls.validityDays
      - description: Version is the Elasticsearch version to use Default is use the
          latest
        displayName: Version
        path: version
      statusDescriptors:
      - description: CredentialsRef is the secret that store the credentials to access
          on Elasticsearch
        displayName: Credentials Ref
        path: credentialsRef
      - description: Health is the cluster health
        displayName: Health
        path: health
      - description: IsBootstrapping is true when the cluster is bootstraping
        displayName: Is Bootstrapping
        path: isBootstrapping
      - description: Url is the Elasticsearch endpoint
        displayName: Url
        path: url
      version: v1
    - description: Filebeat is the Schema for the filebeats API
      displayName: Filebeat
      kind: Filebeat
      name: filebeats.beat.k8s.webcenter.fr
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Ingress
        name: ""
        version: networking.k8s.io/v1
      - kind: NetworkPolicy
        name: ""
        version: networking.k8s.io/v1
      - kind: PodDisruptionBudget
        name: ""
        version: policy/v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: apps/v1
      specDescriptors:
      - description: Config is the Filebeat config The key is the file stored on filebeat
        displayName: Config
        path: config
      - description: Deployment permit to set the deployment settings
        displayName: Deployment
        path: deployment
      - description: AdditionalVolumes permit to use additionnal volumes Default is
          empty
        displayName: Additional Volumes
        path: deployment.additionalVolumes
      - description: Name is the volume name
        displayName: Name
        path: deployment.additionalVolumes[0].name
      - description: Annotations permit to set annotation on deployment
        displayName: Annotations
        path: deployment.annotations
      - description: AntiAffinity permit to set anti affinity policy
        displayName: Anti Affinity
        path: deployment.antiAffinity
      - description: TopologyKey is the topology key to use Default to topology.kubernetes.io/zone
        displayName: Topology Key
        path: deployment.antiAffinity.topologyKey
      - description: Type permit to set anti affinity as soft or hard
        displayName: Type
        path: deployment.antiAffinity.type
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: deployment.env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: deployment.envFrom
      - description: InitContainerResources permit to set resources on init containers
        displayName: Init Container Resources
        path: deployment.initContainerResources
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: deployment.labels
      - description: NodeSelector permit to set node selector on pod
        displayName: Node Selector
        path: deployment.nodeSelector
      - description: Persistence is the spec to persist data Default is emptyDir
        displayName: Persistence
        path: deployment.persistence
      - description: Volume is the volume source to use instead volumeClaim It usefull
          if you should to use hostPath
        displayName: Volume
        path: deployment.persistence.volume
      - description: VolumeClaim is the persistent volume claim spec use by statefullset
        displayName: Volume Claim Spec
        path: deployment.persistence.volumeClaim
      - description: PodDisruptionBudget is the pod disruption budget policy
        displayName: Pod Disruption Budget Spec
        path: deployment.podDisruptionBudget
      - description: PodSpec is merged with expected pod It usefull to add some extra
          properties on pod spec
        displayName: Pod Template
        path: deployment.podTemplate
      - description: Ports is the list of container port to affect on filebeat container
          It can be usefull to expose syslog input
        displayName: Ports
        path: deployment.ports
      - description: Replicas is the number of replicas
        displayName: Replicas
        path: deployment.replicas
      - description: Resources permit to set ressources on container
        displayName: Resources
        path: deployment.resources
      - description: Tolerations permit to set toleration on pod
        displayName: Tolerations
        path: deployment.tolerations
      - description: ElasticsearchRef is the Elasticsearch ref to connect on. It will
          generate Elasticsearch output bas eon it
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: Ingresses permit to declare some ingresses The name is decorated
          with cluster name and so on
        displayName: Ingresses
        path: ingresses
      - description: Annotations is the extra annotations for ingress
        displayName: Annotations
        path: ingresses[0].annotations
      - description: ContainerPort is the port to set when create service consumed
          by ingress
        displayName: Container Port
        path: ingresses[0].containerPort
      - description: ContainerPortProtocol is the protocol to set when create service
          consumed by ingress
        displayName: Container Port Protocol
        path: ingresses[0].containerProtocol
      - description: Labels is the extra labels for ingress
        displayName: Labels
        path: ingresses[0].labels
      - description: Name is the ingress name The name is decorated with cluster name
          and so on
        displayName: Name
        path: ingresses[0].name
      - description: Spec is the ingress spec
        displayName: Spec
        path: ingresses[0].spec
      - description: LogstashRef is the Logstash ref to connect on. It will generate
          Logstash output base on it
        displayName: Logstash Ref
        path: logstashRef
      - description: ExternalLogstahsRef is the external Logstash instance not managed
          by operator
        displayName: External Logstash Ref
        path: logstashRef.external
      - description: Addresses is the list of Logstash addresses
        displayName: Addresses
        path: logstashRef.external.addresses
      - description: 'LogstashCaSecretRef is the secret that store your custom CA
          certificate to connect on Logstash via beat protocole. It need to have the
          following keys: ca.crt'
        displayName: Logstash Ca Secret Ref
        path: logstashRef.logstashCASecretRef
      - description: ManagedLogstashRef is the managed Logstash instance by operator
        displayName: Managed Logstash Ref
        path: logstashRef.managed
      - description: Name is the Logstash cluster deployed by operator
        displayName: Name
        path: logstashRef.managed.name
      - description: Namespace is the namespace where Logstash is deployed by operator
          No need to set if is deployed on the same namespace
        displayName: Namespace
        path: logstashRef.managed.namespace
      - description: Port is the port number to connect on service
        displayName: Port
        path: logstashRef.managed.port
      - description: TargetService is the target service that expose the beat protocole
        displayName: Target Service
        path: logstashRef.managed.targetService
      - description: Module is the module specification The key is the file stored
          on filebeat/modules.d
        displayName: Module
        path: module
      - description: Monitoring permit to monitor current cluster Default, it not
          monitor cluster
        displayName: Monitoring
        path: monitoring
      - description: Metricbeat permit to monitor cluster with metricbeat and to dedicated
          monitoring cluster
        displayName: Metricbeat
        path: monitoring.metricbeat
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: monitoring.metricbeat.elasticsearchRef
      - description: Enabled permit to enable Metricbeat monitoring It will deploy
          metricbeat to collect metric Default to false
        displayName: Enabled
        path: monitoring.metricbeat.enabled
      - description: Resources permit to set resources on metricbeat
        displayName: Resources
        path: monitoring.metricbeat.initContainerResources
      - description: RefreshPeriod permit to set the time to collect data Defaullt
          to  `10s`
        displayName: Refresh Period
        path: monitoring.metricbeat.refreshPeriod
      - description: Version is the Metricbeat version to use Default it use the same
          version of the product that it monitor
        displayName: Version
        path: monitoring.metricbeat.version
      - description: Prometheus permit to monitor cluster with Prometheus and graphana
          (via exporter)
        displayName: Prometheus
        path: monitoring.prometheus
      - description: Enabled permit to enable Prometheus monitoring It will deploy
          exporter for filebeat and add podMonitor policy Default to false
        displayName: Enabled
        path: monitoring.prometheus.enabled
      - description: 'Url is the plugin URL where to download exporter Default is
          use project https://github.com/pjhampton/kibana-prometheus-exporter If version
          is set to latest, it use arbitrary: https://github.com/pjhampton/kibana-prometheus-exporter/releases/download/8.6.0/kibanaPrometheusExporter-8.6.0.zip'
        displayName: Url
        path: monitoring.prometheus.url
      - description: Services permit to declare some services The name is decorated
          with cluster name and so on
        displayName: Services
        path: services
      - description: Annotations is the extra annotations for ingress
        displayName: Annotations
        path: services[0].annotations
      - description: Labels is the extra labels for ingress
        displayName: Labels
        path: services[0].labels
      - description: Name is the service name The name is decorated with cluster name
          and so on
        displayName: Name
        path: services[0].name
      - description: Spec is the service spec
        displayName: Spec
        path: services[0].spec
      - description: Version is the Filebeat version to use Default is use the latest
        displayName: Version
        path: version
      version: v1
    - description: Host is the Schema for the hosts API
      displayName: Host
      kind: Host
      name: hosts.cerebro.k8s.webcenter.fr
      resources:
      - kind: none
        name: ""
        version: none
      specDescriptors:
      - description: CerebroRef is the Cerebro where to enroll Elasticsearch cluster
        displayName: Cerebro Ref
        path: cerebroRef
      - description: Name is the cerebro name
        displayName: Name
        path: cerebroRef.name
      - description: Namespace is the cerebro namespace
        displayName: Namespace
        path: cerebroRef.namespace
      - description: ElasticsearchRef is the Elasticsearch cluster to enroll on
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      version: v1
    - description: IndexLifecyclePolicy is the Schema for the indexlifecyclepolicies
        API
      displayName: Index Lifecycle Policy
      kind: IndexLifecyclePolicy
      name: indexlifecyclepolicies.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Name is the custom index lifecycle policy name If empty, it use
          the ressource name
        displayName: Name
        path: name
      - description: Policy is the raw policy on JSON
        displayName: Policy
        path: policy
      version: v1
    - description: IndexTemplate is the Schema for the indextemplates API
      displayName: Index Template
      kind: IndexTemplate
      name: indextemplates.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: AllowAutoCreate permit to allow auto create index
        displayName: Allow Auto Create
        path: allowAutoCreate
      - description: ComposedOf is the list of component templates
        displayName: Composed Of
        path: composedOf
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: IndexPatterns is the list of index to apply this template
        displayName: Index Patterns
        path: indexPatterns
      - description: Meta is extended info as JSON string
        displayName: Meta
        path: meta
      - description: Name is the custom index template name If empty, it use the ressource
          name
        displayName: Name
        path: name
      - description: Priority is the priority to apply this template
        displayName: Priority
        path: priority
      - description: RawTemplate is the raw template You can use it instead to set
          indexPatterns, composedOf, priority, template etc.
        displayName: Raw Template
        path: rawTemplate
      - description: Template is the template specification
        displayName: Template
        path: template
      - description: Aliases is the template alias as JSON string
        displayName: Aliases
        path: template.aliases
      - description: Mappings is the template mapping as JSON string
        displayName: Mappings
        path: template.mappings
      - description: Settings is the template setting as JSON string
        displayName: Settings
        path: template.settings
      - description: The version
        displayName: Version
        path: version
      version: v1
    - description: Kibana is the Schema for the kibanas API
      displayName: Kibana
      kind: Kibana
      name: kibanas.kibana.k8s.webcenter.fr
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: apps/v1
      - kind: Ingress
        name: ""
        version: networking.k8s.io/v1
      - kind: NetworkPolicy
        name: ""
        version: networking.k8s.io/v1
      - kind: PodDisruptionBudget
        name: ""
        version: policy/v1
      - kind: PodMonitor
        name: ""
        version: monitoring.coreos.com/v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      specDescriptors:
      - description: Config is the Kibana config The key is the file stored on kibana/config
        displayName: Config
        path: config
      - description: Deployment permit to set the deployment settings
        displayName: Deployment
        path: deployment
      - description: Annotations permit to set annotation on deployment
        displayName: Annotations
        path: deployment.annotations
      - description: AntiAffinity permit to set anti affinity policy
        displayName: Anti Affinity
        path: deployment.antiAffinity
      - description: TopologyKey is the topology key to use Default to topology.kubernetes.io/zone
        displayName: Topology Key
        path: deployment.antiAffinity.topologyKey
      - description: Type permit to set anti affinity as soft or hard
        displayName: Type
        path: deployment.antiAffinity.type
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: deployment.env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: deployment.envFrom
      - description: InitContainerResources permit to set resources on init containers
        displayName: Init Container Resources
        path: deployment.initContainerResources
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: deployment.labels
      - description: Node permit to set extra option on Node process
        displayName: Node
        path: deployment.node
      - description: NodeSelector permit to set node selector on pod
        displayName: Node Selector
        path: deployment.nodeSelector
      - description: PodDisruptionBudget is the pod disruption budget policy
        displayName: Pod Disruption Budget Spec
        path: deployment.podDisruptionBudget
      - description: PodSpec is merged with expected pod It usefull to add some extra
          properties on pod spec
        displayName: Pod Template
        path: deployment.podTemplate
      - description: Replicas is the number of replicas
        displayName: Replicas
        path: deployment.replicas
      - description: Resources permit to set ressources on Kibana container
        displayName: Resources
        path: deployment.resources
      - description: Tolerations permit to set toleration on pod
        displayName: Tolerations
        path: deployment.tolerations
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Endpoint permit to set endpoints to access on Kibana from external
          kubernetes You can set ingress and / or load balancer
        displayName: Endpoint
        path: endpoint
      - description: Ingress permit to set ingress settings
        displayName: Ingress
        path: endpoint.ingress
      - description: Annotations to set in ingress
        displayName: Annotations
        path: endpoint.ingress.annotations
      - description: Enabled permit to enabled / disabled ingress Default to false
        displayName: Enabled
        path: endpoint.ingress.enabled
      - description: Host is the hostname to access on Kibana
        displayName: Host
        path: endpoint.ingress.host
      - description: IngressSpec it merge with expected ingress spec
        displayName: Ingress Spec
        path: endpoint.ingress.ingressSpec
      - description: Labels to set in ingress
        displayName: Labels
        path: endpoint.ingress.labels
      - description: SecretRef is the secret ref that store certificates
        displayName: Secret Ref
        path: endpoint.ingress.secretRef
      - description: Load balancer permit to set load balancer settings
        displayName: Load Balancer
        path: endpoint.loadBalancer
      - description: Enabled permit to enabled / disabled load balancer Cloud provider
          need to support it Default to false
        displayName: Enabled
        path: endpoint.loadBalancer.enabled
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: KeystoreSecretRef is the secret that store the security settings
        displayName: Keystore Secret Ref
        path: keystoreSecretRef
      - description: Monitoring permit to monitor current cluster Default, it not
          monitor cluster
        displayName: Monitoring
        path: monitoring
      - description: Metricbeat permit to monitor cluster with metricbeat and to dedicated
          monitoring cluster
        displayName: Metricbeat
        path: monitoring.metricbeat
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: monitoring.metricbeat.elasticsearchRef
      - description: Enabled permit to enable Metricbeat monitoring It will deploy
          metricbeat to collect metric Default to false
        displayName: Enabled
        path: monitoring.metricbeat.enabled
      - description: Resources permit to set resources on metricbeat
        displayName: Resources
        path: monitoring.metricbeat.initContainerResources
      - description: RefreshPeriod permit to set the time to collect data Defaullt
          to  `10s`
        displayName: Refresh Period
        path: monitoring.metricbeat.refreshPeriod
      - description: Version is the Metricbeat version to use Default it use the same
          version of the product that it monitor
        displayName: Version
        path: monitoring.metricbeat.version
      - description: Prometheus permit to monitor cluster with Prometheus and graphana
          (via exporter)
        displayName: Prometheus
        path: monitoring.prometheus
      - description: Enabled permit to enable Prometheus monitoring It will deploy
          exporter for Kibana and add podMonitor policy Default to false
        displayName: Enabled
        path: monitoring.prometheus.enabled
      - description: 'Url is the plugin URL where to download exporter Default is
          use project https://github.com/pjhampton/kibana-prometheus-exporter If version
          is set to latest, it use arbitrary: https://github.com/pjhampton/kibana-prometheus-exporter/releases/download/8.6.0/kibanaPrometheusExporter-8.6.0.zip'
        displayName: Url
        path: monitoring.prometheus.url
      - description: PluginsList is the list of additionnal plugin to install on each
          Kibana instance Default is empty
        displayName: Plugins List
        path: pluginsList
      - description: Tls permit to set the TLS setting for Kibana access
        displayName: Tls
        path: tls
      - description: 'CertificateSecretRef is the secret that store your custom certificates.
          It need to have the following keys: tls.key, tls.crt and optionally ca.crt'
        displayName: Certificate Secret Ref
        path: tls.certificateSecretRef
      - description: Enabled permit to enabled TLS on Kibana Default to false
        displayName: Enabled
        path: tls.enabled
      - description: KeySize is the key size when generate privates keys Default to
          2048
        displayName: Key Size
        path: tls.keySize
      - description: RenewalDays is the number of days before certificate expire to
          become effective renewal Default to 30
        displayName: Renewal Days
        path: tls.renewalDays
      - description: SelfSignedCertificate permit to set self signed certificate settings
        displayName: Self Signed Certificate
        path: tls.selfSignedCertificate
      - description: AltIps permit to set subject alt names of type ip when generate
          certificate
        displayName: Alt Ips
        path: tls.selfSignedCertificate.altIPs
      - description: AltNames permit to set subject alt names of type dns when generate
          certificate
        displayName: Alt Names
        path: tls.selfSignedCertificate.altNames
      - description: ValidityDays is the number of days that certificates are valid
          Default to 365
        displayName: Validity Days
        path: tls.validityDays
      - description: Version is the Kibana version to use Default is use the latest
        displayName: Version
        path: version
      statusDescriptors:
      - description: Url is the Kibana endpoint
        displayName: Url
        path: url
      version: v1
    - description: License is the Schema for the licenses API
      displayName: License
      kind: License
      name: licenses.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Basic permit to enable basic license Default to true if secretRef
          not set
        displayName: Basic
        path: isBasic
      - description: SecretName is the secret that contain the license
        displayName: Secret Ref
        path: secretRef
      statusDescriptors:
      - description: ExpireAt is the expiration date
        displayName: Expire At
        path: expireAt
      - description: LicenseType is the license type
        displayName: License Type
        path: licenseType
      version: v1
    - description: Logstash is the Schema for the logstashes API
      displayName: Logstash
      kind: Logstash
      name: logstashes.logstash.k8s.webcenter.fr
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Ingress
        name: ""
        version: networking.k8s.io/v1
      - kind: NetworkPolicy
        name: ""
        version: networking.k8s.io/v1
      - kind: PodDisruptionBudget
        name: ""
        version: policy/v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: apps/v1
      specDescriptors:
      - description: Config is the Logstash config The key is the file stored on logstash/config
        displayName: Config
        path: config
      - description: Deployment permit to set the deployment settings
        displayName: Deployment
        path: deployment
      - description: AdditionalVolumes permit to use additionnal volumes Default is
          empty
        displayName: Additional Volumes
        path: deployment.additionalVolumes
      - description: Name is the volume name
        displayName: Name
        path: deployment.additionalVolumes[0].name
      - description: Annotations permit to set annotation on deployment
        displayName: Annotations
        path: deployment.annotations
      - description: AntiAffinity permit to set anti affinity policy
        displayName: Anti Affinity
        path: deployment.antiAffinity
      - description: TopologyKey is the topology key to use Default to topology.kubernetes.io/zone
        displayName: Topology Key
        path: deployment.antiAffinity.topologyKey
      - description: Type permit to set anti affinity as soft or hard
        displayName: Type
        path: deployment.antiAffinity.type
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: deployment.env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: deployment.envFrom
      - description: InitContainerResources permit to set resources on init containers
        displayName: Init Container Resources
        path: deployment.initContainerResources
      - description: Node permit to set extra option on Node process
        displayName: Jvm
        path: deployment.jvm
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: deployment.labels
      - description: NodeSelector permit to set node selector on pod
        displayName: Node Selector
        path: deployment.nodeSelector
      - description: Persistence is the spec to persist data
        displayName: Persistence
        path: deployment.persistence
      - description: Volume is the volume source to use instead volumeClaim It usefull
          if you should to use hostPath
        displayName: Volume
        path: deployment.persistence.volume
      - description: VolumeClaim is the persistent volume claim spec use by statefullset
        displayName: Volume Claim Spec
        path: deployment.persistence.volumeClaim
      - description: PodDisruptionBudget is the pod disruption budget policy
        displayName: Pod Disruption Budget Spec
        path: deployment.podDisruptionBudget
      - description: PodSpec is merged with expected pod It usefull to add some extra
          properties on pod spec
        displayName: Pod Template
        path: deployment.podTemplate
      - description: Ports is the list of container port to affect on logstash container
          It can be usefull to expose beats input
        displayName: Ports
        path: deployment.ports
      - description: Replicas is the number of replicas
        displayName: Replicas
        path: deployment.replicas
      - description: Resources permit to set ressources on Logstash container
        displayName: Resources
        path: deployment.resources
      - description: Tolerations permit to set toleration on pod
        displayName: Tolerations
        path: deployment.tolerations
      - description: ElasticsearchRef is the Elasticsearch ref to connect on. It will
          expose CA certificate and Elasticsearch URL as encironment variable to use
          it in logstash setting
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: Ingresses permit to declare some ingresses The name is decorated
          with cluster name and so on
        displayName: Ingresses
        path: ingresses
      - description: Annotations is the extra annotations for ingress
        displayName: Annotations
        path: ingresses[0].annotations
      - description: ContainerPort is the port to set when create service consumed
          by ingress
        displayName: Container Port
        path: ingresses[0].containerPort
      - description: ContainerPortProtocol is the protocol to set when create service
          consumed by ingress
        displayName: Container Port Protocol
        path: ingresses[0].containerProtocol
      - description: Labels is the extra labels for ingress
        displayName: Labels
        path: ingresses[0].labels
      - description: Name is the ingress name The name is decorated with cluster name
          and so on
        displayName: Name
        path: ingresses[0].name
      - description: Spec is the ingress spec
        displayName: Spec
        path: ingresses[0].spec
      - description: KeystoreSecretRef is the secret that store the security settings
        displayName: Keystore Secret Ref
        path: keystoreSecretRef
      - description: Monitoring permit to monitor current cluster Default, it not
          monitor cluster
        displayName: Monitoring
        path: monitoring
      - description: Metricbeat permit to monitor cluster with metricbeat and to dedicated
          monitoring cluster
        displayName: Metricbeat
        path: monitoring.metricbeat
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: monitoring.metricbeat.elasticsearchRef
      - description: Enabled permit to enable Metricbeat monitoring It will deploy
          metricbeat to collect metric Default to false
        displayName: Enabled
        path: monitoring.metricbeat.enabled
      - description: Resources permit to set resources on metricbeat
        displayName: Resources
        path: monitoring.metricbeat.initContainerResources
      - description: RefreshPeriod permit to set the time to collect data Defaullt
          to  `10s`
        displayName: Refresh Period
        path: monitoring.metricbeat.refreshPeriod
      - description: Version is the Metricbeat version to use Default it use the same
          version of the product that it monitor
        displayName: Version
        path: monitoring.metricbeat.version
      - description: Prometheus permit to monitor cluster with Prometheus and graphana
          (via exporter)
        displayName: Prometheus
        path: monitoring.prometheus
      - description: Enabled permit to enable Prometheus monitoring It will deploy
          exporter for Logstash and add podMonitor policy Default to false
        displayName: Enabled
        path: monitoring.prometheus.enabled
      - description: 'Url is the plugin URL where to download exporter Default is
          use project https://github.com/pjhampton/kibana-prometheus-exporter If version
          is set to latest, it use arbitrary: https://github.com/pjhampton/kibana-prometheus-exporter/releases/download/8.6.0/kibanaPrometheusExporter-8.6.0.zip'
        displayName: Url
        path: monitoring.prometheus.url
      - description: Patterns is the patterns specification used by grok The key is
          the file stored on logstash/patterns
        displayName: Pattern
        path: pattern
      - description: Pipeline is the pipeline specification The key is the file stored
          on logstash/pipelines
        displayName: Pipeline
        path: pipeline
      - description: PluginsList is the list of additionnal plugin to install on each
          logstash instance Default is empty
        displayName: Plugins List
        path: pluginsList
      - description: Services permit to declare some services The name is decorated
          with cluster name and so on
        displayName: Services
        path: services
      - description: Annotations is the extra annotations for ingress
        displayName: Annotations
        path: services[0].annotations
      - description: Labels is the extra labels for ingress
        displayName: Labels
        path: services[0].labels
      - description: Name is the service name The name is decorated with cluster name
          and so on
        displayName: Name
        path: services[0].name
      - description: Spec is the service spec
        displayName: Spec
        path: services[0].spec
      - description: Version is the logstash version to use Default is use the latest
        displayName: Version
        path: version
      version: v1
    - description: LogstashPipeline is the Schema for the logstashpipelines API
      displayName: Logstash Pipeline
      kind: LogstashPipeline
      name: logstashpipelines.kibanaapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: Description is the pipeline description
        displayName: Description
        path: description
      - description: KibanaRef is the Kibana ref to connect on.
        displayName: Kibana Ref
        path: kibanaRef
      - description: KibanaCredentialSecretRef is the secret that contain credential
          to acess on Kibana API. It need to contain the keys `username` and `password`.
        displayName: Kibana Credential Secret Ref
        path: kibanaRef.credentialSecretRef
      - description: ExternalKibanaRef is the external Kibana not managed by operator
        displayName: External Kibana Ref
        path: kibanaRef.external
      - description: 'KibanaCaSecretRef is the secret that store your custom CA certificate
          to connect on Kibana API. It need to have the following keys: ca.crt'
        displayName: Kibana Ca Secret Ref
        path: kibanaRef.kibanaCASecretRef
      - description: ManagedKibanaRef is the managed Kibana by operator
        displayName: Managed Kibana Ref
        path: kibanaRef.managed
      - description: Name is the Logstash pipeline ID If empty, it use the ressource
          name
        displayName: Name
        path: name
      - description: Pipeline is the pipeline definition
        displayName: Pipeline
        path: pipeline
      - description: Settings is the pipeline settings It's a JSON string
        displayName: Settings
        path: settings
      version: v1
    - description: Metricbeat is the Schema for the metricbeats API
      displayName: Metricbeat
      kind: Metricbeat
      name: metricbeats.beat.k8s.webcenter.fr
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Ingress
        name: ""
        version: networking.k8s.io/v1
      - kind: NetworkPolicy
        name: ""
        version: networking.k8s.io/v1
      - kind: PodDisruptionBudget
        name: ""
        version: policy/v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: apps/v1
      specDescriptors:
      - description: Config is the Metricbeat config The key is the file stored on
          metricbeat
        displayName: Config
        path: config
      - description: Deployment permit to set the deployment settings
        displayName: Deployment
        path: deployment
      - description: AdditionalVolumes permit to use additionnal volumes Default is
          empty
        displayName: Additional Volumes
        path: deployment.additionalVolumes
      - description: Name is the volume name
        displayName: Name
        path: deployment.additionalVolumes[0].name
      - description: Annotations permit to set annotation on deployment
        displayName: Annotations
        path: deployment.annotations
      - description: AntiAffinity permit to set anti affinity policy
        displayName: Anti Affinity
        path: deployment.antiAffinity
      - description: TopologyKey is the topology key to use Default to topology.kubernetes.io/zone
        displayName: Topology Key
        path: deployment.antiAffinity.topologyKey
      - description: Type permit to set anti affinity as soft or hard
        displayName: Type
        path: deployment.antiAffinity.type
      - description: Env permit to set some environment variable on containers
        displayName: Env
        path: deployment.env
      - description: EnvFrom permit to set some environment variable from config map
          or secret
        displayName: Env From
        path: deployment.envFrom
      - description: InitContainerResources permit to set resources on init containers
        displayName: Init Container Resources
        path: deployment.initContainerResources
      - description: Labels permit to set labels on containers
        displayName: Labels
        path: deployment.labels
      - description: NodeSelector permit to set node selector on pod
        displayName: Node Selector
        path: deployment.nodeSelector
      - description: Persistence is the spec to persist data Default is emptyDir
        displayName: Persistence
        path: deployment.persistence
      - description: Volume is the volume source to use instead volumeClaim It usefull
          if you should to use hostPath
        displayName: Volume
        path: deployment.persistence.volume
      - description: VolumeClaim is the persistent volume claim spec use by statefullset
        displayName: Volume Claim Spec
        path: deployment.persistence.volumeClaim
      - description: PodDisruptionBudget is the pod disruption budget policy
        displayName: Pod Disruption Budget Spec
        path: deployment.podDisruptionBudget
      - description: PodSpec is merged with expected pod It usefull to add some extra
          properties on pod spec
        displayName: Pod Template
        path: deployment.podTemplate
      - description: Replicas is the number of replicas
        displayName: Replicas
        path: deployment.replicas
      - description: Resources permit to set ressources on container
        displayName: Resources
        path: deployment.resources
      - description: Tolerations permit to set toleration on pod
        displayName: Tolerations
        path: deployment.tolerations
      - description: ElasticsearchRef is the Elasticsearch ref to connect on. It will
          generate Elasticsearch output bas on it
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Image is the image to use when deploy Elasticsearch It can be
          usefull to use internal registry or mirror
        displayName: Image
        path: image
      - description: ImagePullPolicy is the image pull policy to use
        displayName: Image Pull Policy
        path: imagePullPolicy
      - description: ImagePullSecrets is the image pull secrets to use
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: Module is the module specification The key is the file stored
          on metricbeat/modules.d
        displayName: Module
        path: module
      - description: Version is the Metricbeat version to use Default is use the latest
        displayName: Version
        path: version
      version: v1
    - description: RoleMapping is the Schema for the rolemappings API
      displayName: Role Mapping
      kind: RoleMapping
      name: rolemappings.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Enabled permit to enable or disable the role mapping Default
          to true
        displayName: Enabled
        path: enabled
      - description: Metadata is the meta data JSON string
        displayName: Metadata
        path: metadata
      - description: Name is the custom role mapping name If empty, it use the ressource
          name
        displayName: Name
        path: name
      - description: Roles is the list of role to map
        displayName: Roles
        path: roles
      - description: Rules is the mapping rules JSON string
        displayName: Rules
        path: rules
      version: v1
    - description: Role is the Schema for the roles API
      displayName: Role
      kind: Role
      name: roles.elasticsearchapi.k8s.webcenter.fr
      specDescriptors:
      - description: Applications is the list of application privilege
        displayName: Applications
        path: applications
      - description: Application
        displayName: Application
        path: applications[0].application
      - description: Privileges
        displayName: Privileges
        path: applications[0].privileges
      - description: Resources
        displayName: Resources
        path: applications[0].resources
      - description: Cluster is a list of cluster privileges
        displayName: Cluster
        path: cluster
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Global  defining global privileges JSON string
        displayName: Global
        path: global
      - description: Indices is the list of indices permissions
        displayName: Indices
        path: indices
      - description: Allow to manage restricted index
        displayName: Allow Restricted Indices
        path: indices[0].allowRestrictedIndices
      - description: FieldSecurity JSON string
        displayName: Field Security
        path: indices[0].fieldSecurity
      - description: Names
        displayName: Names
        path: indices[0].names
      - description: Privileges
        displayName: Privileges
        path: indices[0].privileges
      - description: Query
        displayName: Query
        path: indices[0].query
      - description: Metadata is optional meta-data JSON string
        displayName: Metadata
        path: metadata
      - description: Name is the custom role name If empty, it use the ressource name
        displayName: Name
        path: name
      - description: RunAs is the list of users that the owners of this role can impersonate
        displayName: Run As
        path: runAs
      - description: TransientMetadata JSON string
        displayName: Transient Metadata
        path: transientMetadata
      version: v1
    - description: Role is the Schema for the roles API
      displayName: Role
      kind: Role
      name: roles.kibanaapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: Elasticsearch is the Elasticsearch right
        displayName: Elasticsearch
        path: elasticsearch
      - description: Cluster is the cluster privilege
        displayName: Cluster
        path: elasticsearch.cluster
      - description: Indices is the indice privileges
        displayName: Indices
        path: elasticsearch.indices
      - description: FieldSecurity JSON string
        displayName: Field Security
        path: elasticsearch.indices[0].fieldSecurity
      - description: Names
        displayName: Names
        path: elasticsearch.indices[0].names
      - description: Privileges
        displayName: Privileges
        path: elasticsearch.indices[0].privileges
      - description: Query
        displayName: Query
        path: elasticsearch.indices[0].query
      - description: RunAs is the privilege like users
        displayName: Run As
        path: elasticsearch.run_as
      - description: Kibana is the Kibana right
        displayName: Kibana
        path: kibana
      - description: KibanaRef is the Kibana ref to connect on.
        displayName: Kibana Ref
        path: kibanaRef
      - description: KibanaCredentialSecretRef is the secret that contain credential
          to acess on Kibana API. It need to contain the keys `username` and `password`.
        displayName: Kibana Credential Secret Ref
        path: kibanaRef.credentialSecretRef
      - description: ExternalKibanaRef is the external Kibana not managed by operator
        displayName: External Kibana Ref
        path: kibanaRef.external
      - description: 'KibanaCaSecretRef is the secret that store your custom CA certificate
          to connect on Kibana API. It need to have the following keys: ca.crt'
        displayName: Kibana Ca Secret Ref
        path: kibanaRef.kibanaCASecretRef
      - description: ManagedKibanaRef is the managed Kibana by operator
        displayName: Managed Kibana Ref
        path: kibanaRef.managed
      - description: Base is the base privilege
        displayName: Base
        path: kibana[0].base
      - description: Feature ontains privileges for specific features
        displayName: Feature
        path: kibana[0].feature
      - description: Spaces is the list of space o apply the privileges to
        displayName: Spaces
        path: kibana[0].spaces
      - description: Metadata is optional meta-data JSON string
        displayName: Metadata
        path: metadata
      - description: Name is the role name If empty, it use the ressource name
        displayName: Name
        path: name
      - description: TransientMedata
        displayName: Transient Medata
        path: transient_metadata
      version: v1
    - description: SnapshotLifecyclePolicy is the Schema for the snapshotlifecyclepolicies
        API
      displayName: Snapshot Lifecycle Policy
      kind: SnapshotLifecyclePolicy
      name: snapshotlifecyclepolicies.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: Config is the config backup
        displayName: Config
        path: config
      - description: ExpendWildcards
        displayName: Expend Wildcards
        path: config.expandWildcards
      - description: FeatureStates
        displayName: Feature States
        path: config.featureStates
      - description: IgnoreUnavailable
        displayName: Ignore Unavailable
        path: config.ignoreUnavailable
      - description: IncludeGlobalState
        displayName: Include Global State
        path: config.includeGlobalState
      - description: Indices
        displayName: Indices
        path: config.indices
      - description: Metadata
        displayName: Metadata
        path: config.metadata
      - description: Partial
        displayName: Partial
        path: config.partial
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Name is the template name to generte final name
        displayName: Name
        path: name
      - description: Repository is the target repository to store backup
        displayName: Repository
        path: repository
      - description: Retention is the retention policy
        displayName: Retention
        path: retention
      - description: ExpireAfter
        displayName: Expire After
        path: retention.expireAfter
      - description: MaxCount
        displayName: Max Count
        path: retention.maxCount
      - description: MinCount
        displayName: Min Count
        path: retention.minCount
      - description: Schedule is schedule policy
        displayName: Schedule
        path: schedule
      - description: SnapshotLifecyclePolicyName is the custom snapshot lifecycle
          policy name If empty, it use the ressource name
        displayName: Snapshot Lifecycle Policy Name
        path: snapshotLifecyclePolicyName
      version: v1
    - description: SnapshotRepository is the Schema for the snapshotrepositories API
      displayName: Snapshot Repository
      kind: SnapshotRepository
      name: snapshotrepositories.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Name is the custom snapshot repository name If empty, it use
          the ressource name
        displayName: Name
        path: name
      - description: The config of snapshot repository
        displayName: Settings
        path: settings
      - description: Type the Snapshot repository type
        displayName: Type
        path: type
      version: v1
    - description: User is the Schema for the users API
      displayName: User
      kind: User
      name: users.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Email is the email user
        displayName: Email
        path: email
      - description: Enabled permit to enable user Default to true
        displayName: Enabled
        path: enabled
      - description: FullName is the full name
        displayName: Full Name
        path: fullName
      - description: IsProtected must be set when you manage protected account like
          kibana_system Default to false
        displayName: Is Protected
        path: isProtected
      - description: Metadata is the meta data Is JSON string
        displayName: Metadata
        path: metadata
      - description: PasswordHash is the password as hash
        displayName: Password Hash
        path: passwordHash
      - description: Roles is the list of roles
        displayName: Roles
        path: roles
      - description: CredentialSecretRef permit to set password. Or you can use password
          hash
        displayName: Secret Ref
        path: secretRef
      - description: key is the key name on secret to read the effective password
        displayName: Key
        path: secretRef.key
      - description: Name is the secret name
        displayName: Name
        path: secretRef.name
      - description: Username is the user name If empty, it use the ressource name
        displayName: Username
        path: username
      statusDescriptors:
      - description: PasswordHash is the current password hash
        displayName: Password Hash
        path: passwordHash
      version: v1
    - description: UserSpace is the Schema for the userspaces API
      displayName: User Space
      kind: UserSpace
      name: userspaces.kibanaapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: Color is the user space color
        displayName: Color
        path: color
      - description: Description is the user space description
        displayName: Description
        path: description
      - description: DisabledFeatures is the list of feature disabled on current user
          space
        displayName: Disabled Features
        path: disabledFeatures
      - description: ID is the user space ID If empty, it use the ressource name
        displayName: ID
        path: id
      - description: Initials is the user space initials
        displayName: Initials
        path: initials
      - description: KibanaRef is the Kibana ref to connect on.
        displayName: Kibana Ref
        path: kibanaRef
      - description: KibanaCredentialSecretRef is the secret that contain credential
          to acess on Kibana API. It need to contain the keys `username` and `password`.
        displayName: Kibana Credential Secret Ref
        path: kibanaRef.credentialSecretRef
      - description: ExternalKibanaRef is the external Kibana not managed by operator
        displayName: External Kibana Ref
        path: kibanaRef.external
      - description: 'KibanaCaSecretRef is the secret that store your custom CA certificate
          to connect on Kibana API. It need to have the following keys: ca.crt'
        displayName: Kibana Ca Secret Ref
        path: kibanaRef.kibanaCASecretRef
      - description: ManagedKibanaRef is the managed Kibana by operator
        displayName: Managed Kibana Ref
        path: kibanaRef.managed
      - description: Name is the user space name
        displayName: Name
        path: name
      - description: CopyObjects permit to copy objects into current user space
        displayName: Kibana User Space Copies
        path: userSpaceCopies
      - description: CreateNewCopies is set to true to create new copy of objects
          Default to false
        displayName: Create New Copies
        path: userSpaceCopies[0].createNewCopies
      - description: CreateNewCopies is set to true to create new copy of objects
          Default to false
        displayName: Force Update When Reconcile
        path: userSpaceCopies[0].forceUpdate
      - description: IncludeReferences is set to true to copy all references Default
          to true
        displayName: Include References
        path: userSpaceCopies[0].includeReferences
      - description: OriginUserSpace is the user space name from copy objects
        displayName: Kibana Objects
        path: userSpaceCopies[0].objects
      - description: ID is the object to copy
        displayName: ID
        path: userSpaceCopies[0].objects[0].id
      - description: Tpye is the object type to copy
        displayName: Type
        path: userSpaceCopies[0].objects[0].type
      - description: OriginUserSpace is the user space name from copy objects
        displayName: Origin User Space
        path: userSpaceCopies[0].originUserSpace
      - description: Overwrite is set to true to overwrite existing objects Default
          to true
        displayName: Overwrite
        path: userSpaceCopies[0].overwrite
      version: v1
    - description: Watch is the Schema for the watches API
      displayName: Watch
      kind: Watch
      name: watches.elasticsearchapi.k8s.webcenter.fr
      resources:
      - kind: None
        name: None
        version: None
      specDescriptors:
      - description: Actions JSON string
        displayName: Actions
        path: actions
      - description: Condition JSON string
        displayName: Condition
        path: condition
      - description: ElasticsearchRef is the Elasticsearch ref to connect on.
        displayName: Elasticsearch Ref
        path: elasticsearchRef
      - description: 'ElasticsearchCaSecretRef is the secret that store your custom
          CA certificate to connect on Elasticsearch API. It need to have the following
          keys: ca.crt'
        displayName: Elasticsearch Ca Secret Ref
        path: elasticsearchRef.elasticsearchCASecretRef
      - description: ExternalElasticsearchRef is the external Elasticsearch cluster
          not managed by operator
        displayName: External Elasticsearch Ref
        path: elasticsearchRef.external
      - description: ManagedElasticsearchRef is the managed Elasticsearch cluster
          by operator
        displayName: Managed Elasticsearch Ref
        path: elasticsearchRef.managed
      - description: Input JSON string
        displayName: Input
        path: input
      - description: Metadata JSON string
        displayName: Metadata
        path: metadata
      - description: Name is the custom watch name If empty, it use the ressource
          name
        displayName: Name
        path: name
      - description: ThrottlePeriod
        displayName: Throttle Period
        path: throttle_period
      - description: ThrottlePeriodInMillis
        displayName: Throttle Period In Millis
        path: throttle_period_in_millis
      - description: Transform JSON string
        displayName: Transform
        path: transform
      - description: Trigger JSON string
        displayName: Trigger
        path: trigger
      version: v1
  description: Deploy ELK stack and more
  displayName: elasticsearch-operator
  icon:
  - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gVXBsb2FkZWQgdG86IFNWRyBSZXBvLCB3d3cuc3ZncmVwby5jb20sIEdlbmVyYXRvcjogU1ZHIFJlcG8gTWl4ZXIgVG9vbHMgLS0+DQo8c3ZnIHdpZHRoPSI4MDBweCIgaGVpZ2h0PSI4MDBweCIgdmlld0JveD0iMCAwIDEwMjQgMTAyNCIgY2xhc3M9Imljb24iICB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+PHBhdGggZD0iTTgyNiA2ODEuOWMyIDEuNCA0Ni43IDMyLjggMTUuOCAxMTBsLTAuMi0wLjJjLTEuMiA0LjctNS4zIDguMS0xMC4yIDguMS01LjkgMC0xMC41LTQuOC0xMC41LTEwLjcgMC0yIDAuNi0zLjYgMS41LTUuMWgtMC4zYzI0LjQtNjAuNi02LjgtODMuOC04LjEtODQuN2wwLjItMC4yYy0zLjMtMS44LTUuNy01LjEtNS43LTkuMiAwLTUuOSA0LjgtMTAuNyAxMC43LTEwLjcgMi42IDAgNSAxLjEgNi45IDIuN3oiIGZpbGw9IiNFRjQ2NjgiIC8+PHBhdGggZD0iTTgxMi43IDM0OC4ydjEyMy42YzAgMTIuMy05LjkgMjIuMy0yMi4zIDIyLjNINTI2VjMyNi45YzUuMy0wLjIgMTAuMi0wLjUgMTUtMC45aDI0OS40YzEyLjQgMCAyMi4zIDEwLjEgMjIuMyAyMi4yeiIgZmlsbD0iI0ZGRjBDMiIgLz48cGF0aCBkPSJNNzYzLjggNTIwLjR2ODAuOGMtNS42LTAuOC0xMS4xLTEuMi0xNi43LTEuMi03Ny43IDAtMTQwLjkgNjMuMi0xNDAuOSAxNDAuOSAwIDQ4LjggMjUgOTEuNyA2Mi42IDExNi45SDUyNlY1MjAuNGgyMzcuOHoiIGZpbGw9IiNGRkUwODUiIC8+PHBhdGggZD0iTTY2NC45IDE3OS4yYzAuMyAwLjMgMjUuOSAzOC44IDcuOCA3MC42LTExLjkgMjAuOC00NSA0My41LTEyOSA0OS44SDQ1OWMyOS41LTUxLjYgOTEuOC0xNDEuNSAxNDguNy0xNDcuOSAyMS4xLTIuNCA0MC4xIDYuOSA1Ny4yIDI3LjV6TTQzNi4yIDMyNmMyMCAxLjIgMzkuMSAxLjggNTcgMS44IDIuMyAwIDQuMi0wLjIgNi41LTAuMnY1MzAuMmgtOTIuM1YzMjdjNy43LTAuMiAxNS4yLTAuNSAyMy4yLTEuMWg1LjZ6TTI1OC45IDE1MS43YzU2LjcgNi41IDExOS4yIDk2LjMgMTQ4LjcgMTQ3LjloLTg1LjVjLTgzLjUtNi4zLTExNi4zLTI5LTEyOC4yLTQ5LjgtMTcuOC0zMS41IDcuMi02OS43IDcuMS02OS43IDE3LjktMjEuNSAzNi43LTMwLjggNTcuOS0yOC40eiIgZmlsbD0iI0Y1OUE5QiIgLz48cGF0aCBkPSJNMzgxLjEgNTIwLjR2MzM3LjRIMTU2Yy0xMC41IDAtMTkuMS04LjEtMTkuMS0xOC4yVjUyMC40aDI0NC4yeiIgZmlsbD0iI0ZGRTA4NSIgLz48cGF0aCBkPSJNMzgxLjEgMzI3LjZWNDk0SDEwMy42Yy0xMi4zIDAtMjIuMy05LjktMjIuMy0yMi4zVjM0OC4yYzAtMTIuMiA5LjktMjIuMyAyMi4zLTIyLjNoMjIyYzE1IDEuMSAzMC43IDEuOCA0Ny45IDEuOCAyLjUgMC4xIDUuMS0wLjEgNy42LTAuMXoiIGZpbGw9IiNGRkYwQzIiIC8+PHBhdGggZD0iTTQ5OS43IDg1Ny44VjMyNy42Yy0yLjMgMC00LjIgMC4yLTYuNSAwLjItMTcuOSAwLTM3LTAuNi01Ny0xLjhoLTUuNmMtOCAwLjYtMTUuNSAwLjktMjMuMiAxLjF2NTMwLjhoOTIuM3ogbTE3My4xLTYwOGMxOC4xLTMxLjgtNy41LTcwLjMtNy44LTcwLjYtMTcuMi0yMC42LTM2LjEtMjkuOS01Ny4yLTI3LjUtNTYuOSA2LjUtMTE5LjIgOTYuMy0xNDguNyAxNDcuOWg4NC43Yzg0LTYuMyAxMTcuMS0yOSAxMjktNDkuOHogbTkxIDM1MS40di04MC44SDUyNnYzMzcuNGgxNDIuOGMtMzcuNi0yNS4zLTYyLjYtNjguMi02Mi42LTExNi45IDAtNzcuNyA2My4yLTE0MC45IDE0MC45LTE0MC45IDUuNiAwIDExLjIgMC41IDE2LjcgMS4yeiBtNDguOS0xMjkuNFYzNDguMmMwLTEyLjItOS45LTIyLjMtMjIuMy0yMi4zSDU0MS4xYy00LjggMC41LTkuOCAwLjgtMTUgMC45VjQ5NGgyNjQuNGMxMi4zIDAuMSAyMi4yLTkuOSAyMi4yLTIyLjJ6IG01NC4xIDI2OS4xYzAtNjUuOS01My43LTExOS42LTExOS42LTExOS42UzYyNy41IDY3NSA2MjcuNSA3NDAuOXM1My43IDExOS42IDExOS42IDExOS42IDExOS43LTUzLjcgMTE5LjctMTE5LjZ6TTM4MS4xIDUyMC40SDEzNi45djMxOS4yYzAgMTAuMSA4LjYgMTguMiAxOS4xIDE4LjJoMjI1LjFWNTIwLjR6TTI2MS44IDEyNS41Yzc3LjEgOC43IDE0OC4xIDEyNCAxNzEuNiAxNjYuMSAyMy41LTQyLjEgOTQuNy0xNTcuNCAxNzEuNi0xNjYuMSAzMC4xLTMuMyA1Ny41IDkuMyA4MS4xIDM3LjggMi4xIDMuMiAzNS44IDUzLjMgOS44IDk5LjMtOC40IDE1LTIyLjYgMjcuMi00MS40IDM3aDEzNmMyNi44IDAgNDguNiAyMS44IDQ4LjYgNDguNnYxMjMuNmMwIDI2LjgtMjEuOCA0OC42LTQ4LjYgNDguNmgtNC4xdjg1LjNjNTguNSAxNy4yIDEwMS40IDcxLjIgMTAxLjQgMTM1LjEgMCAzNC0xMi4yIDY1LjMtMzIuNCA4OS43bDg3LjQgODkuOCAwLjIgMC4yYzEuNyAxLjggMi45IDQuNCAyLjkgNy4yIDAgNS43LTQuNyAxMC40LTEwLjQgMTAuNC0zIDAtNS42LTEuMi03LjUtM2wtMC4yIDAuMi04Ny4xLTg5LjVjLTI1IDIyLjMtNTcuNiAzNS44LTkzLjYgMzUuOC0zLjMgMC02LjYtMC4yLTkuOC0wLjVIMTU2Yy0yMyAwLTQxLjctMTguNy00MS43LTQxLjVWNTIwLjRoLTEwLjdjLTI2LjggMC00OC42LTIxLjgtNDguNi00OC42VjM0OC4yYzAtMjYuOCAyMS44LTQ4LjYgNDguNi00OC42aDEwOC43Yy0xOC44LTkuOC0zMi44LTIyLTQxLjQtMzctMjYtNDYuMSA3LjctOTYuMiA5LjItOTguMyAyNC4yLTI5LjUgNTEuNC00Mi4yIDgxLjctMzguOHogbTExOS4zIDIwMi4xYy0yLjYgMC01LjEgMC4yLTcuNyAwLjItMTcuMiAwLTMyLjgtMC44LTQ3LjktMS44aC0yMjJjLTEyLjMgMC0yMi4zIDEwLjEtMjIuMyAyMi4zdjEyMy42YzAgMTIuMyA5LjkgMjIuMyAyMi4zIDIyLjNIMzgxVjMyNy42eiBtLTU5LTI4aDg1LjVjLTI5LjUtNTEuNi05Mi0xNDEuNS0xNDguNy0xNDcuOS0yMS4yLTIuNC00MCA2LjktNTcuOSAyOC40IDAuMiAwLTI0LjggMzguMi03LjEgNjkuNyAxMS45IDIwLjggNDQuNyA0My41IDEyOC4yIDQ5Ljh6IiBmaWxsPSIjRUY0NjY4IiAvPjwvc3ZnPg==
    mediatype: image/png
  install:
    spec:
      deployments: null
    strategy: ""
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - elasticsearch
  - kibana
  - logstash
  - filebeat
  links:
  - name: Elasticsearch Operator
    url: https://github.com/webcenter-fr/elasticsearch-operator
  maintainers:
  - email: linuxworkgroup@hotmail.com
    name: disaster37
  maturity: stable
  minKubeVersion: v1.18.0
  provider:
    name: webcenter.fr
    url: https://github.com/webcenter-fr/elasticsearch-operator
  replaces: elasticsearch-operator.v0.0.37
  version: 0.0.38
