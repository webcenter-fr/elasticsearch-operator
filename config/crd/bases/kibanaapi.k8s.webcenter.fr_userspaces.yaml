---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: userspaces.kibanaapi.k8s.webcenter.fr
spec:
  group: kibanaapi.k8s.webcenter.fr
  names:
    kind: UserSpace
    listKind: UserSpaceList
    plural: userspaces
    singular: userspace
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.isSync
      name: Sync
      type: boolean
    - description: Is on error
      jsonPath: .status.isOnError
      name: Error
      type: boolean
    - description: health
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: UserSpace is the Schema for the userspaces API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UserSpaceSpec defines the desired state of UserSpace
            properties:
              color:
                description: Color is the user space color
                type: string
              description:
                description: Description is the user space description
                type: string
              disabledFeatures:
                description: DisabledFeatures is the list of feature disabled on current
                  user space
                items:
                  type: string
                type: array
              id:
                description: ID is the user space ID If empty, it use the ressource
                  name
                type: string
              initials:
                description: Initials is the user space initials
                type: string
              kibanaRef:
                description: KibanaRef is the Kibana ref to connect on.
                properties:
                  credentialSecretRef:
                    description: KibanaCredentialSecretRef is the secret that contain
                      credential to acess on Kibana API. It need to contain the keys
                      `username` and `password`.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  external:
                    description: ExternalKibanaRef is the external Kibana not managed
                      by operator
                    properties:
                      address:
                        description: Address is the Kibana address
                        type: string
                    required:
                    - address
                    type: object
                  kibanaCASecretRef:
                    description: 'KibanaCaSecretRef is the secret that store your
                      custom CA certificate to connect on Kibana API. It need to have
                      the following keys: ca.crt'
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  managed:
                    description: ManagedKibanaRef is the managed Kibana by operator
                    properties:
                      name:
                        description: Name is the Kibana deployed by operator
                        type: string
                      namespace:
                        description: Namespace is the namespace where Kibana is deployed
                          by operator No need to set if Kibana is deployed on the
                          same namespace
                        type: string
                    required:
                    - name
                    type: object
                type: object
              name:
                description: Name is the user space name
                type: string
              userSpaceCopies:
                description: CopyObjects permit to copy objects into current user
                  space
                items:
                  properties:
                    createNewCopies:
                      description: CreateNewCopies is set to true to create new copy
                        of objects Default to false
                      type: boolean
                    forceUpdate:
                      description: CreateNewCopies is set to true to create new copy
                        of objects Default to false
                      type: boolean
                    includeReferences:
                      description: IncludeReferences is set to true to copy all references
                        Default to true
                      type: boolean
                    objects:
                      description: OriginUserSpace is the user space name from copy
                        objects
                      items:
                        properties:
                          id:
                            description: ID is the object to copy
                            type: string
                          type:
                            description: Tpye is the object type to copy
                            type: string
                        required:
                        - id
                        - type
                        type: object
                      type: array
                    originUserSpace:
                      description: OriginUserSpace is the user space name from copy
                        objects
                      type: string
                    overwrite:
                      description: Overwrite is set to true to overwrite existing
                        objects Default to true
                      type: boolean
                  required:
                  - objects
                  - originUserSpace
                  type: object
                type: array
            required:
            - kibanaRef
            - name
            type: object
          status:
            description: UserSpaceStatus defines the observed state of UserSpace
            properties:
              conditions:
                description: List of conditions
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              isOnError:
                description: IsOnError is true if controller is stuck on Error
                type: boolean
              isSync:
                description: IsSync is true if controller successfully apply on remote
                  API
                type: boolean
              lastAppliedConfiguration:
                description: LastAppliedConfiguration is the last applied configuration
                  to use 3-way diff
                type: string
              lastErrorMessage:
                description: LastErrorMessage is the current error message
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
