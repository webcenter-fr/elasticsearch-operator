apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.0
  creationTimestamp: null
  name: elasticsearches.elasticsearch.k8s.webcenter.fr
spec:
  group: elasticsearch.k8s.webcenter.fr
  names:
    kind: Elasticsearch
    listKind: ElasticsearchList
    plural: elasticsearches
    singular: elasticsearch
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.url
      name: URL
      type: string
    - jsonPath: .status.credentialsRef.name
      name: CredentialsRef
      type: string
    - description: Cluster health
      jsonPath: .status.health
      name: Health
      type: string
    - description: Phase
      jsonPath: .status.phase
      name: Phase
      type: string
    - description: Is on error
      jsonPath: .status.isOnError
      name: Error
      type: boolean
    - description: health
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Elasticsearch is the Schema for the elasticsearchs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ElasticsearchSpec defines the desired state of Elasticsearch
            properties:
              clusterName:
                description: |-
                  ClusterName is the Elasticsearch cluster name
                  Default is use the custom ressource name
                type: string
              endpoint:
                description: |-
                  Endpoint permit to set endpoints to access on Elasticsearch from external kubernetes
                  You can set ingress and / or load balancer
                properties:
                  ingress:
                    description: Ingress permit to set ingress settings
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to set in ingress
                        type: object
                      enabled:
                        default: false
                        description: |-
                          Enabled permit to enabled / disabled ingress
                          Default to false
                        type: boolean
                      host:
                        description: Host is the hostname to access on
                        type: string
                      ingressSpec:
                        description: IngressSpec it merge with expected ingress spec
                        properties:
                          defaultBackend:
                            description: |-
                              defaultBackend is the backend that should handle requests that don't
                              match any rule. If Rules are not specified, DefaultBackend must be specified.
                              If DefaultBackend is not set, the handling of requests that do not match any
                              of the rules will be up to the Ingress controller.
                            properties:
                              resource:
                                description: |-
                                  resource is an ObjectRef to another Kubernetes resource in the namespace
                                  of the Ingress object. If resource is specified, a service.Name and
                                  service.Port must not be specified.
                                  This is a mutually exclusive setting with "Service".
                                properties:
                                  apiGroup:
                                    description: |-
                                      APIGroup is the group for the resource being referenced.
                                      If APIGroup is not specified, the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                                x-kubernetes-map-type: atomic
                              service:
                                description: |-
                                  service references a service as a backend.
                                  This is a mutually exclusive setting with "Resource".
                                properties:
                                  name:
                                    description: |-
                                      name is the referenced service. The service must exist in
                                      the same namespace as the Ingress object.
                                    type: string
                                  port:
                                    description: |-
                                      port of the referenced service. A port name or port number
                                      is required for a IngressServiceBackend.
                                    properties:
                                      name:
                                        description: |-
                                          name is the name of the port on the Service.
                                          This is a mutually exclusive setting with "Number".
                                        type: string
                                      number:
                                        description: |-
                                          number is the numerical port number (e.g. 80) on the Service.
                                          This is a mutually exclusive setting with "Name".
                                        format: int32
                                        type: integer
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - name
                                type: object
                            type: object
                          ingressClassName:
                            description: |-
                              ingressClassName is the name of an IngressClass cluster resource. Ingress
                              controller implementations use this field to know whether they should be
                              serving this Ingress resource, by a transitive connection
                              (controller -> IngressClass -> Ingress resource). Although the
                              `kubernetes.io/ingress.class` annotation (simple constant name) was never
                              formally defined, it was widely supported by Ingress controllers to create
                              a direct binding between Ingress controller and Ingress resources. Newly
                              created Ingress resources should prefer using the field. However, even
                              though the annotation is officially deprecated, for backwards compatibility
                              reasons, ingress controllers should still honor that annotation if present.
                            type: string
                          rules:
                            description: |-
                              rules is a list of host rules used to configure the Ingress. If unspecified,
                              or no rule matches, all traffic is sent to the default backend.
                            items:
                              description: |-
                                IngressRule represents the rules mapping the paths under a specified host to
                                the related backend services. Incoming requests are first evaluated for a host
                                match, then routed to the backend associated with the matching IngressRuleValue.
                              properties:
                                host:
                                  description: "host is the fully qualified domain
                                    name of a network host, as defined by RFC 3986.\nNote
                                    the following deviations from the \"host\" part
                                    of the\nURI as defined in RFC 3986:\n1. IPs are
                                    not allowed. Currently an IngressRuleValue can
                                    only apply to\n   the IP in the Spec of the parent
                                    Ingress.\n2. The `:` delimiter is not respected
                                    because ports are not allowed.\n\t  Currently
                                    the port of an Ingress is implicitly :80 for http
                                    and\n\t  :443 for https.\nBoth these may change
                                    in the future.\nIncoming requests are matched
                                    against the host before the\nIngressRuleValue.
                                    If the host is unspecified, the Ingress routes
                                    all\ntraffic based on the specified IngressRuleValue.\n\nhost
                                    can be \"precise\" which is a domain name without
                                    the terminating dot of\na network host (e.g. \"foo.bar.com\")
                                    or \"wildcard\", which is a domain name\nprefixed
                                    with a single wildcard label (e.g. \"*.foo.com\").\nThe
                                    wildcard character '*' must appear by itself as
                                    the first DNS label and\nmatches only a single
                                    label. You cannot have a wildcard label by itself
                                    (e.g. Host == \"*\").\nRequests will be matched
                                    against the Host field in the following way:\n1.
                                    If host is precise, the request matches this rule
                                    if the http host header is equal to Host.\n2.
                                    If host is a wildcard, then the request matches
                                    this rule if the http host header\nis to equal
                                    to the suffix (removing the first label) of the
                                    wildcard rule."
                                  type: string
                                http:
                                  description: |-
                                    HTTPIngressRuleValue is a list of http selectors pointing to backends.
                                    In the example: http://<host>/<path>?<searchpart> -> backend where
                                    where parts of the url correspond to RFC 3986, this resource will be used
                                    to match against everything after the last '/' and before the first '?'
                                    or '#'.
                                  properties:
                                    paths:
                                      description: paths is a collection of paths
                                        that map requests to backends.
                                      items:
                                        description: |-
                                          HTTPIngressPath associates a path with a backend. Incoming urls matching the
                                          path are forwarded to the backend.
                                        properties:
                                          backend:
                                            description: |-
                                              backend defines the referenced service endpoint to which the traffic
                                              will be forwarded to.
                                            properties:
                                              resource:
                                                description: |-
                                                  resource is an ObjectRef to another Kubernetes resource in the namespace
                                                  of the Ingress object. If resource is specified, a service.Name and
                                                  service.Port must not be specified.
                                                  This is a mutually exclusive setting with "Service".
                                                properties:
                                                  apiGroup:
                                                    description: |-
                                                      APIGroup is the group for the resource being referenced.
                                                      If APIGroup is not specified, the specified Kind must be in the core API group.
                                                      For any other third-party types, APIGroup is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              service:
                                                description: |-
                                                  service references a service as a backend.
                                                  This is a mutually exclusive setting with "Resource".
                                                properties:
                                                  name:
                                                    description: |-
                                                      name is the referenced service. The service must exist in
                                                      the same namespace as the Ingress object.
                                                    type: string
                                                  port:
                                                    description: |-
                                                      port of the referenced service. A port name or port number
                                                      is required for a IngressServiceBackend.
                                                    properties:
                                                      name:
                                                        description: |-
                                                          name is the name of the port on the Service.
                                                          This is a mutually exclusive setting with "Number".
                                                        type: string
                                                      number:
                                                        description: |-
                                                          number is the numerical port number (e.g. 80) on the Service.
                                                          This is a mutually exclusive setting with "Name".
                                                        format: int32
                                                        type: integer
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                required:
                                                - name
                                                type: object
                                            type: object
                                          path:
                                            description: |-
                                              path is matched against the path of an incoming request. Currently it can
                                              contain characters disallowed from the conventional "path" part of a URL
                                              as defined by RFC 3986. Paths must begin with a '/' and must be present
                                              when using PathType with value "Exact" or "Prefix".
                                            type: string
                                          pathType:
                                            description: |-
                                              pathType determines the interpretation of the path matching. PathType can
                                              be one of the following values:
                                              * Exact: Matches the URL path exactly.
                                              * Prefix: Matches based on a URL path prefix split by '/'. Matching is
                                                done on a path element by element basis. A path element refers is the
                                                list of labels in the path split by the '/' separator. A request is a
                                                match for path p if every p is an element-wise prefix of p of the
                                                request path. Note that if the last element of the path is a substring
                                                of the last element in request path, it is not a match (e.g. /foo/bar
                                                matches /foo/bar/baz, but does not match /foo/barbaz).
                                              * ImplementationSpecific: Interpretation of the Path matching is up to
                                                the IngressClass. Implementations can treat this as a separate PathType
                                                or treat it identically to Prefix or Exact path types.
                                              Implementations are required to support all path types.
                                            type: string
                                        required:
                                        - backend
                                        - pathType
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - paths
                                  type: object
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          tls:
                            description: |-
                              tls represents the TLS configuration. Currently the Ingress only supports a
                              single TLS port, 443. If multiple members of this list specify different hosts,
                              they will be multiplexed on the same port according to the hostname specified
                              through the SNI TLS extension, if the ingress controller fulfilling the
                              ingress supports SNI.
                            items:
                              description: IngressTLS describes the transport layer
                                security associated with an ingress.
                              properties:
                                hosts:
                                  description: |-
                                    hosts is a list of hosts included in the TLS certificate. The values in
                                    this list must match the name/s used in the tlsSecret. Defaults to the
                                    wildcard host setting for the loadbalancer controller fulfilling this
                                    Ingress, if left unspecified.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                secretName:
                                  description: |-
                                    secretName is the name of the secret used to terminate TLS traffic on
                                    port 443. Field is left optional to allow TLS routing based on SNI
                                    hostname alone. If the SNI host in a listener conflicts with the "Host"
                                    header field used by an IngressRule, the SNI host is used for termination
                                    and value of the "Host" header is used for routing.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to set in ingress
                        type: object
                      secretRef:
                        description: |-
                          SecretRef is the secret ref that store certificates
                          If secret not exist, it will use the default ingress certificate
                          If secret is nil, it will disable TLS on ingress spec.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      targetNodeGroupName:
                        description: TargetNodeGroupName permit to define if specific
                          node group is responsible to receive external access, like
                          ingest nodes
                        type: string
                    required:
                    - host
                    type: object
                  loadBalancer:
                    description: Load balancer permit to set load balancer settings
                    properties:
                      enabled:
                        default: false
                        description: |-
                          Enabled permit to enabled / disabled load balancer
                          Cloud provider need to support it
                          Default to false
                        type: boolean
                      targetNodeGroupName:
                        description: TargetNodeGroupName permit to define if specific
                          node group is responsible to receive external access, like
                          ingest nodes
                        type: string
                    type: object
                  route:
                    description: Route permit to set Openshift route settings
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to set in route
                        type: object
                      enabled:
                        default: false
                        description: |-
                          Enabled permit to enabled / disabled route
                          Default to false
                        type: boolean
                      host:
                        description: Host is the hostname to access on
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to set in route
                        type: object
                      routeSpec:
                        description: RouteSpec it merge with expected route spec
                        properties:
                          alternateBackends:
                            description: |-
                              alternateBackends allows up to 3 additional backends to be assigned to the route.
                              Only the Service kind is allowed, and it will be defaulted to Service.
                              Use the weight field in RouteTargetReference object to specify relative preference.
                            items:
                              description: |-
                                RouteTargetReference specifies the target that resolve into endpoints. Only the 'Service'
                                kind is allowed. Use 'weight' field to emphasize one over others.
                              properties:
                                kind:
                                  default: Service
                                  description: The kind of target that the route is
                                    referring to. Currently, only 'Service' is allowed
                                  enum:
                                  - Service
                                  - ""
                                  type: string
                                name:
                                  description: name of the service/target that is
                                    being referred to. e.g. name of the service
                                  minLength: 1
                                  type: string
                                weight:
                                  default: 100
                                  description: |-
                                    weight as an integer between 0 and 256, default 100, that specifies the target's relative weight
                                    against other target reference objects. 0 suppresses requests to this backend.
                                  format: int32
                                  maximum: 256
                                  minimum: 0
                                  type: integer
                              required:
                              - kind
                              - name
                              type: object
                            maxItems: 3
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            - kind
                            x-kubernetes-list-type: map
                          host:
                            description: |-
                              host is an alias/DNS that points to the service. Optional.
                              If not specified a route name will typically be automatically
                              chosen.
                              Must follow DNS952 subdomain conventions.
                            maxLength: 253
                            pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$
                            type: string
                          httpHeaders:
                            description: httpHeaders defines policy for HTTP headers.
                            properties:
                              actions:
                                description: |-
                                  actions specifies options for modifying headers and their values.
                                  Note that this option only applies to cleartext HTTP connections
                                  and to secure HTTP connections for which the ingress controller
                                  terminates encryption (that is, edge-terminated or reencrypt
                                  connections).  Headers cannot be modified for TLS passthrough
                                  connections.
                                  Setting the HSTS (`Strict-Transport-Security`) header is not supported via actions.
                                  `Strict-Transport-Security` may only be configured using the "haproxy.router.openshift.io/hsts_header"
                                  route annotation, and only in accordance with the policy specified in Ingress.Spec.RequiredHSTSPolicies.
                                  In case of HTTP request headers, the actions specified in spec.httpHeaders.actions on the Route will be executed after
                                  the actions specified in the IngressController's spec.httpHeaders.actions field.
                                  In case of HTTP response headers, the actions specified in spec.httpHeaders.actions on the IngressController will be
                                  executed after the actions specified in the Route's spec.httpHeaders.actions field.
                                  The headers set via this API will not appear in access logs.
                                  Any actions defined here are applied after any actions related to the following other fields:
                                  cache-control, spec.clientTLS,
                                  spec.httpHeaders.forwardedHeaderPolicy, spec.httpHeaders.uniqueId,
                                  and spec.httpHeaders.headerNameCaseAdjustments.
                                  The following header names are reserved and may not be modified via this API:
                                  Strict-Transport-Security, Proxy, Cookie, Set-Cookie.
                                  Note that the total size of all net added headers *after* interpolating dynamic values
                                  must not exceed the value of spec.tuningOptions.headerBufferMaxRewriteBytes on the
                                  IngressController. Please refer to the documentation
                                  for that API field for more details.
                                properties:
                                  request:
                                    description: |-
                                      request is a list of HTTP request headers to modify.
                                      Currently, actions may define to either `Set` or `Delete` headers values.
                                      Actions defined here will modify the request headers of all requests made through a route.
                                      These actions are applied to a specific Route defined within a cluster i.e. connections made through a route.
                                      Currently, actions may define to either `Set` or `Delete` headers values.
                                      Route actions will be executed after IngressController actions for request headers.
                                      Actions are applied in sequence as defined in this list.
                                      A maximum of 20 request header actions may be configured.
                                      You can use this field to specify HTTP request headers that should be set or deleted
                                      when forwarding connections from the client to your application.
                                      Sample fetchers allowed are "req.hdr" and "ssl_c_der".
                                      Converters allowed are "lower" and "base64".
                                      Example header values: "%[req.hdr(X-target),lower]", "%{+Q}[ssl_c_der,base64]".
                                      Any request header configuration applied directly via a Route resource using this API
                                      will override header configuration for a header of the same name applied via
                                      spec.httpHeaders.actions on the IngressController or route annotation.
                                      Note: This field cannot be used if your route uses TLS passthrough.
                                    items:
                                      description: RouteHTTPHeader specifies configuration
                                        for setting or deleting an HTTP header.
                                      properties:
                                        action:
                                          description: action specifies actions to
                                            perform on headers, such as setting or
                                            deleting headers.
                                          properties:
                                            set:
                                              description: |-
                                                set defines the HTTP header that should be set: added if it doesn't exist or replaced if it does.
                                                This field is required when type is Set and forbidden otherwise.
                                              properties:
                                                value:
                                                  description: |-
                                                    value specifies a header value.
                                                    Dynamic values can be added. The value will be interpreted as an HAProxy format string as defined in
                                                    http://cbonte.github.io/haproxy-dconv/2.6/configuration.html#8.2.6 and may use HAProxy's %[] syntax and
                                                    otherwise must be a valid HTTP header value as defined in https://datatracker.ietf.org/doc/html/rfc7230#section-3.2.
                                                    The value of this field must be no more than 16384 characters in length.
                                                    Note that the total size of all net added headers *after* interpolating dynamic values
                                                    must not exceed the value of spec.tuningOptions.headerBufferMaxRewriteBytes on the
                                                    IngressController.
                                                  maxLength: 16384
                                                  minLength: 1
                                                  type: string
                                              required:
                                              - value
                                              type: object
                                            type:
                                              description: |-
                                                type defines the type of the action to be applied on the header.
                                                Possible values are Set or Delete.
                                                Set allows you to set HTTP request and response headers.
                                                Delete allows you to delete HTTP request and response headers.
                                              enum:
                                              - Set
                                              - Delete
                                              type: string
                                          required:
                                          - type
                                          type: object
                                          x-kubernetes-validations:
                                          - message: set is required when type is
                                              Set, and forbidden otherwise
                                            rule: 'has(self.type) && self.type ==
                                              ''Set'' ?  has(self.set) : !has(self.set)'
                                        name:
                                          description: |-
                                            name specifies the name of a header on which to perform an action. Its value must be a valid HTTP header
                                            name as defined in RFC 2616 section 4.2.
                                            The name must consist only of alphanumeric and the following special characters, "-!#$%&'*+.^_`".
                                            The following header names are reserved and may not be modified via this API:
                                            Strict-Transport-Security, Proxy, Cookie, Set-Cookie.
                                            It must be no more than 255 characters in length.
                                            Header name must be unique.
                                          maxLength: 255
                                          minLength: 1
                                          pattern: ^[-!#$%&'*+.0-9A-Z^_`a-z|~]+$
                                          type: string
                                          x-kubernetes-validations:
                                          - message: strict-transport-security header
                                              may not be modified via header actions
                                            rule: self.lowerAscii() != 'strict-transport-security'
                                          - message: proxy header may not be modified
                                              via header actions
                                            rule: self.lowerAscii() != 'proxy'
                                          - message: cookie header may not be modified
                                              via header actions
                                            rule: self.lowerAscii() != 'cookie'
                                          - message: set-cookie header may not be
                                              modified via header actions
                                            rule: self.lowerAscii() != 'set-cookie'
                                      required:
                                      - action
                                      - name
                                      type: object
                                    maxItems: 20
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                    x-kubernetes-validations:
                                    - message: Either the header value provided is
                                        not in correct format or the sample fetcher/converter
                                        specified is not allowed. The dynamic header
                                        value will be interpreted as an HAProxy format
                                        string as defined in http://cbonte.github.io/haproxy-dconv/2.6/configuration.html#8.2.6
                                        and may use HAProxy's %[] syntax and otherwise
                                        must be a valid HTTP header value as defined
                                        in https://datatracker.ietf.org/doc/html/rfc7230#section-3.2.
                                        Sample fetchers allowed are req.hdr, ssl_c_der.
                                        Converters allowed are lower, base64.
                                      rule: self.all(key, key.action.type == "Delete"
                                        || (has(key.action.set) && key.action.set.value.matches('^(?:%(?:%|(?:\\{[-+]?[QXE](?:,[-+]?[QXE])*\\})?\\[(?:req\\.hdr\\([0-9A-Za-z-]+\\)|ssl_c_der)(?:,(?:lower|base64))*\\])|[^%[:cntrl:]])+$')))
                                  response:
                                    description: |-
                                      response is a list of HTTP response headers to modify.
                                      Currently, actions may define to either `Set` or `Delete` headers values.
                                      Actions defined here will modify the response headers of all requests made through a route.
                                      These actions are applied to a specific Route defined within a cluster i.e. connections made through a route.
                                      Route actions will be executed before IngressController actions for response headers.
                                      Actions are applied in sequence as defined in this list.
                                      A maximum of 20 response header actions may be configured.
                                      You can use this field to specify HTTP response headers that should be set or deleted
                                      when forwarding responses from your application to the client.
                                      Sample fetchers allowed are "res.hdr" and "ssl_c_der".
                                      Converters allowed are "lower" and "base64".
                                      Example header values: "%[res.hdr(X-target),lower]", "%{+Q}[ssl_c_der,base64]".
                                      Note: This field cannot be used if your route uses TLS passthrough.
                                    items:
                                      description: RouteHTTPHeader specifies configuration
                                        for setting or deleting an HTTP header.
                                      properties:
                                        action:
                                          description: action specifies actions to
                                            perform on headers, such as setting or
                                            deleting headers.
                                          properties:
                                            set:
                                              description: |-
                                                set defines the HTTP header that should be set: added if it doesn't exist or replaced if it does.
                                                This field is required when type is Set and forbidden otherwise.
                                              properties:
                                                value:
                                                  description: |-
                                                    value specifies a header value.
                                                    Dynamic values can be added. The value will be interpreted as an HAProxy format string as defined in
                                                    http://cbonte.github.io/haproxy-dconv/2.6/configuration.html#8.2.6 and may use HAProxy's %[] syntax and
                                                    otherwise must be a valid HTTP header value as defined in https://datatracker.ietf.org/doc/html/rfc7230#section-3.2.
                                                    The value of this field must be no more than 16384 characters in length.
                                                    Note that the total size of all net added headers *after* interpolating dynamic values
                                                    must not exceed the value of spec.tuningOptions.headerBufferMaxRewriteBytes on the
                                                    IngressController.
                                                  maxLength: 16384
                                                  minLength: 1
                                                  type: string
                                              required:
                                              - value
                                              type: object
                                            type:
                                              description: |-
                                                type defines the type of the action to be applied on the header.
                                                Possible values are Set or Delete.
                                                Set allows you to set HTTP request and response headers.
                                                Delete allows you to delete HTTP request and response headers.
                                              enum:
                                              - Set
                                              - Delete
                                              type: string
                                          required:
                                          - type
                                          type: object
                                          x-kubernetes-validations:
                                          - message: set is required when type is
                                              Set, and forbidden otherwise
                                            rule: 'has(self.type) && self.type ==
                                              ''Set'' ?  has(self.set) : !has(self.set)'
                                        name:
                                          description: |-
                                            name specifies the name of a header on which to perform an action. Its value must be a valid HTTP header
                                            name as defined in RFC 2616 section 4.2.
                                            The name must consist only of alphanumeric and the following special characters, "-!#$%&'*+.^_`".
                                            The following header names are reserved and may not be modified via this API:
                                            Strict-Transport-Security, Proxy, Cookie, Set-Cookie.
                                            It must be no more than 255 characters in length.
                                            Header name must be unique.
                                          maxLength: 255
                                          minLength: 1
                                          pattern: ^[-!#$%&'*+.0-9A-Z^_`a-z|~]+$
                                          type: string
                                          x-kubernetes-validations:
                                          - message: strict-transport-security header
                                              may not be modified via header actions
                                            rule: self.lowerAscii() != 'strict-transport-security'
                                          - message: proxy header may not be modified
                                              via header actions
                                            rule: self.lowerAscii() != 'proxy'
                                          - message: cookie header may not be modified
                                              via header actions
                                            rule: self.lowerAscii() != 'cookie'
                                          - message: set-cookie header may not be
                                              modified via header actions
                                            rule: self.lowerAscii() != 'set-cookie'
                                      required:
                                      - action
                                      - name
                                      type: object
                                    maxItems: 20
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                    x-kubernetes-validations:
                                    - message: Either the header value provided is
                                        not in correct format or the sample fetcher/converter
                                        specified is not allowed. The dynamic header
                                        value will be interpreted as an HAProxy format
                                        string as defined in http://cbonte.github.io/haproxy-dconv/2.6/configuration.html#8.2.6
                                        and may use HAProxy's %[] syntax and otherwise
                                        must be a valid HTTP header value as defined
                                        in https://datatracker.ietf.org/doc/html/rfc7230#section-3.2.
                                        Sample fetchers allowed are res.hdr, ssl_c_der.
                                        Converters allowed are lower, base64.
                                      rule: self.all(key, key.action.type == "Delete"
                                        || (has(key.action.set) && key.action.set.value.matches('^(?:%(?:%|(?:\\{[-+]?[QXE](?:,[-+]?[QXE])*\\})?\\[(?:res\\.hdr\\([0-9A-Za-z-]+\\)|ssl_c_der)(?:,(?:lower|base64))*\\])|[^%[:cntrl:]])+$')))
                                type: object
                            type: object
                          path:
                            description: path that the router watches for, to route
                              traffic for to the service. Optional
                            pattern: ^/
                            type: string
                          port:
                            description: |-
                              If specified, the port to be used by the router. Most routers will use all
                              endpoints exposed by the service by default - set this value to instruct routers
                              which port to use.
                            properties:
                              targetPort:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  The target port on pods selected by the service this route points to.
                                  If this is a string, it will be looked up as a named port in the target
                                  endpoints port list. Required
                                x-kubernetes-int-or-string: true
                            required:
                            - targetPort
                            type: object
                          subdomain:
                            description: |-
                              subdomain is a DNS subdomain that is requested within the ingress controller's
                              domain (as a subdomain). If host is set this field is ignored. An ingress
                              controller may choose to ignore this suggested name, in which case the controller
                              will report the assigned name in the status.ingress array or refuse to admit the
                              route. If this value is set and the server does not support this field host will
                              be populated automatically. Otherwise host is left empty. The field may have
                              multiple parts separated by a dot, but not all ingress controllers may honor
                              the request. This field may not be changed after creation except by a user with
                              the update routes/custom-host permission.

                              Example: subdomain `frontend` automatically receives the router subdomain
                              `apps.mycluster.com` to have a full hostname `frontend.apps.mycluster.com`.
                            maxLength: 253
                            pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$
                            type: string
                          tls:
                            description: The tls field provides the ability to configure
                              certificates and termination for the route.
                            properties:
                              caCertificate:
                                description: caCertificate provides the cert authority
                                  certificate contents
                                type: string
                              certificate:
                                description: |-
                                  certificate provides certificate contents. This should be a single serving certificate, not a certificate
                                  chain. Do not include a CA certificate.
                                type: string
                              destinationCACertificate:
                                description: |-
                                  destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt
                                  termination this file should be provided in order to have routers use it for health checks on the secure connection.
                                  If this field is not specified, the router may provide its own destination CA and perform hostname validation using
                                  the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically
                                  verify.
                                type: string
                              externalCertificate:
                                description: |-
                                  externalCertificate provides certificate contents as a secret reference.
                                  This should be a single serving certificate, not a certificate
                                  chain. Do not include a CA certificate. The secret referenced should
                                  be present in the same namespace as that of the Route.
                                  Forbidden when `certificate` is set.
                                properties:
                                  name:
                                    description: |-
                                      name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              insecureEdgeTerminationPolicy:
                                description: |-
                                  insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While
                                  each router may make its own decisions on which ports to expose, this is normally port 80.

                                  If a route does not specify insecureEdgeTerminationPolicy, then the default behavior is "None".

                                  * Allow - traffic is sent to the server on the insecure port (edge/reencrypt terminations only).

                                  * None - no traffic is allowed on the insecure port (default).

                                  * Redirect - clients are redirected to the secure port.
                                enum:
                                - Allow
                                - None
                                - Redirect
                                - ""
                                type: string
                              key:
                                description: key provides key file contents
                                type: string
                              termination:
                                description: |-
                                  termination indicates termination type.

                                  * edge - TLS termination is done by the router and http is used to communicate with the backend (default)
                                  * passthrough - Traffic is sent straight to the destination without the router providing TLS termination
                                  * reencrypt - TLS termination is done by the router and https is used to communicate with the backend

                                  Note: passthrough termination is incompatible with httpHeader actions
                                enum:
                                - edge
                                - reencrypt
                                - passthrough
                                type: string
                            required:
                            - termination
                            type: object
                            x-kubernetes-validations:
                            - message: 'cannot have both spec.tls.termination: passthrough
                                and spec.tls.insecureEdgeTerminationPolicy: Allow'
                              rule: 'has(self.termination) && has(self.insecureEdgeTerminationPolicy)
                                ? !((self.termination==''passthrough'') && (self.insecureEdgeTerminationPolicy==''Allow''))
                                : true'
                          to:
                            description: |-
                              to is an object the route should use as the primary backend. Only the Service kind
                              is allowed, and it will be defaulted to Service. If the weight field (0-256 default 100)
                              is set to zero, no traffic will be sent to this backend.
                            properties:
                              kind:
                                default: Service
                                description: The kind of target that the route is
                                  referring to. Currently, only 'Service' is allowed
                                enum:
                                - Service
                                - ""
                                type: string
                              name:
                                description: name of the service/target that is being
                                  referred to. e.g. name of the service
                                minLength: 1
                                type: string
                              weight:
                                default: 100
                                description: |-
                                  weight as an integer between 0 and 256, default 100, that specifies the target's relative weight
                                  against other target reference objects. 0 suppresses requests to this backend.
                                format: int32
                                maximum: 256
                                minimum: 0
                                type: integer
                            required:
                            - kind
                            - name
                            type: object
                          wildcardPolicy:
                            default: None
                            description: |-
                              Wildcard policy if any for the route.
                              Currently only 'Subdomain' or 'None' is allowed.
                            enum:
                            - None
                            - Subdomain
                            - ""
                            type: string
                        required:
                        - to
                        type: object
                      secretRef:
                        description: |-
                          SecretRef is the secret ref that store certificates
                          If secret not exist, it will use the default route certificate
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      targetNodeGroupName:
                        description: TargetNodeGroupName permit to define if specific
                          node group is responsible to receive external access, like
                          ingest nodes
                        type: string
                      tlsEnabled:
                        description: Set to true to enable TLS on route
                        type: boolean
                    required:
                    - host
                    type: object
                type: object
              globalNodeGroup:
                description: GlobalNodeGroup permit to set some default parameters
                  for each node groups
                properties:
                  additionalVolumes:
                    description: |-
                      AdditionalVolumes permit to use additionnal volumes
                      Default is empty
                    items:
                      description: DeploymentVolumeSpec permit to set volume
                      properties:
                        awsElasticBlockStore:
                          description: |-
                            awsElasticBlockStore represents an AWS Disk resource that is attached to a
                            kubelet's host machine and then exposed to the pod.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type of the volume that you want to mount.
                                Tip: Ensure that the filesystem type is supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              type: string
                            partition:
                              description: |-
                                partition is the partition in the volume that you want to mount.
                                If omitted, the default is to mount by volume name.
                                Examples: For volume /dev/sda1, you specify the partition as "1".
                                Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                              format: int32
                              type: integer
                            readOnly:
                              description: |-
                                readOnly value true will force the readOnly setting in VolumeMounts.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              type: boolean
                            volumeID:
                              description: |-
                                volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              type: string
                          required:
                          - volumeID
                          type: object
                        azureDisk:
                          description: azureDisk represents an Azure Data Disk mount
                            on the host and bind mount to the pod.
                          properties:
                            cachingMode:
                              description: 'cachingMode is the Host Caching mode:
                                None, Read Only, Read Write.'
                              type: string
                            diskName:
                              description: diskName is the Name of the data disk in
                                the blob storage
                              type: string
                            diskURI:
                              description: diskURI is the URI of data disk in the
                                blob storage
                              type: string
                            fsType:
                              default: ext4
                              description: |-
                                fsType is Filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            kind:
                              description: 'kind expected values are Shared: multiple
                                blob disks per storage account  Dedicated: single
                                blob disk per storage account  Managed: azure managed
                                data disk (only in managed availability set). defaults
                                to shared'
                              type: string
                            readOnly:
                              default: false
                              description: |-
                                readOnly Defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                          required:
                          - diskName
                          - diskURI
                          type: object
                        azureFile:
                          description: azureFile represents an Azure File Service
                            mount on the host and bind mount to the pod.
                          properties:
                            readOnly:
                              description: |-
                                readOnly defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretName:
                              description: secretName is the  name of secret that
                                contains Azure Storage Account Name and Key
                              type: string
                            shareName:
                              description: shareName is the azure share Name
                              type: string
                          required:
                          - secretName
                          - shareName
                          type: object
                        cephfs:
                          description: cephFS represents a Ceph FS mount on the host
                            that shares a pod's lifetime
                          properties:
                            monitors:
                              description: |-
                                monitors is Required: Monitors is a collection of Ceph monitors
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            path:
                              description: 'path is Optional: Used as the mounted
                                root, rather than the full Ceph tree, default is /'
                              type: string
                            readOnly:
                              description: |-
                                readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              type: boolean
                            secretFile:
                              description: |-
                                secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              type: string
                            secretRef:
                              description: |-
                                secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            user:
                              description: |-
                                user is optional: User is the rados user name, default is admin
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              type: string
                          required:
                          - monitors
                          type: object
                        cinder:
                          description: |-
                            cinder represents a cinder volume attached and mounted on kubelets host machine.
                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              type: string
                            readOnly:
                              description: |-
                                readOnly defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef is optional: points to a secret object containing parameters used to connect
                                to OpenStack.
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            volumeID:
                              description: |-
                                volumeID used to identify the volume in cinder.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              type: string
                          required:
                          - volumeID
                          type: object
                        configMap:
                          description: configMap represents a configMap that should
                            populate this volume
                          properties:
                            defaultMode:
                              description: |-
                                defaultMode is optional: mode bits used to set permissions on created files by default.
                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                Defaults to 0644.
                                Directories within the path are not affected by this setting.
                                This might be in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            items:
                              description: |-
                                items if unspecified, each key-value pair in the Data field of the referenced
                                ConfigMap will be projected into the volume as a file whose name is the
                                key and content is the value. If specified, the listed keys will be
                                projected into the specified paths, and unlisted keys will not be
                                present. If a key is specified which is not present in the ConfigMap,
                                the volume setup will error unless it is marked optional. Paths must be
                                relative and may not contain the '..' path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: |-
                                      mode is Optional: mode bits used to set permissions on this file.
                                      Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                      YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                      If not specified, the volume defaultMode will be used.
                                      This might be in conflict with other options that affect the file
                                      mode, like fsGroup, and the result can be other mode bits set.
                                    format: int32
                                    type: integer
                                  path:
                                    description: |-
                                      path is the relative path of the file to map the key to.
                                      May not be an absolute path.
                                      May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: optional specify whether the ConfigMap
                                or its keys must be defined
                              type: boolean
                          type: object
                          x-kubernetes-map-type: atomic
                        csi:
                          description: csi (Container Storage Interface) represents
                            ephemeral storage that is handled by certain external
                            CSI drivers (Beta feature).
                          properties:
                            driver:
                              description: |-
                                driver is the name of the CSI driver that handles this volume.
                                Consult with your admin for the correct name as registered in the cluster.
                              type: string
                            fsType:
                              description: |-
                                fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                If not provided, the empty value is passed to the associated CSI driver
                                which will determine the default filesystem to apply.
                              type: string
                            nodePublishSecretRef:
                              description: |-
                                nodePublishSecretRef is a reference to the secret object containing
                                sensitive information to pass to the CSI driver to complete the CSI
                                NodePublishVolume and NodeUnpublishVolume calls.
                                This field is optional, and  may be empty if no secret is required. If the
                                secret object contains more than one secret, all secret references are passed.
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            readOnly:
                              description: |-
                                readOnly specifies a read-only configuration for the volume.
                                Defaults to false (read/write).
                              type: boolean
                            volumeAttributes:
                              additionalProperties:
                                type: string
                              description: |-
                                volumeAttributes stores driver-specific properties that are passed to the CSI
                                driver. Consult your driver's documentation for supported values.
                              type: object
                          required:
                          - driver
                          type: object
                        downwardAPI:
                          description: downwardAPI represents downward API about the
                            pod that should populate this volume
                          properties:
                            defaultMode:
                              description: |-
                                Optional: mode bits to use on created files by default. Must be a
                                Optional: mode bits used to set permissions on created files by default.
                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                Defaults to 0644.
                                Directories within the path are not affected by this setting.
                                This might be in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            items:
                              description: Items is a list of downward API volume
                                file
                              items:
                                description: DownwardAPIVolumeFile represents information
                                  to create the file containing the pod field
                                properties:
                                  fieldRef:
                                    description: 'Required: Selects a field of the
                                      pod: only annotations, labels, name, namespace
                                      and uid are supported.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  mode:
                                    description: |-
                                      Optional: mode bits used to set permissions on this file, must be an octal value
                                      between 0000 and 0777 or a decimal value between 0 and 511.
                                      YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                      If not specified, the volume defaultMode will be used.
                                      This might be in conflict with other options that affect the file
                                      mode, like fsGroup, and the result can be other mode bits set.
                                    format: int32
                                    type: integer
                                  path:
                                    description: 'Required: Path is  the relative
                                      path name of the file to be created. Must not
                                      be absolute or contain the ''..'' path. Must
                                      be utf-8 encoded. The first item of the relative
                                      path must not start with ''..'''
                                    type: string
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - path
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        emptyDir:
                          description: |-
                            emptyDir represents a temporary directory that shares a pod's lifetime.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          properties:
                            medium:
                              description: |-
                                medium represents what type of storage medium should back this directory.
                                The default is "" which means to use the node's default medium.
                                Must be an empty string (default) or Memory.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                              type: string
                            sizeLimit:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                sizeLimit is the total amount of local storage required for this EmptyDir volume.
                                The size limit is also applicable for memory medium.
                                The maximum usage on memory medium EmptyDir would be the minimum value between
                                the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                                The default is nil which means that the limit is undefined.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        ephemeral:
                          description: |-
                            ephemeral represents a volume that is handled by a cluster storage driver.
                            The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                            and deleted when the pod is removed.

                            Use this if:
                            a) the volume is only needed while the pod runs,
                            b) features of normal volumes like restoring from snapshot or capacity
                               tracking are needed,
                            c) the storage driver is specified through a storage class, and
                            d) the storage driver supports dynamic volume provisioning through
                               a PersistentVolumeClaim (see EphemeralVolumeSource for more
                               information on the connection between this volume type
                               and PersistentVolumeClaim).

                            Use PersistentVolumeClaim or one of the vendor-specific
                            APIs for volumes that persist for longer than the lifecycle
                            of an individual pod.

                            Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                            be used that way - see the documentation of the driver for
                            more information.

                            A pod can use both types of ephemeral volumes and
                            persistent volumes at the same time.
                          properties:
                            volumeClaimTemplate:
                              description: |-
                                Will be used to create a stand-alone PVC to provision the volume.
                                The pod in which this EphemeralVolumeSource is embedded will be the
                                owner of the PVC, i.e. the PVC will be deleted together with the
                                pod.  The name of the PVC will be `<pod name>-<volume name>` where
                                `<volume name>` is the name from the `PodSpec.Volumes` array
                                entry. Pod validation will reject the pod if the concatenated name
                                is not valid for a PVC (for example, too long).

                                An existing PVC with that name that is not owned by the pod
                                will *not* be used for the pod to avoid using an unrelated
                                volume by mistake. Starting the pod is then blocked until
                                the unrelated PVC is removed. If such a pre-created PVC is
                                meant to be used by the pod, the PVC has to updated with an
                                owner reference to the pod once the pod exists. Normally
                                this should not be necessary, but it may be useful when
                                manually reconstructing a broken cluster.

                                This field is read-only and no changes will be made by Kubernetes
                                to the PVC after it has been created.

                                Required, must not be nil.
                              properties:
                                metadata:
                                  description: |-
                                    May contain labels and annotations that will be copied into the PVC
                                    when creating it. No other fields are allowed and will be rejected during
                                    validation.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    finalizers:
                                      items:
                                        type: string
                                      type: array
                                    labels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                  type: object
                                spec:
                                  description: |-
                                    The specification for the PersistentVolumeClaim. The entire content is
                                    copied unchanged into the PVC that gets created from this
                                    template. The same fields as in a PersistentVolumeClaim
                                    are also valid here.
                                  properties:
                                    accessModes:
                                      description: |-
                                        accessModes contains the desired access modes the volume should have.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    dataSource:
                                      description: |-
                                        dataSource field can be used to specify either:
                                        * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                        * An existing PVC (PersistentVolumeClaim)
                                        If the provisioner or an external controller can support the specified data source,
                                        it will create a new volume based on the contents of the specified data source.
                                        When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                        and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                        If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                      properties:
                                        apiGroup:
                                          description: |-
                                            APIGroup is the group for the resource being referenced.
                                            If APIGroup is not specified, the specified Kind must be in the core API group.
                                            For any other third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    dataSourceRef:
                                      description: |-
                                        dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                        volume is desired. This may be any object from a non-empty API group (non
                                        core object) or a PersistentVolumeClaim object.
                                        When this field is specified, volume binding will only succeed if the type of
                                        the specified object matches some installed volume populator or dynamic
                                        provisioner.
                                        This field will replace the functionality of the dataSource field and as such
                                        if both fields are non-empty, they must have the same value. For backwards
                                        compatibility, when namespace isn't specified in dataSourceRef,
                                        both fields (dataSource and dataSourceRef) will be set to the same
                                        value automatically if one of them is empty and the other is non-empty.
                                        When namespace is specified in dataSourceRef,
                                        dataSource isn't set to the same value and must be empty.
                                        There are three important differences between dataSource and dataSourceRef:
                                        * While dataSource only allows two specific types of objects, dataSourceRef
                                          allows any non-core object, as well as PersistentVolumeClaim objects.
                                        * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                          preserves all values, and generates an error if a disallowed value is
                                          specified.
                                        * While dataSource only allows local objects, dataSourceRef allows objects
                                          in any namespaces.
                                        (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                        (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                      properties:
                                        apiGroup:
                                          description: |-
                                            APIGroup is the group for the resource being referenced.
                                            If APIGroup is not specified, the specified Kind must be in the core API group.
                                            For any other third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of resource being referenced
                                            Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                            (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    resources:
                                      description: |-
                                        resources represents the minimum resources the volume should have.
                                        If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                        that are lower than previous value but must still be higher than capacity recorded in the
                                        status field of the claim.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    selector:
                                      description: selector is a label query over
                                        volumes to consider for binding.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    storageClassName:
                                      description: |-
                                        storageClassName is the name of the StorageClass required by the claim.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                      type: string
                                    volumeAttributesClassName:
                                      description: |-
                                        volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                        If specified, the CSI driver will create or update the volume with the attributes defined
                                        in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                        it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                        will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                        If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                        will be set by the persistentvolume controller if it exists.
                                        If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                        set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                        exists.
                                        More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                        (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                                      type: string
                                    volumeMode:
                                      description: |-
                                        volumeMode defines what type of volume is required by the claim.
                                        Value of Filesystem is implied when not included in claim spec.
                                      type: string
                                    volumeName:
                                      description: volumeName is the binding reference
                                        to the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                              required:
                              - spec
                              type: object
                          type: object
                        fc:
                          description: fc represents a Fibre Channel resource that
                            is attached to a kubelet's host machine and then exposed
                            to the pod.
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            lun:
                              description: 'lun is Optional: FC target lun number'
                              format: int32
                              type: integer
                            readOnly:
                              description: |-
                                readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            targetWWNs:
                              description: 'targetWWNs is Optional: FC target worldwide
                                names (WWNs)'
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            wwids:
                              description: |-
                                wwids Optional: FC volume world wide identifiers (wwids)
                                Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        flexVolume:
                          description: |-
                            flexVolume represents a generic volume resource that is
                            provisioned/attached using an exec based plugin.
                          properties:
                            driver:
                              description: driver is the name of the driver to use
                                for this volume.
                              type: string
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                              type: string
                            options:
                              additionalProperties:
                                type: string
                              description: 'options is Optional: this field holds
                                extra command options if any.'
                              type: object
                            readOnly:
                              description: |-
                                readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef is Optional: secretRef is reference to the secret object containing
                                sensitive information to pass to the plugin scripts. This may be
                                empty if no secret object is specified. If the secret object
                                contains more than one secret, all secrets are passed to the plugin
                                scripts.
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - driver
                          type: object
                        flocker:
                          description: flocker represents a Flocker volume attached
                            to a kubelet's host machine. This depends on the Flocker
                            control service being running
                          properties:
                            datasetName:
                              description: |-
                                datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                                should be considered as deprecated
                              type: string
                            datasetUUID:
                              description: datasetUUID is the UUID of the dataset.
                                This is unique identifier of a Flocker dataset
                              type: string
                          type: object
                        gcePersistentDisk:
                          description: |-
                            gcePersistentDisk represents a GCE Disk resource that is attached to a
                            kubelet's host machine and then exposed to the pod.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          properties:
                            fsType:
                              description: |-
                                fsType is filesystem type of the volume that you want to mount.
                                Tip: Ensure that the filesystem type is supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              type: string
                            partition:
                              description: |-
                                partition is the partition in the volume that you want to mount.
                                If omitted, the default is to mount by volume name.
                                Examples: For volume /dev/sda1, you specify the partition as "1".
                                Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              format: int32
                              type: integer
                            pdName:
                              description: |-
                                pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the ReadOnly setting in VolumeMounts.
                                Defaults to false.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              type: boolean
                          required:
                          - pdName
                          type: object
                        gitRepo:
                          description: |-
                            gitRepo represents a git repository at a particular revision.
                            DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
                            EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                            into the Pod's container.
                          properties:
                            directory:
                              description: |-
                                directory is the target directory name.
                                Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                                git repository.  Otherwise, if specified, the volume will contain the git repository in
                                the subdirectory with the given name.
                              type: string
                            repository:
                              description: repository is the URL
                              type: string
                            revision:
                              description: revision is the commit hash for the specified
                                revision.
                              type: string
                          required:
                          - repository
                          type: object
                        glusterfs:
                          description: |-
                            glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                            More info: https://examples.k8s.io/volumes/glusterfs/README.md
                          properties:
                            endpoints:
                              description: |-
                                endpoints is the endpoint name that details Glusterfs topology.
                                More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              type: string
                            path:
                              description: |-
                                path is the Glusterfs volume path.
                                More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                                Defaults to false.
                                More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              type: boolean
                          required:
                          - endpoints
                          - path
                          type: object
                        hostPath:
                          description: |-
                            hostPath represents a pre-existing file or directory on the host
                            machine that is directly exposed to the container. This is generally
                            used for system agents or other privileged things that are allowed
                            to see the host machine. Most containers will NOT need this.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          properties:
                            path:
                              description: |-
                                path of the directory on the host.
                                If the path is a symlink, it will follow the link to the real path.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              type: string
                            type:
                              description: |-
                                type for HostPath Volume
                                Defaults to ""
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              type: string
                          required:
                          - path
                          type: object
                        image:
                          description: |-
                            image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
                            The volume is resolved at pod startup depending on which PullPolicy value is provided:

                            - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                            - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                            - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.

                            The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
                            A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
                            The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
                            The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
                            The volume will be mounted read-only (ro) and non-executable files (noexec).
                            Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).
                            The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
                          properties:
                            pullPolicy:
                              description: |-
                                Policy for pulling OCI objects. Possible values are:
                                Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
                                Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                              type: string
                            reference:
                              description: |-
                                Required: Image or artifact reference to be used.
                                Behaves in the same way as pod.spec.containers[*].image.
                                Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
                                More info: https://kubernetes.io/docs/concepts/containers/images
                                This field is optional to allow higher level config management to default or override
                                container images in workload controllers like Deployments and StatefulSets.
                              type: string
                          type: object
                        iscsi:
                          description: |-
                            iscsi represents an ISCSI Disk resource that is attached to a
                            kubelet's host machine and then exposed to the pod.
                            More info: https://examples.k8s.io/volumes/iscsi/README.md
                          properties:
                            chapAuthDiscovery:
                              description: chapAuthDiscovery defines whether support
                                iSCSI Discovery CHAP authentication
                              type: boolean
                            chapAuthSession:
                              description: chapAuthSession defines whether support
                                iSCSI Session CHAP authentication
                              type: boolean
                            fsType:
                              description: |-
                                fsType is the filesystem type of the volume that you want to mount.
                                Tip: Ensure that the filesystem type is supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                              type: string
                            initiatorName:
                              description: |-
                                initiatorName is the custom iSCSI Initiator Name.
                                If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                                <target portal>:<volume name> will be created for the connection.
                              type: string
                            iqn:
                              description: iqn is the target iSCSI Qualified Name.
                              type: string
                            iscsiInterface:
                              default: default
                              description: |-
                                iscsiInterface is the interface Name that uses an iSCSI transport.
                                Defaults to 'default' (tcp).
                              type: string
                            lun:
                              description: lun represents iSCSI Target Lun number.
                              format: int32
                              type: integer
                            portals:
                              description: |-
                                portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                                is other than default (typically TCP ports 860 and 3260).
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            readOnly:
                              description: |-
                                readOnly here will force the ReadOnly setting in VolumeMounts.
                                Defaults to false.
                              type: boolean
                            secretRef:
                              description: secretRef is the CHAP Secret for iSCSI
                                target and initiator authentication
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            targetPortal:
                              description: |-
                                targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                                is other than default (typically TCP ports 860 and 3260).
                              type: string
                          required:
                          - iqn
                          - lun
                          - targetPortal
                          type: object
                        mountPath:
                          description: |-
                            Path within the container at which the volume should be mounted.  Must
                            not contain ':'.
                          type: string
                        mountPropagation:
                          description: |-
                            mountPropagation determines how mounts are propagated from the host
                            to container and the other way around.
                            When not set, MountPropagationNone is used.
                            This field is beta in 1.10.
                            When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                            (which defaults to None).
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        nfs:
                          description: |-
                            nfs represents an NFS mount on the host that shares a pod's lifetime
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          properties:
                            path:
                              description: |-
                                path that is exported by the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the NFS export to be mounted with read-only permissions.
                                Defaults to false.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              type: boolean
                            server:
                              description: |-
                                server is the hostname or IP address of the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              type: string
                          required:
                          - path
                          - server
                          type: object
                        persistentVolumeClaim:
                          description: |-
                            persistentVolumeClaimVolumeSource represents a reference to a
                            PersistentVolumeClaim in the same namespace.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            claimName:
                              description: |-
                                claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                              type: string
                            readOnly:
                              description: |-
                                readOnly Will force the ReadOnly setting in VolumeMounts.
                                Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        photonPersistentDisk:
                          description: photonPersistentDisk represents a PhotonController
                            persistent disk attached and mounted on kubelets host
                            machine
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            pdID:
                              description: pdID is the ID that identifies Photon Controller
                                persistent disk
                              type: string
                          required:
                          - pdID
                          type: object
                        portworxVolume:
                          description: portworxVolume represents a portworx volume
                            attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: |-
                                fSType represents the filesystem type to mount
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: |-
                                readOnly defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            volumeID:
                              description: volumeID uniquely identifies a Portworx
                                volume
                              type: string
                          required:
                          - volumeID
                          type: object
                        projected:
                          description: projected items for all in one resources secrets,
                            configmaps, and downward API
                          properties:
                            defaultMode:
                              description: |-
                                defaultMode are the mode bits used to set permissions on created files by default.
                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                Directories within the path are not affected by this setting.
                                This might be in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            sources:
                              description: |-
                                sources is the list of volume projections. Each entry in this list
                                handles one source.
                              items:
                                description: |-
                                  Projection that may be projected along with other supported volume types.
                                  Exactly one of these fields must be set.
                                properties:
                                  clusterTrustBundle:
                                    description: |-
                                      ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                      of ClusterTrustBundle objects in an auto-updating file.

                                      Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                      ClusterTrustBundle objects can either be selected by name, or by the
                                      combination of signer name and a label selector.

                                      Kubelet performs aggressive normalization of the PEM contents written
                                      into the pod filesystem.  Esoteric PEM features such as inter-block
                                      comments and block headers are stripped.  Certificates are deduplicated.
                                      The ordering of certificates within the file is arbitrary, and Kubelet
                                      may change the order over time.
                                    properties:
                                      labelSelector:
                                        description: |-
                                          Select all ClusterTrustBundles that match this label selector.  Only has
                                          effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                          interpreted as "match nothing".  If set but empty, interpreted as "match
                                          everything".
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      name:
                                        description: |-
                                          Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                          with signerName and labelSelector.
                                        type: string
                                      optional:
                                        description: |-
                                          If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                          aren't available.  If using name, then the named ClusterTrustBundle is
                                          allowed not to exist.  If using signerName, then the combination of
                                          signerName and labelSelector is allowed to match zero
                                          ClusterTrustBundles.
                                        type: boolean
                                      path:
                                        description: Relative path from the volume
                                          root to write the bundle.
                                        type: string
                                      signerName:
                                        description: |-
                                          Select all ClusterTrustBundles that match this signer name.
                                          Mutually-exclusive with name.  The contents of all selected
                                          ClusterTrustBundles will be unified and deduplicated.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                  configMap:
                                    description: configMap information about the configMap
                                      data to project
                                    properties:
                                      items:
                                        description: |-
                                          items if unspecified, each key-value pair in the Data field of the referenced
                                          ConfigMap will be projected into the volume as a file whose name is the
                                          key and content is the value. If specified, the listed keys will be
                                          projected into the specified paths, and unlisted keys will not be
                                          present. If a key is specified which is not present in the ConfigMap,
                                          the volume setup will error unless it is marked optional. Paths must be
                                          relative and may not contain the '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: |-
                                                mode is Optional: mode bits used to set permissions on this file.
                                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                If not specified, the volume defaultMode will be used.
                                                This might be in conflict with other options that affect the file
                                                mode, like fsGroup, and the result can be other mode bits set.
                                              format: int32
                                              type: integer
                                            path:
                                              description: |-
                                                path is the relative path of the file to map the key to.
                                                May not be an absolute path.
                                                May not contain the path element '..'.
                                                May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: optional specify whether the
                                          ConfigMap or its keys must be defined
                                        type: boolean
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  downwardAPI:
                                    description: downwardAPI information about the
                                      downwardAPI data to project
                                    properties:
                                      items:
                                        description: Items is a list of DownwardAPIVolume
                                          file
                                        items:
                                          description: DownwardAPIVolumeFile represents
                                            information to create the file containing
                                            the pod field
                                          properties:
                                            fieldRef:
                                              description: 'Required: Selects a field
                                                of the pod: only annotations, labels,
                                                name, namespace and uid are supported.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            mode:
                                              description: |-
                                                Optional: mode bits used to set permissions on this file, must be an octal value
                                                between 0000 and 0777 or a decimal value between 0 and 511.
                                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                If not specified, the volume defaultMode will be used.
                                                This might be in conflict with other options that affect the file
                                                mode, like fsGroup, and the result can be other mode bits set.
                                              format: int32
                                              type: integer
                                            path:
                                              description: 'Required: Path is  the
                                                relative path name of the file to
                                                be created. Must not be absolute or
                                                contain the ''..'' path. Must be utf-8
                                                encoded. The first item of the relative
                                                path must not start with ''..'''
                                              type: string
                                            resourceFieldRef:
                                              description: |-
                                                Selects a resource of the container: only resources limits and requests
                                                (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          required:
                                          - path
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                  secret:
                                    description: secret information about the secret
                                      data to project
                                    properties:
                                      items:
                                        description: |-
                                          items if unspecified, each key-value pair in the Data field of the referenced
                                          Secret will be projected into the volume as a file whose name is the
                                          key and content is the value. If specified, the listed keys will be
                                          projected into the specified paths, and unlisted keys will not be
                                          present. If a key is specified which is not present in the Secret,
                                          the volume setup will error unless it is marked optional. Paths must be
                                          relative and may not contain the '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: |-
                                                mode is Optional: mode bits used to set permissions on this file.
                                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                If not specified, the volume defaultMode will be used.
                                                This might be in conflict with other options that affect the file
                                                mode, like fsGroup, and the result can be other mode bits set.
                                              format: int32
                                              type: integer
                                            path:
                                              description: |-
                                                path is the relative path of the file to map the key to.
                                                May not be an absolute path.
                                                May not contain the path element '..'.
                                                May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: optional field specify whether
                                          the Secret or its key must be defined
                                        type: boolean
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  serviceAccountToken:
                                    description: serviceAccountToken is information
                                      about the serviceAccountToken data to project
                                    properties:
                                      audience:
                                        description: |-
                                          audience is the intended audience of the token. A recipient of a token
                                          must identify itself with an identifier specified in the audience of the
                                          token, and otherwise should reject the token. The audience defaults to the
                                          identifier of the apiserver.
                                        type: string
                                      expirationSeconds:
                                        description: |-
                                          expirationSeconds is the requested duration of validity of the service
                                          account token. As the token approaches expiration, the kubelet volume
                                          plugin will proactively rotate the service account token. The kubelet will
                                          start trying to rotate the token if the token is older than 80 percent of
                                          its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                          and must be at least 10 minutes.
                                        format: int64
                                        type: integer
                                      path:
                                        description: |-
                                          path is the path relative to the mount point of the file to project the
                                          token into.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        quobyte:
                          description: quobyte represents a Quobyte mount on the host
                            that shares a pod's lifetime
                          properties:
                            group:
                              description: |-
                                group to map volume access to
                                Default is no group
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                                Defaults to false.
                              type: boolean
                            registry:
                              description: |-
                                registry represents a single or multiple Quobyte Registry services
                                specified as a string as host:port pair (multiple entries are separated with commas)
                                which acts as the central registry for volumes
                              type: string
                            tenant:
                              description: |-
                                tenant owning the given Quobyte volume in the Backend
                                Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                              type: string
                            user:
                              description: |-
                                user to map volume access to
                                Defaults to serivceaccount user
                              type: string
                            volume:
                              description: volume is a string that references an already
                                created Quobyte volume by name.
                              type: string
                          required:
                          - registry
                          - volume
                          type: object
                        rbd:
                          description: |-
                            rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                            More info: https://examples.k8s.io/volumes/rbd/README.md
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type of the volume that you want to mount.
                                Tip: Ensure that the filesystem type is supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                              type: string
                            image:
                              description: |-
                                image is the rados image name.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: string
                            keyring:
                              default: /etc/ceph/keyring
                              description: |-
                                keyring is the path to key ring for RBDUser.
                                Default is /etc/ceph/keyring.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: string
                            monitors:
                              description: |-
                                monitors is a collection of Ceph monitors.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            pool:
                              default: rbd
                              description: |-
                                pool is the rados pool name.
                                Default is rbd.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the ReadOnly setting in VolumeMounts.
                                Defaults to false.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef is name of the authentication secret for RBDUser. If provided
                                overrides keyring.
                                Default is nil.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            user:
                              default: admin
                              description: |-
                                user is the rados user name.
                                Default is admin.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: string
                          required:
                          - image
                          - monitors
                          type: object
                        readOnly:
                          description: |-
                            Mounted read-only if true, read-write otherwise (false or unspecified).
                            Defaults to false.
                          type: boolean
                        recursiveReadOnly:
                          description: |-
                            RecursiveReadOnly specifies whether read-only mounts should be handled
                            recursively.

                            If ReadOnly is false, this field has no meaning and must be unspecified.

                            If ReadOnly is true, and this field is set to Disabled, the mount is not made
                            recursively read-only.  If this field is set to IfPossible, the mount is made
                            recursively read-only, if it is supported by the container runtime.  If this
                            field is set to Enabled, the mount is made recursively read-only if it is
                            supported by the container runtime, otherwise the pod will not be started and
                            an error will be generated to indicate the reason.

                            If this field is set to IfPossible or Enabled, MountPropagation must be set to
                            None (or be unspecified, which defaults to None).

                            If this field is not specified, it is treated as an equivalent of Disabled.
                          type: string
                        scaleIO:
                          description: scaleIO represents a ScaleIO persistent volume
                            attached and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              default: xfs
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs".
                                Default is "xfs".
                              type: string
                            gateway:
                              description: gateway is the host address of the ScaleIO
                                API Gateway.
                              type: string
                            protectionDomain:
                              description: protectionDomain is the name of the ScaleIO
                                Protection Domain for the configured storage.
                              type: string
                            readOnly:
                              description: |-
                                readOnly Defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef references to the secret for ScaleIO user and other
                                sensitive information. If this is not provided, Login operation will fail.
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            sslEnabled:
                              description: sslEnabled Flag enable/disable SSL communication
                                with Gateway, default false
                              type: boolean
                            storageMode:
                              default: ThinProvisioned
                              description: |-
                                storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                                Default is ThinProvisioned.
                              type: string
                            storagePool:
                              description: storagePool is the ScaleIO Storage Pool
                                associated with the protection domain.
                              type: string
                            system:
                              description: system is the name of the storage system
                                as configured in ScaleIO.
                              type: string
                            volumeName:
                              description: |-
                                volumeName is the name of a volume already created in the ScaleIO system
                                that is associated with this volume source.
                              type: string
                          required:
                          - gateway
                          - secretRef
                          - system
                          type: object
                        secret:
                          description: |-
                            secret represents a secret that should populate this volume.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                          properties:
                            defaultMode:
                              description: |-
                                defaultMode is Optional: mode bits used to set permissions on created files by default.
                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                YAML accepts both octal and decimal values, JSON requires decimal values
                                for mode bits. Defaults to 0644.
                                Directories within the path are not affected by this setting.
                                This might be in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            items:
                              description: |-
                                items If unspecified, each key-value pair in the Data field of the referenced
                                Secret will be projected into the volume as a file whose name is the
                                key and content is the value. If specified, the listed keys will be
                                projected into the specified paths, and unlisted keys will not be
                                present. If a key is specified which is not present in the Secret,
                                the volume setup will error unless it is marked optional. Paths must be
                                relative and may not contain the '..' path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: |-
                                      mode is Optional: mode bits used to set permissions on this file.
                                      Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                      YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                      If not specified, the volume defaultMode will be used.
                                      This might be in conflict with other options that affect the file
                                      mode, like fsGroup, and the result can be other mode bits set.
                                    format: int32
                                    type: integer
                                  path:
                                    description: |-
                                      path is the relative path of the file to map the key to.
                                      May not be an absolute path.
                                      May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            optional:
                              description: optional field specify whether the Secret
                                or its keys must be defined
                              type: boolean
                            secretName:
                              description: |-
                                secretName is the name of the secret in the pod's namespace to use.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                              type: string
                          type: object
                        storageos:
                          description: storageOS represents a StorageOS volume attached
                            and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: |-
                                readOnly defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef specifies the secret to use for obtaining the StorageOS API
                                credentials.  If not specified, default values will be attempted.
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            volumeName:
                              description: |-
                                volumeName is the human-readable name of the StorageOS volume.  Volume
                                names are only unique within a namespace.
                              type: string
                            volumeNamespace:
                              description: |-
                                volumeNamespace specifies the scope of the volume within StorageOS.  If no
                                namespace is specified then the Pod's namespace will be used.  This allows the
                                Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                                Set VolumeName to any name to override the default behaviour.
                                Set to "default" if you are not using namespaces within StorageOS.
                                Namespaces that do not pre-exist within StorageOS will be created.
                              type: string
                          type: object
                        subPath:
                          description: |-
                            Path within the volume from which the container's volume should be mounted.
                            Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: |-
                            Expanded path within the volume from which the container's volume should be mounted.
                            Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                            Defaults to "" (volume's root).
                            SubPathExpr and SubPath are mutually exclusive.
                          type: string
                        vsphereVolume:
                          description: vsphereVolume represents a vSphere volume attached
                            and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: |-
                                fsType is filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            storagePolicyID:
                              description: storagePolicyID is the storage Policy Based
                                Management (SPBM) profile ID associated with the StoragePolicyName.
                              type: string
                            storagePolicyName:
                              description: storagePolicyName is the storage Policy
                                Based Management (SPBM) profile name.
                              type: string
                            volumePath:
                              description: volumePath is the path that identifies
                                vSphere volume vmdk
                              type: string
                          required:
                          - volumePath
                          type: object
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations permit to set annotation on containers
                    type: object
                  antiAffinity:
                    description: AntiAffinity permit to set anti affinity policy
                    properties:
                      topologyKey:
                        default: kubernetes.io/hostname
                        description: |-
                          TopologyKey is the topology key to use
                          Default to kubernetes.io/hostname
                        type: string
                      type:
                        default: soft
                        description: Type permit to set anti affinity as soft or hard
                        enum:
                        - soft
                        - hard
                        type: string
                    required:
                    - type
                    type: object
                  caSecretRef:
                    description: |-
                      CacertsSecretRef is the secret that store custom CA to import on cacerts
                      It usefull to access on onpremise S3 service to store snaoshot and more
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  config:
                    additionalProperties:
                      type: string
                    description: |-
                      Config is the Elasticsearch config dedicated for this node groups like roles
                      The key is the file stored on elasticsearch/config
                    type: object
                  env:
                    description: Env permit to set some environment variable on containers
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  envFrom:
                    description: EnvFrom permit to set some environment variable from
                      config map or secret
                    items:
                      description: EnvFromSource represents the source of a set of
                        ConfigMaps
                      properties:
                        configMapRef:
                          description: The ConfigMap to select from
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap must be defined
                              type: boolean
                          type: object
                          x-kubernetes-map-type: atomic
                        prefix:
                          description: An optional identifier to prepend to each key
                            in the ConfigMap. Must be a C_IDENTIFIER.
                          type: string
                        secretRef:
                          description: The Secret to select from
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret must be defined
                              type: boolean
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    type: array
                  initContainerResources:
                    description: InitContainerResources permit to set resources on
                      init containers
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  jvm:
                    description: |-
                      Jvm permit to set extra option on JVM like memory or proxy to download plugins
                      Becarefull with memory, not forget to set the right ressource on pod
                    type: string
                  keystoreSecretRef:
                    description: KeystoreSecretRef is the secret that store the security
                      settings
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels permit to set labels on containers
                    type: object
                  podDisruptionBudget:
                    description: PodDisruptionBudget is the pod disruption budget
                      policy
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at most "maxUnavailable" pods selected by
                          "selector" are unavailable after the eviction, i.e. even in absence of
                          the evicted pod. For example, one can prevent all voluntary evictions
                          by specifying 0. This is a mutually exclusive setting with "minAvailable".
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at least "minAvailable" pods selected by
                          "selector" will still be available after the eviction, i.e. even in the
                          absence of the evicted pod.  So for example you can prevent all voluntary
                          evictions by specifying "100%".
                        x-kubernetes-int-or-string: true
                      selector:
                        description: |-
                          Label query over pods whose evictions are managed by the disruption
                          budget.
                          A null selector will match no pods, while an empty ({}) selector will select
                          all pods within the namespace.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      unhealthyPodEvictionPolicy:
                        description: |-
                          UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods
                          should be considered for eviction. Current implementation considers healthy pods,
                          as pods that have status.conditions item with type="Ready",status="True".

                          Valid policies are IfHealthyBudget and AlwaysAllow.
                          If no policy is specified, the default behavior will be used,
                          which corresponds to the IfHealthyBudget policy.

                          IfHealthyBudget policy means that running pods (status.phase="Running"),
                          but not yet healthy can be evicted only if the guarded application is not
                          disrupted (status.currentHealthy is at least equal to status.desiredHealthy).
                          Healthy pods will be subject to the PDB for eviction.

                          AlwaysAllow policy means that all running pods (status.phase="Running"),
                          but not yet healthy are considered disrupted and can be evicted regardless
                          of whether the criteria in a PDB is met. This means perspective running
                          pods of a disrupted application might not get a chance to become healthy.
                          Healthy pods will be subject to the PDB for eviction.

                          Additional policies may be added in the future.
                          Clients making eviction decisions should disallow eviction of unhealthy pods
                          if they encounter an unrecognized policy in this field.

                          This field is beta-level. The eviction API uses this field when
                          the feature gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default).
                        type: string
                    type: object
                  podTemplate:
                    description: |
                      PodTemplate is merged with expected pod
                      It usefull to add some extra properties on pod spec
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              image:
                description: |-
                  Image is the image to use when deploy Elasticsearch
                  It can be usefull to use internal registry or mirror
                type: string
              imagePullPolicy:
                default: IfNotPresent
                description: ImagePullPolicy is the image pull policy to use
                enum:
                - Always
                - Never
                - IfNotPresent
                type: string
              imagePullSecrets:
                description: ImagePullSecrets is the image pull secrets to use
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              licenseSecretRef:
                description: LicenseSecretRef permit to set secret that contain Elasticsearch
                  license on key `license`
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              monitoring:
                description: |-
                  Monitoring permit to monitor current cluster
                  Default, it not monitor cluster
                properties:
                  metricbeat:
                    description: Metricbeat permit to monitor cluster with metricbeat
                      and to dedicated monitoring cluster
                    properties:
                      elasticsearchRef:
                        description: ElasticsearchRef is the Elasticsearch ref to
                          connect on.
                        properties:
                          elasticsearchCASecretRef:
                            description: |-
                              ElasticsearchCaSecretRef is the secret that store your custom CA certificate to connect on Elasticsearch API.
                              It need to have the following keys: ca.crt
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          external:
                            description: ExternalElasticsearchRef is the external
                              Elasticsearch cluster not managed by operator
                            properties:
                              addresses:
                                description: Addresses is the list of Elasticsearch
                                  addresses
                                items:
                                  type: string
                                type: array
                            required:
                            - addresses
                            type: object
                          managed:
                            description: ManagedElasticsearchRef is the managed Elasticsearch
                              cluster by operator
                            properties:
                              name:
                                description: Name is the Elasticsearch cluster deployed
                                  by operator
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace where Elasticsearch is deployed by operator
                                  No need to set if Kibana is deployed on the same namespace
                                type: string
                              targetNodeGroup:
                                description: |-
                                  TargetNodeGroup is the target Elasticsearch node group to use as service to connect on Elasticsearch
                                  Default, it use the global service
                                type: string
                            required:
                            - name
                            type: object
                          secretRef:
                            description: |-
                              SecretName is the secret that contain the setting to connect on Elasticsearch. It can be auto computed for managed Elasticsearch.
                              It need to contain the keys `username` and `password`.
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      enabled:
                        default: false
                        description: |-
                          Enabled permit to enable Metricbeat monitoring
                          It will deploy metricbeat to collect metric
                          Default to false
                        type: boolean
                      numberOfReplicas:
                        default: 0
                        description: |-
                          NumberOfReplica is the number of replica to set on metricbeat setting when it create templates
                          Default is set to 0
                        format: int64
                        type: integer
                      refreshPeriod:
                        default: 10s
                        description: |-
                          RefreshPeriod permit to set the time to collect data
                          Defaullt to  `10s`
                        type: string
                      resources:
                        description: Resources permit to set resources on metricbeat
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      version:
                        description: |-
                          Version is the Metricbeat version to use
                          Default it use the same version of the product that it monitor
                        type: string
                    type: object
                  prometheus:
                    description: Prometheus permit to monitor cluster with Prometheus
                      and graphana (via exporter)
                    properties:
                      enabled:
                        default: false
                        description: |-
                          Enabled permit to enable Prometheus monitoring
                          It will deploy exporter and add podMonitor policy
                          Default to false
                        type: boolean
                      image:
                        description: |-
                          Image is the image to use when deploy Elasticsearch
                          It can be usefull to use internal registry or mirror
                        type: string
                      imagePullPolicy:
                        default: IfNotPresent
                        description: ImagePullPolicy is the image pull policy to use
                        enum:
                        - Always
                        - Never
                        - IfNotPresent
                        type: string
                      imagePullSecrets:
                        description: ImagePullSecrets is the image pull secrets to
                          use
                        items:
                          description: |-
                            LocalObjectReference contains enough information to let you locate the
                            referenced object inside the same namespace.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      installPlugin:
                        default: true
                        description: |-
                          InstallPlugin permit to install plugin
                          Default to true
                        type: boolean
                      resources:
                        description: |-
                          Resources permit to set ressources on Prometheus expporter container
                          If not defined, it will use the default requirements
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      scrapInterval:
                        default: 10s
                        description: |-
                          ScrapInterval is the scrap interval to collect ressource whith prometheus
                          Default to 10 secode
                        type: string
                      url:
                        description: Url is the plugin URL where to download exporter
                        type: string
                      version:
                        default: latest
                        description: |-
                          Version is the exporter version to use
                          Default is use the latest
                        type: string
                    type: object
                type: object
              nodeGroups:
                description: |-
                  NodeGroups permit to groups node per use case
                  For exemple master, data and ingest
                items:
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations permit to set annotation on deployment
                      type: object
                    antiAffinity:
                      description: AntiAffinity permit to set anti affinity policy
                      properties:
                        topologyKey:
                          default: kubernetes.io/hostname
                          description: |-
                            TopologyKey is the topology key to use
                            Default to kubernetes.io/hostname
                          type: string
                        type:
                          default: soft
                          description: Type permit to set anti affinity as soft or
                            hard
                          enum:
                          - soft
                          - hard
                          type: string
                      required:
                      - type
                      type: object
                    config:
                      additionalProperties:
                        type: string
                      description: |-
                        Config is the Elasticsearch config dedicated for this node groups
                        The key is the file stored on elasticsearch/config
                      type: object
                    env:
                      description: Env permit to set some environment variable on
                        containers
                      items:
                        description: EnvVar represents an environment variable present
                          in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be
                              a C_IDENTIFIER.
                            type: string
                          value:
                            description: |-
                              Variable references $(VAR_NAME) are expanded
                              using the previously defined environment variables in the container and
                              any service environment variables. If a variable cannot be resolved,
                              the reference in the input string will be unchanged. Double $$ are reduced
                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                              Escaped references will never be expanded, regardless of whether the variable
                              exists or not.
                              Defaults to "".
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              fieldRef:
                                description: |-
                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                                x-kubernetes-map-type: atomic
                              resourceFieldRef:
                                description: |-
                                  Selects a resource of the container: only resources limits and requests
                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                                x-kubernetes-map-type: atomic
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    envFrom:
                      description: EnvFrom permit to set some environment variable
                        from config map or secret
                      items:
                        description: EnvFromSource represents the source of a set
                          of ConfigMaps
                        properties:
                          configMapRef:
                            description: The ConfigMap to select from
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap must be
                                  defined
                                type: boolean
                            type: object
                            x-kubernetes-map-type: atomic
                          prefix:
                            description: An optional identifier to prepend to each
                              key in the ConfigMap. Must be a C_IDENTIFIER.
                            type: string
                          secretRef:
                            description: The Secret to select from
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret must be defined
                                type: boolean
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      type: array
                    jvm:
                      description: Jvm permit to set extra option on JVM like Xmx,
                        Xms
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels permit to set labels on containers
                      type: object
                    name:
                      description: Name is the the node group name
                      type: string
                    nodeSelector:
                      additionalProperties:
                        type: string
                      description: NodeSelector permit to set node selector on pod
                      type: object
                    persistence:
                      description: Persistence is the spec to persist data
                      properties:
                        volume:
                          description: |-
                            Volume is the volume source to use instead volumeClaim
                            It usefull if you should to use hostPath
                          properties:
                            awsElasticBlockStore:
                              description: |-
                                awsElasticBlockStore represents an AWS Disk resource that is attached to a
                                kubelet's host machine and then exposed to the pod.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              properties:
                                fsType:
                                  description: |-
                                    fsType is the filesystem type of the volume that you want to mount.
                                    Tip: Ensure that the filesystem type is supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  type: string
                                partition:
                                  description: |-
                                    partition is the partition in the volume that you want to mount.
                                    If omitted, the default is to mount by volume name.
                                    Examples: For volume /dev/sda1, you specify the partition as "1".
                                    Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                  format: int32
                                  type: integer
                                readOnly:
                                  description: |-
                                    readOnly value true will force the readOnly setting in VolumeMounts.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  type: boolean
                                volumeID:
                                  description: |-
                                    volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  type: string
                              required:
                              - volumeID
                              type: object
                            azureDisk:
                              description: azureDisk represents an Azure Data Disk
                                mount on the host and bind mount to the pod.
                              properties:
                                cachingMode:
                                  description: 'cachingMode is the Host Caching mode:
                                    None, Read Only, Read Write.'
                                  type: string
                                diskName:
                                  description: diskName is the Name of the data disk
                                    in the blob storage
                                  type: string
                                diskURI:
                                  description: diskURI is the URI of data disk in
                                    the blob storage
                                  type: string
                                fsType:
                                  default: ext4
                                  description: |-
                                    fsType is Filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  type: string
                                kind:
                                  description: 'kind expected values are Shared: multiple
                                    blob disks per storage account  Dedicated: single
                                    blob disk per storage account  Managed: azure
                                    managed data disk (only in managed availability
                                    set). defaults to shared'
                                  type: string
                                readOnly:
                                  default: false
                                  description: |-
                                    readOnly Defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                              required:
                              - diskName
                              - diskURI
                              type: object
                            azureFile:
                              description: azureFile represents an Azure File Service
                                mount on the host and bind mount to the pod.
                              properties:
                                readOnly:
                                  description: |-
                                    readOnly defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                secretName:
                                  description: secretName is the  name of secret that
                                    contains Azure Storage Account Name and Key
                                  type: string
                                shareName:
                                  description: shareName is the azure share Name
                                  type: string
                              required:
                              - secretName
                              - shareName
                              type: object
                            cephfs:
                              description: cephFS represents a Ceph FS mount on the
                                host that shares a pod's lifetime
                              properties:
                                monitors:
                                  description: |-
                                    monitors is Required: Monitors is a collection of Ceph monitors
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                path:
                                  description: 'path is Optional: Used as the mounted
                                    root, rather than the full Ceph tree, default
                                    is /'
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  type: boolean
                                secretFile:
                                  description: |-
                                    secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  type: string
                                secretRef:
                                  description: |-
                                    secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                user:
                                  description: |-
                                    user is optional: User is the rados user name, default is admin
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  type: string
                              required:
                              - monitors
                              type: object
                            cinder:
                              description: |-
                                cinder represents a cinder volume attached and mounted on kubelets host machine.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              properties:
                                fsType:
                                  description: |-
                                    fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  type: boolean
                                secretRef:
                                  description: |-
                                    secretRef is optional: points to a secret object containing parameters used to connect
                                    to OpenStack.
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                volumeID:
                                  description: |-
                                    volumeID used to identify the volume in cinder.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  type: string
                              required:
                              - volumeID
                              type: object
                            configMap:
                              description: configMap represents a configMap that should
                                populate this volume
                              properties:
                                defaultMode:
                                  description: |-
                                    defaultMode is optional: mode bits used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    Defaults to 0644.
                                    Directories within the path are not affected by this setting.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                items:
                                  description: |-
                                    items if unspecified, each key-value pair in the Data field of the referenced
                                    ConfigMap will be projected into the volume as a file whose name is the
                                    key and content is the value. If specified, the listed keys will be
                                    projected into the specified paths, and unlisted keys will not be
                                    present. If a key is specified which is not present in the ConfigMap,
                                    the volume setup will error unless it is marked optional. Paths must be
                                    relative and may not contain the '..' path or start with '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: key is the key to project.
                                        type: string
                                      mode:
                                        description: |-
                                          mode is Optional: mode bits used to set permissions on this file.
                                          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                          If not specified, the volume defaultMode will be used.
                                          This might be in conflict with other options that affect the file
                                          mode, like fsGroup, and the result can be other mode bits set.
                                        format: int32
                                        type: integer
                                      path:
                                        description: |-
                                          path is the relative path of the file to map the key to.
                                          May not be an absolute path.
                                          May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: optional specify whether the ConfigMap
                                    or its keys must be defined
                                  type: boolean
                              type: object
                              x-kubernetes-map-type: atomic
                            csi:
                              description: csi (Container Storage Interface) represents
                                ephemeral storage that is handled by certain external
                                CSI drivers (Beta feature).
                              properties:
                                driver:
                                  description: |-
                                    driver is the name of the CSI driver that handles this volume.
                                    Consult with your admin for the correct name as registered in the cluster.
                                  type: string
                                fsType:
                                  description: |-
                                    fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                    If not provided, the empty value is passed to the associated CSI driver
                                    which will determine the default filesystem to apply.
                                  type: string
                                nodePublishSecretRef:
                                  description: |-
                                    nodePublishSecretRef is a reference to the secret object containing
                                    sensitive information to pass to the CSI driver to complete the CSI
                                    NodePublishVolume and NodeUnpublishVolume calls.
                                    This field is optional, and  may be empty if no secret is required. If the
                                    secret object contains more than one secret, all secret references are passed.
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                readOnly:
                                  description: |-
                                    readOnly specifies a read-only configuration for the volume.
                                    Defaults to false (read/write).
                                  type: boolean
                                volumeAttributes:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    volumeAttributes stores driver-specific properties that are passed to the CSI
                                    driver. Consult your driver's documentation for supported values.
                                  type: object
                              required:
                              - driver
                              type: object
                            downwardAPI:
                              description: downwardAPI represents downward API about
                                the pod that should populate this volume
                              properties:
                                defaultMode:
                                  description: |-
                                    Optional: mode bits to use on created files by default. Must be a
                                    Optional: mode bits used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    Defaults to 0644.
                                    Directories within the path are not affected by this setting.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                items:
                                  description: Items is a list of downward API volume
                                    file
                                  items:
                                    description: DownwardAPIVolumeFile represents
                                      information to create the file containing the
                                      pod field
                                    properties:
                                      fieldRef:
                                        description: 'Required: Selects a field of
                                          the pod: only annotations, labels, name,
                                          namespace and uid are supported.'
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the
                                              FieldPath is written in terms of, defaults
                                              to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select
                                              in the specified API version.
                                            type: string
                                        required:
                                        - fieldPath
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      mode:
                                        description: |-
                                          Optional: mode bits used to set permissions on this file, must be an octal value
                                          between 0000 and 0777 or a decimal value between 0 and 511.
                                          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                          If not specified, the volume defaultMode will be used.
                                          This might be in conflict with other options that affect the file
                                          mode, like fsGroup, and the result can be other mode bits set.
                                        format: int32
                                        type: integer
                                      path:
                                        description: 'Required: Path is  the relative
                                          path name of the file to be created. Must
                                          not be absolute or contain the ''..'' path.
                                          Must be utf-8 encoded. The first item of
                                          the relative path must not start with ''..'''
                                        type: string
                                      resourceFieldRef:
                                        description: |-
                                          Selects a resource of the container: only resources limits and requests
                                          (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                        properties:
                                          containerName:
                                            description: 'Container name: required
                                              for volumes, optional for env vars'
                                            type: string
                                          divisor:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Specifies the output format
                                              of the exposed resources, defaults to
                                              "1"
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select'
                                            type: string
                                        required:
                                        - resource
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    required:
                                    - path
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            emptyDir:
                              description: |-
                                emptyDir represents a temporary directory that shares a pod's lifetime.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                              properties:
                                medium:
                                  description: |-
                                    medium represents what type of storage medium should back this directory.
                                    The default is "" which means to use the node's default medium.
                                    Must be an empty string (default) or Memory.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                  type: string
                                sizeLimit:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    sizeLimit is the total amount of local storage required for this EmptyDir volume.
                                    The size limit is also applicable for memory medium.
                                    The maximum usage on memory medium EmptyDir would be the minimum value between
                                    the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                                    The default is nil which means that the limit is undefined.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              type: object
                            ephemeral:
                              description: |-
                                ephemeral represents a volume that is handled by a cluster storage driver.
                                The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                                and deleted when the pod is removed.

                                Use this if:
                                a) the volume is only needed while the pod runs,
                                b) features of normal volumes like restoring from snapshot or capacity
                                   tracking are needed,
                                c) the storage driver is specified through a storage class, and
                                d) the storage driver supports dynamic volume provisioning through
                                   a PersistentVolumeClaim (see EphemeralVolumeSource for more
                                   information on the connection between this volume type
                                   and PersistentVolumeClaim).

                                Use PersistentVolumeClaim or one of the vendor-specific
                                APIs for volumes that persist for longer than the lifecycle
                                of an individual pod.

                                Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                                be used that way - see the documentation of the driver for
                                more information.

                                A pod can use both types of ephemeral volumes and
                                persistent volumes at the same time.
                              properties:
                                volumeClaimTemplate:
                                  description: |-
                                    Will be used to create a stand-alone PVC to provision the volume.
                                    The pod in which this EphemeralVolumeSource is embedded will be the
                                    owner of the PVC, i.e. the PVC will be deleted together with the
                                    pod.  The name of the PVC will be `<pod name>-<volume name>` where
                                    `<volume name>` is the name from the `PodSpec.Volumes` array
                                    entry. Pod validation will reject the pod if the concatenated name
                                    is not valid for a PVC (for example, too long).

                                    An existing PVC with that name that is not owned by the pod
                                    will *not* be used for the pod to avoid using an unrelated
                                    volume by mistake. Starting the pod is then blocked until
                                    the unrelated PVC is removed. If such a pre-created PVC is
                                    meant to be used by the pod, the PVC has to updated with an
                                    owner reference to the pod once the pod exists. Normally
                                    this should not be necessary, but it may be useful when
                                    manually reconstructing a broken cluster.

                                    This field is read-only and no changes will be made by Kubernetes
                                    to the PVC after it has been created.

                                    Required, must not be nil.
                                  properties:
                                    metadata:
                                      description: |-
                                        May contain labels and annotations that will be copied into the PVC
                                        when creating it. No other fields are allowed and will be rejected during
                                        validation.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          type: object
                                        finalizers:
                                          items:
                                            type: string
                                          type: array
                                        labels:
                                          additionalProperties:
                                            type: string
                                          type: object
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      type: object
                                    spec:
                                      description: |-
                                        The specification for the PersistentVolumeClaim. The entire content is
                                        copied unchanged into the PVC that gets created from this
                                        template. The same fields as in a PersistentVolumeClaim
                                        are also valid here.
                                      properties:
                                        accessModes:
                                          description: |-
                                            accessModes contains the desired access modes the volume should have.
                                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        dataSource:
                                          description: |-
                                            dataSource field can be used to specify either:
                                            * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                            * An existing PVC (PersistentVolumeClaim)
                                            If the provisioner or an external controller can support the specified data source,
                                            it will create a new volume based on the contents of the specified data source.
                                            When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                            and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                            If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                          properties:
                                            apiGroup:
                                              description: |-
                                                APIGroup is the group for the resource being referenced.
                                                If APIGroup is not specified, the specified Kind must be in the core API group.
                                                For any other third-party types, APIGroup is required.
                                              type: string
                                            kind:
                                              description: Kind is the type of resource
                                                being referenced
                                              type: string
                                            name:
                                              description: Name is the name of resource
                                                being referenced
                                              type: string
                                          required:
                                          - kind
                                          - name
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        dataSourceRef:
                                          description: |-
                                            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                            volume is desired. This may be any object from a non-empty API group (non
                                            core object) or a PersistentVolumeClaim object.
                                            When this field is specified, volume binding will only succeed if the type of
                                            the specified object matches some installed volume populator or dynamic
                                            provisioner.
                                            This field will replace the functionality of the dataSource field and as such
                                            if both fields are non-empty, they must have the same value. For backwards
                                            compatibility, when namespace isn't specified in dataSourceRef,
                                            both fields (dataSource and dataSourceRef) will be set to the same
                                            value automatically if one of them is empty and the other is non-empty.
                                            When namespace is specified in dataSourceRef,
                                            dataSource isn't set to the same value and must be empty.
                                            There are three important differences between dataSource and dataSourceRef:
                                            * While dataSource only allows two specific types of objects, dataSourceRef
                                              allows any non-core object, as well as PersistentVolumeClaim objects.
                                            * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                              preserves all values, and generates an error if a disallowed value is
                                              specified.
                                            * While dataSource only allows local objects, dataSourceRef allows objects
                                              in any namespaces.
                                            (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                            (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                          properties:
                                            apiGroup:
                                              description: |-
                                                APIGroup is the group for the resource being referenced.
                                                If APIGroup is not specified, the specified Kind must be in the core API group.
                                                For any other third-party types, APIGroup is required.
                                              type: string
                                            kind:
                                              description: Kind is the type of resource
                                                being referenced
                                              type: string
                                            name:
                                              description: Name is the name of resource
                                                being referenced
                                              type: string
                                            namespace:
                                              description: |-
                                                Namespace is the namespace of resource being referenced
                                                Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                                (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                              type: string
                                          required:
                                          - kind
                                          - name
                                          type: object
                                        resources:
                                          description: |-
                                            resources represents the minimum resources the volume should have.
                                            If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                            that are lower than previous value but must still be higher than capacity recorded in the
                                            status field of the claim.
                                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                          properties:
                                            limits:
                                              additionalProperties:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: |-
                                                Limits describes the maximum amount of compute resources allowed.
                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                              type: object
                                            requests:
                                              additionalProperties:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: |-
                                                Requests describes the minimum amount of compute resources required.
                                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                              type: object
                                          type: object
                                        selector:
                                          description: selector is a label query over
                                            volumes to consider for binding.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        storageClassName:
                                          description: |-
                                            storageClassName is the name of the StorageClass required by the claim.
                                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                          type: string
                                        volumeAttributesClassName:
                                          description: |-
                                            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                            If specified, the CSI driver will create or update the volume with the attributes defined
                                            in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                            it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                            will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                            If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                            will be set by the persistentvolume controller if it exists.
                                            If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                            set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                            exists.
                                            More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                            (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                                          type: string
                                        volumeMode:
                                          description: |-
                                            volumeMode defines what type of volume is required by the claim.
                                            Value of Filesystem is implied when not included in claim spec.
                                          type: string
                                        volumeName:
                                          description: volumeName is the binding reference
                                            to the PersistentVolume backing this claim.
                                          type: string
                                      type: object
                                  required:
                                  - spec
                                  type: object
                              type: object
                            fc:
                              description: fc represents a Fibre Channel resource
                                that is attached to a kubelet's host machine and then
                                exposed to the pod.
                              properties:
                                fsType:
                                  description: |-
                                    fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  type: string
                                lun:
                                  description: 'lun is Optional: FC target lun number'
                                  format: int32
                                  type: integer
                                readOnly:
                                  description: |-
                                    readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                targetWWNs:
                                  description: 'targetWWNs is Optional: FC target
                                    worldwide names (WWNs)'
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                wwids:
                                  description: |-
                                    wwids Optional: FC volume world wide identifiers (wwids)
                                    Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            flexVolume:
                              description: |-
                                flexVolume represents a generic volume resource that is
                                provisioned/attached using an exec based plugin.
                              properties:
                                driver:
                                  description: driver is the name of the driver to
                                    use for this volume.
                                  type: string
                                fsType:
                                  description: |-
                                    fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                                  type: string
                                options:
                                  additionalProperties:
                                    type: string
                                  description: 'options is Optional: this field holds
                                    extra command options if any.'
                                  type: object
                                readOnly:
                                  description: |-
                                    readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                secretRef:
                                  description: |-
                                    secretRef is Optional: secretRef is reference to the secret object containing
                                    sensitive information to pass to the plugin scripts. This may be
                                    empty if no secret object is specified. If the secret object
                                    contains more than one secret, all secrets are passed to the plugin
                                    scripts.
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - driver
                              type: object
                            flocker:
                              description: flocker represents a Flocker volume attached
                                to a kubelet's host machine. This depends on the Flocker
                                control service being running
                              properties:
                                datasetName:
                                  description: |-
                                    datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                                    should be considered as deprecated
                                  type: string
                                datasetUUID:
                                  description: datasetUUID is the UUID of the dataset.
                                    This is unique identifier of a Flocker dataset
                                  type: string
                              type: object
                            gcePersistentDisk:
                              description: |-
                                gcePersistentDisk represents a GCE Disk resource that is attached to a
                                kubelet's host machine and then exposed to the pod.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              properties:
                                fsType:
                                  description: |-
                                    fsType is filesystem type of the volume that you want to mount.
                                    Tip: Ensure that the filesystem type is supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  type: string
                                partition:
                                  description: |-
                                    partition is the partition in the volume that you want to mount.
                                    If omitted, the default is to mount by volume name.
                                    Examples: For volume /dev/sda1, you specify the partition as "1".
                                    Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  format: int32
                                  type: integer
                                pdName:
                                  description: |-
                                    pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly here will force the ReadOnly setting in VolumeMounts.
                                    Defaults to false.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  type: boolean
                              required:
                              - pdName
                              type: object
                            gitRepo:
                              description: |-
                                gitRepo represents a git repository at a particular revision.
                                DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
                                EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                                into the Pod's container.
                              properties:
                                directory:
                                  description: |-
                                    directory is the target directory name.
                                    Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                                    git repository.  Otherwise, if specified, the volume will contain the git repository in
                                    the subdirectory with the given name.
                                  type: string
                                repository:
                                  description: repository is the URL
                                  type: string
                                revision:
                                  description: revision is the commit hash for the
                                    specified revision.
                                  type: string
                              required:
                              - repository
                              type: object
                            glusterfs:
                              description: |-
                                glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                                More info: https://examples.k8s.io/volumes/glusterfs/README.md
                              properties:
                                endpoints:
                                  description: |-
                                    endpoints is the endpoint name that details Glusterfs topology.
                                    More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                  type: string
                                path:
                                  description: |-
                                    path is the Glusterfs volume path.
                                    More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                                    Defaults to false.
                                    More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                  type: boolean
                              required:
                              - endpoints
                              - path
                              type: object
                            hostPath:
                              description: |-
                                hostPath represents a pre-existing file or directory on the host
                                machine that is directly exposed to the container. This is generally
                                used for system agents or other privileged things that are allowed
                                to see the host machine. Most containers will NOT need this.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              properties:
                                path:
                                  description: |-
                                    path of the directory on the host.
                                    If the path is a symlink, it will follow the link to the real path.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                  type: string
                                type:
                                  description: |-
                                    type for HostPath Volume
                                    Defaults to ""
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                  type: string
                              required:
                              - path
                              type: object
                            image:
                              description: |-
                                image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
                                The volume is resolved at pod startup depending on which PullPolicy value is provided:

                                - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.

                                The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
                                A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
                                The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
                                The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
                                The volume will be mounted read-only (ro) and non-executable files (noexec).
                                Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).
                                The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
                              properties:
                                pullPolicy:
                                  description: |-
                                    Policy for pulling OCI objects. Possible values are:
                                    Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                    Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                    IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
                                    Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                  type: string
                                reference:
                                  description: |-
                                    Required: Image or artifact reference to be used.
                                    Behaves in the same way as pod.spec.containers[*].image.
                                    Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
                                    More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config management to default or override
                                    container images in workload controllers like Deployments and StatefulSets.
                                  type: string
                              type: object
                            iscsi:
                              description: |-
                                iscsi represents an ISCSI Disk resource that is attached to a
                                kubelet's host machine and then exposed to the pod.
                                More info: https://examples.k8s.io/volumes/iscsi/README.md
                              properties:
                                chapAuthDiscovery:
                                  description: chapAuthDiscovery defines whether support
                                    iSCSI Discovery CHAP authentication
                                  type: boolean
                                chapAuthSession:
                                  description: chapAuthSession defines whether support
                                    iSCSI Session CHAP authentication
                                  type: boolean
                                fsType:
                                  description: |-
                                    fsType is the filesystem type of the volume that you want to mount.
                                    Tip: Ensure that the filesystem type is supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                  type: string
                                initiatorName:
                                  description: |-
                                    initiatorName is the custom iSCSI Initiator Name.
                                    If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                                    <target portal>:<volume name> will be created for the connection.
                                  type: string
                                iqn:
                                  description: iqn is the target iSCSI Qualified Name.
                                  type: string
                                iscsiInterface:
                                  default: default
                                  description: |-
                                    iscsiInterface is the interface Name that uses an iSCSI transport.
                                    Defaults to 'default' (tcp).
                                  type: string
                                lun:
                                  description: lun represents iSCSI Target Lun number.
                                  format: int32
                                  type: integer
                                portals:
                                  description: |-
                                    portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                                    is other than default (typically TCP ports 860 and 3260).
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                readOnly:
                                  description: |-
                                    readOnly here will force the ReadOnly setting in VolumeMounts.
                                    Defaults to false.
                                  type: boolean
                                secretRef:
                                  description: secretRef is the CHAP Secret for iSCSI
                                    target and initiator authentication
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                targetPortal:
                                  description: |-
                                    targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                                    is other than default (typically TCP ports 860 and 3260).
                                  type: string
                              required:
                              - iqn
                              - lun
                              - targetPortal
                              type: object
                            nfs:
                              description: |-
                                nfs represents an NFS mount on the host that shares a pod's lifetime
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              properties:
                                path:
                                  description: |-
                                    path that is exported by the NFS server.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly here will force the NFS export to be mounted with read-only permissions.
                                    Defaults to false.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  type: boolean
                                server:
                                  description: |-
                                    server is the hostname or IP address of the NFS server.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  type: string
                              required:
                              - path
                              - server
                              type: object
                            persistentVolumeClaim:
                              description: |-
                                persistentVolumeClaimVolumeSource represents a reference to a
                                PersistentVolumeClaim in the same namespace.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                              properties:
                                claimName:
                                  description: |-
                                    claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly Will force the ReadOnly setting in VolumeMounts.
                                    Default false.
                                  type: boolean
                              required:
                              - claimName
                              type: object
                            photonPersistentDisk:
                              description: photonPersistentDisk represents a PhotonController
                                persistent disk attached and mounted on kubelets host
                                machine
                              properties:
                                fsType:
                                  description: |-
                                    fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  type: string
                                pdID:
                                  description: pdID is the ID that identifies Photon
                                    Controller persistent disk
                                  type: string
                              required:
                              - pdID
                              type: object
                            portworxVolume:
                              description: portworxVolume represents a portworx volume
                                attached and mounted on kubelets host machine
                              properties:
                                fsType:
                                  description: |-
                                    fSType represents the filesystem type to mount
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                volumeID:
                                  description: volumeID uniquely identifies a Portworx
                                    volume
                                  type: string
                              required:
                              - volumeID
                              type: object
                            projected:
                              description: projected items for all in one resources
                                secrets, configmaps, and downward API
                              properties:
                                defaultMode:
                                  description: |-
                                    defaultMode are the mode bits used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    Directories within the path are not affected by this setting.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                sources:
                                  description: |-
                                    sources is the list of volume projections. Each entry in this list
                                    handles one source.
                                  items:
                                    description: |-
                                      Projection that may be projected along with other supported volume types.
                                      Exactly one of these fields must be set.
                                    properties:
                                      clusterTrustBundle:
                                        description: |-
                                          ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                          of ClusterTrustBundle objects in an auto-updating file.

                                          Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                          ClusterTrustBundle objects can either be selected by name, or by the
                                          combination of signer name and a label selector.

                                          Kubelet performs aggressive normalization of the PEM contents written
                                          into the pod filesystem.  Esoteric PEM features such as inter-block
                                          comments and block headers are stripped.  Certificates are deduplicated.
                                          The ordering of certificates within the file is arbitrary, and Kubelet
                                          may change the order over time.
                                        properties:
                                          labelSelector:
                                            description: |-
                                              Select all ClusterTrustBundles that match this label selector.  Only has
                                              effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                              interpreted as "match nothing".  If set but empty, interpreted as "match
                                              everything".
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          name:
                                            description: |-
                                              Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                              with signerName and labelSelector.
                                            type: string
                                          optional:
                                            description: |-
                                              If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                              aren't available.  If using name, then the named ClusterTrustBundle is
                                              allowed not to exist.  If using signerName, then the combination of
                                              signerName and labelSelector is allowed to match zero
                                              ClusterTrustBundles.
                                            type: boolean
                                          path:
                                            description: Relative path from the volume
                                              root to write the bundle.
                                            type: string
                                          signerName:
                                            description: |-
                                              Select all ClusterTrustBundles that match this signer name.
                                              Mutually-exclusive with name.  The contents of all selected
                                              ClusterTrustBundles will be unified and deduplicated.
                                            type: string
                                        required:
                                        - path
                                        type: object
                                      configMap:
                                        description: configMap information about the
                                          configMap data to project
                                        properties:
                                          items:
                                            description: |-
                                              items if unspecified, each key-value pair in the Data field of the referenced
                                              ConfigMap will be projected into the volume as a file whose name is the
                                              key and content is the value. If specified, the listed keys will be
                                              projected into the specified paths, and unlisted keys will not be
                                              present. If a key is specified which is not present in the ConfigMap,
                                              the volume setup will error unless it is marked optional. Paths must be
                                              relative and may not contain the '..' path or start with '..'.
                                            items:
                                              description: Maps a string key to a
                                                path within a volume.
                                              properties:
                                                key:
                                                  description: key is the key to project.
                                                  type: string
                                                mode:
                                                  description: |-
                                                    mode is Optional: mode bits used to set permissions on this file.
                                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                    If not specified, the volume defaultMode will be used.
                                                    This might be in conflict with other options that affect the file
                                                    mode, like fsGroup, and the result can be other mode bits set.
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: |-
                                                    path is the relative path of the file to map the key to.
                                                    May not be an absolute path.
                                                    May not contain the path element '..'.
                                                    May not start with the string '..'.
                                                  type: string
                                              required:
                                              - key
                                              - path
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: optional specify whether
                                              the ConfigMap or its keys must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      downwardAPI:
                                        description: downwardAPI information about
                                          the downwardAPI data to project
                                        properties:
                                          items:
                                            description: Items is a list of DownwardAPIVolume
                                              file
                                            items:
                                              description: DownwardAPIVolumeFile represents
                                                information to create the file containing
                                                the pod field
                                              properties:
                                                fieldRef:
                                                  description: 'Required: Selects
                                                    a field of the pod: only annotations,
                                                    labels, name, namespace and uid
                                                    are supported.'
                                                  properties:
                                                    apiVersion:
                                                      description: Version of the
                                                        schema the FieldPath is written
                                                        in terms of, defaults to "v1".
                                                      type: string
                                                    fieldPath:
                                                      description: Path of the field
                                                        to select in the specified
                                                        API version.
                                                      type: string
                                                  required:
                                                  - fieldPath
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                mode:
                                                  description: |-
                                                    Optional: mode bits used to set permissions on this file, must be an octal value
                                                    between 0000 and 0777 or a decimal value between 0 and 511.
                                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                    If not specified, the volume defaultMode will be used.
                                                    This might be in conflict with other options that affect the file
                                                    mode, like fsGroup, and the result can be other mode bits set.
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: 'Required: Path is  the
                                                    relative path name of the file
                                                    to be created. Must not be absolute
                                                    or contain the ''..'' path. Must
                                                    be utf-8 encoded. The first item
                                                    of the relative path must not
                                                    start with ''..'''
                                                  type: string
                                                resourceFieldRef:
                                                  description: |-
                                                    Selects a resource of the container: only resources limits and requests
                                                    (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                  properties:
                                                    containerName:
                                                      description: 'Container name:
                                                        required for volumes, optional
                                                        for env vars'
                                                      type: string
                                                    divisor:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      description: Specifies the output
                                                        format of the exposed resources,
                                                        defaults to "1"
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    resource:
                                                      description: 'Required: resource
                                                        to select'
                                                      type: string
                                                  required:
                                                  - resource
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                              required:
                                              - path
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        type: object
                                      secret:
                                        description: secret information about the
                                          secret data to project
                                        properties:
                                          items:
                                            description: |-
                                              items if unspecified, each key-value pair in the Data field of the referenced
                                              Secret will be projected into the volume as a file whose name is the
                                              key and content is the value. If specified, the listed keys will be
                                              projected into the specified paths, and unlisted keys will not be
                                              present. If a key is specified which is not present in the Secret,
                                              the volume setup will error unless it is marked optional. Paths must be
                                              relative and may not contain the '..' path or start with '..'.
                                            items:
                                              description: Maps a string key to a
                                                path within a volume.
                                              properties:
                                                key:
                                                  description: key is the key to project.
                                                  type: string
                                                mode:
                                                  description: |-
                                                    mode is Optional: mode bits used to set permissions on this file.
                                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                    If not specified, the volume defaultMode will be used.
                                                    This might be in conflict with other options that affect the file
                                                    mode, like fsGroup, and the result can be other mode bits set.
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: |-
                                                    path is the relative path of the file to map the key to.
                                                    May not be an absolute path.
                                                    May not contain the path element '..'.
                                                    May not start with the string '..'.
                                                  type: string
                                              required:
                                              - key
                                              - path
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: optional field specify whether
                                              the Secret or its key must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      serviceAccountToken:
                                        description: serviceAccountToken is information
                                          about the serviceAccountToken data to project
                                        properties:
                                          audience:
                                            description: |-
                                              audience is the intended audience of the token. A recipient of a token
                                              must identify itself with an identifier specified in the audience of the
                                              token, and otherwise should reject the token. The audience defaults to the
                                              identifier of the apiserver.
                                            type: string
                                          expirationSeconds:
                                            description: |-
                                              expirationSeconds is the requested duration of validity of the service
                                              account token. As the token approaches expiration, the kubelet volume
                                              plugin will proactively rotate the service account token. The kubelet will
                                              start trying to rotate the token if the token is older than 80 percent of
                                              its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                              and must be at least 10 minutes.
                                            format: int64
                                            type: integer
                                          path:
                                            description: |-
                                              path is the path relative to the mount point of the file to project the
                                              token into.
                                            type: string
                                        required:
                                        - path
                                        type: object
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            quobyte:
                              description: quobyte represents a Quobyte mount on the
                                host that shares a pod's lifetime
                              properties:
                                group:
                                  description: |-
                                    group to map volume access to
                                    Default is no group
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                                    Defaults to false.
                                  type: boolean
                                registry:
                                  description: |-
                                    registry represents a single or multiple Quobyte Registry services
                                    specified as a string as host:port pair (multiple entries are separated with commas)
                                    which acts as the central registry for volumes
                                  type: string
                                tenant:
                                  description: |-
                                    tenant owning the given Quobyte volume in the Backend
                                    Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                                  type: string
                                user:
                                  description: |-
                                    user to map volume access to
                                    Defaults to serivceaccount user
                                  type: string
                                volume:
                                  description: volume is a string that references
                                    an already created Quobyte volume by name.
                                  type: string
                              required:
                              - registry
                              - volume
                              type: object
                            rbd:
                              description: |-
                                rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                                More info: https://examples.k8s.io/volumes/rbd/README.md
                              properties:
                                fsType:
                                  description: |-
                                    fsType is the filesystem type of the volume that you want to mount.
                                    Tip: Ensure that the filesystem type is supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                  type: string
                                image:
                                  description: |-
                                    image is the rados image name.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  type: string
                                keyring:
                                  default: /etc/ceph/keyring
                                  description: |-
                                    keyring is the path to key ring for RBDUser.
                                    Default is /etc/ceph/keyring.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  type: string
                                monitors:
                                  description: |-
                                    monitors is a collection of Ceph monitors.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                pool:
                                  default: rbd
                                  description: |-
                                    pool is the rados pool name.
                                    Default is rbd.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly here will force the ReadOnly setting in VolumeMounts.
                                    Defaults to false.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  type: boolean
                                secretRef:
                                  description: |-
                                    secretRef is name of the authentication secret for RBDUser. If provided
                                    overrides keyring.
                                    Default is nil.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                user:
                                  default: admin
                                  description: |-
                                    user is the rados user name.
                                    Default is admin.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  type: string
                              required:
                              - image
                              - monitors
                              type: object
                            scaleIO:
                              description: scaleIO represents a ScaleIO persistent
                                volume attached and mounted on Kubernetes nodes.
                              properties:
                                fsType:
                                  default: xfs
                                  description: |-
                                    fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs".
                                    Default is "xfs".
                                  type: string
                                gateway:
                                  description: gateway is the host address of the
                                    ScaleIO API Gateway.
                                  type: string
                                protectionDomain:
                                  description: protectionDomain is the name of the
                                    ScaleIO Protection Domain for the configured storage.
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly Defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                secretRef:
                                  description: |-
                                    secretRef references to the secret for ScaleIO user and other
                                    sensitive information. If this is not provided, Login operation will fail.
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                sslEnabled:
                                  description: sslEnabled Flag enable/disable SSL
                                    communication with Gateway, default false
                                  type: boolean
                                storageMode:
                                  default: ThinProvisioned
                                  description: |-
                                    storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                                    Default is ThinProvisioned.
                                  type: string
                                storagePool:
                                  description: storagePool is the ScaleIO Storage
                                    Pool associated with the protection domain.
                                  type: string
                                system:
                                  description: system is the name of the storage system
                                    as configured in ScaleIO.
                                  type: string
                                volumeName:
                                  description: |-
                                    volumeName is the name of a volume already created in the ScaleIO system
                                    that is associated with this volume source.
                                  type: string
                              required:
                              - gateway
                              - secretRef
                              - system
                              type: object
                            secret:
                              description: |-
                                secret represents a secret that should populate this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                              properties:
                                defaultMode:
                                  description: |-
                                    defaultMode is Optional: mode bits used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values
                                    for mode bits. Defaults to 0644.
                                    Directories within the path are not affected by this setting.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                items:
                                  description: |-
                                    items If unspecified, each key-value pair in the Data field of the referenced
                                    Secret will be projected into the volume as a file whose name is the
                                    key and content is the value. If specified, the listed keys will be
                                    projected into the specified paths, and unlisted keys will not be
                                    present. If a key is specified which is not present in the Secret,
                                    the volume setup will error unless it is marked optional. Paths must be
                                    relative and may not contain the '..' path or start with '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: key is the key to project.
                                        type: string
                                      mode:
                                        description: |-
                                          mode is Optional: mode bits used to set permissions on this file.
                                          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                          If not specified, the volume defaultMode will be used.
                                          This might be in conflict with other options that affect the file
                                          mode, like fsGroup, and the result can be other mode bits set.
                                        format: int32
                                        type: integer
                                      path:
                                        description: |-
                                          path is the relative path of the file to map the key to.
                                          May not be an absolute path.
                                          May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                optional:
                                  description: optional field specify whether the
                                    Secret or its keys must be defined
                                  type: boolean
                                secretName:
                                  description: |-
                                    secretName is the name of the secret in the pod's namespace to use.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                  type: string
                              type: object
                            storageos:
                              description: storageOS represents a StorageOS volume
                                attached and mounted on Kubernetes nodes.
                              properties:
                                fsType:
                                  description: |-
                                    fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                secretRef:
                                  description: |-
                                    secretRef specifies the secret to use for obtaining the StorageOS API
                                    credentials.  If not specified, default values will be attempted.
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                volumeName:
                                  description: |-
                                    volumeName is the human-readable name of the StorageOS volume.  Volume
                                    names are only unique within a namespace.
                                  type: string
                                volumeNamespace:
                                  description: |-
                                    volumeNamespace specifies the scope of the volume within StorageOS.  If no
                                    namespace is specified then the Pod's namespace will be used.  This allows the
                                    Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                                    Set VolumeName to any name to override the default behaviour.
                                    Set to "default" if you are not using namespaces within StorageOS.
                                    Namespaces that do not pre-exist within StorageOS will be created.
                                  type: string
                              type: object
                            vsphereVolume:
                              description: vsphereVolume represents a vSphere volume
                                attached and mounted on kubelets host machine
                              properties:
                                fsType:
                                  description: |-
                                    fsType is filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  type: string
                                storagePolicyID:
                                  description: storagePolicyID is the storage Policy
                                    Based Management (SPBM) profile ID associated
                                    with the StoragePolicyName.
                                  type: string
                                storagePolicyName:
                                  description: storagePolicyName is the storage Policy
                                    Based Management (SPBM) profile name.
                                  type: string
                                volumePath:
                                  description: volumePath is the path that identifies
                                    vSphere volume vmdk
                                  type: string
                              required:
                              - volumePath
                              type: object
                          type: object
                        volumeClaim:
                          description: VolumeClaim is the persistent volume claim
                            spec use by statefullset
                          properties:
                            accessModes:
                              description: |-
                                accessModes contains the desired access modes the volume should have.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            dataSource:
                              description: |-
                                dataSource field can be used to specify either:
                                * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                * An existing PVC (PersistentVolumeClaim)
                                If the provisioner or an external controller can support the specified data source,
                                it will create a new volume based on the contents of the specified data source.
                                When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                              properties:
                                apiGroup:
                                  description: |-
                                    APIGroup is the group for the resource being referenced.
                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                              x-kubernetes-map-type: atomic
                            dataSourceRef:
                              description: |-
                                dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                volume is desired. This may be any object from a non-empty API group (non
                                core object) or a PersistentVolumeClaim object.
                                When this field is specified, volume binding will only succeed if the type of
                                the specified object matches some installed volume populator or dynamic
                                provisioner.
                                This field will replace the functionality of the dataSource field and as such
                                if both fields are non-empty, they must have the same value. For backwards
                                compatibility, when namespace isn't specified in dataSourceRef,
                                both fields (dataSource and dataSourceRef) will be set to the same
                                value automatically if one of them is empty and the other is non-empty.
                                When namespace is specified in dataSourceRef,
                                dataSource isn't set to the same value and must be empty.
                                There are three important differences between dataSource and dataSourceRef:
                                * While dataSource only allows two specific types of objects, dataSourceRef
                                  allows any non-core object, as well as PersistentVolumeClaim objects.
                                * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                  preserves all values, and generates an error if a disallowed value is
                                  specified.
                                * While dataSource only allows local objects, dataSourceRef allows objects
                                  in any namespaces.
                                (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                              properties:
                                apiGroup:
                                  description: |-
                                    APIGroup is the group for the resource being referenced.
                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace is the namespace of resource being referenced
                                    Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                    (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: |-
                                resources represents the minimum resources the volume should have.
                                If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                that are lower than previous value but must still be higher than capacity recorded in the
                                status field of the claim.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Limits describes the maximum amount of compute resources allowed.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Requests describes the minimum amount of compute resources required.
                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                              type: object
                            selector:
                              description: selector is a label query over volumes
                                to consider for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            storageClassName:
                              description: |-
                                storageClassName is the name of the StorageClass required by the claim.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                              type: string
                            volumeAttributesClassName:
                              description: |-
                                volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                If specified, the CSI driver will create or update the volume with the attributes defined
                                in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                will be set by the persistentvolume controller if it exists.
                                If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                exists.
                                More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                              type: string
                            volumeMode:
                              description: |-
                                volumeMode defines what type of volume is required by the claim.
                                Value of Filesystem is implied when not included in claim spec.
                              type: string
                            volumeName:
                              description: volumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                      type: object
                    podDisruptionBudget:
                      description: PodDisruptionBudget is the pod disruption budget
                        policy
                      properties:
                        maxUnavailable:
                          anyOf:
                          - type: integer
                          - type: string
                          description: |-
                            An eviction is allowed if at most "maxUnavailable" pods selected by
                            "selector" are unavailable after the eviction, i.e. even in absence of
                            the evicted pod. For example, one can prevent all voluntary evictions
                            by specifying 0. This is a mutually exclusive setting with "minAvailable".
                          x-kubernetes-int-or-string: true
                        minAvailable:
                          anyOf:
                          - type: integer
                          - type: string
                          description: |-
                            An eviction is allowed if at least "minAvailable" pods selected by
                            "selector" will still be available after the eviction, i.e. even in the
                            absence of the evicted pod.  So for example you can prevent all voluntary
                            evictions by specifying "100%".
                          x-kubernetes-int-or-string: true
                        selector:
                          description: |-
                            Label query over pods whose evictions are managed by the disruption
                            budget.
                            A null selector will match no pods, while an empty ({}) selector will select
                            all pods within the namespace.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        unhealthyPodEvictionPolicy:
                          description: |-
                            UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods
                            should be considered for eviction. Current implementation considers healthy pods,
                            as pods that have status.conditions item with type="Ready",status="True".

                            Valid policies are IfHealthyBudget and AlwaysAllow.
                            If no policy is specified, the default behavior will be used,
                            which corresponds to the IfHealthyBudget policy.

                            IfHealthyBudget policy means that running pods (status.phase="Running"),
                            but not yet healthy can be evicted only if the guarded application is not
                            disrupted (status.currentHealthy is at least equal to status.desiredHealthy).
                            Healthy pods will be subject to the PDB for eviction.

                            AlwaysAllow policy means that all running pods (status.phase="Running"),
                            but not yet healthy are considered disrupted and can be evicted regardless
                            of whether the criteria in a PDB is met. This means perspective running
                            pods of a disrupted application might not get a chance to become healthy.
                            Healthy pods will be subject to the PDB for eviction.

                            Additional policies may be added in the future.
                            Clients making eviction decisions should disallow eviction of unhealthy pods
                            if they encounter an unrecognized policy in this field.

                            This field is beta-level. The eviction API uses this field when
                            the feature gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default).
                          type: string
                      type: object
                    podTemplate:
                      description: |
                        PodSpec is merged with expected pod
                        It usefull to add some extra properties on pod spec
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    replicas:
                      description: Replicas is the number of replicas
                      format: int32
                      type: integer
                    resources:
                      description: Resources permit to set ressources on container
                      properties:
                        claims:
                          description: |-
                            Claims lists the names of resources, defined in spec.resourceClaims,
                            that are used by this container.

                            This is an alpha field and requires enabling the
                            DynamicResourceAllocation feature gate.

                            This field is immutable. It can only be set for containers.
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: |-
                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                  the Pod where this field is used. It makes that resource available
                                  inside a container.
                                type: string
                              request:
                                description: |-
                                  Request is the name chosen for a request in the referenced claim.
                                  If empty, everything from the claim is made available, otherwise
                                  only the result of this request.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Limits describes the maximum amount of compute resources allowed.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                      type: object
                    roles:
                      description: Roles is the list of Elasticsearch roles
                      items:
                        type: string
                      type: array
                    tolerations:
                      description: Tolerations permit to set toleration on pod
                      items:
                        description: |-
                          The pod this Toleration is attached to tolerates any taint that matches
                          the triple <key,value,effect> using the matching operator <operator>.
                        properties:
                          effect:
                            description: |-
                              Effect indicates the taint effect to match. Empty means match all taint effects.
                              When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                            type: string
                          key:
                            description: |-
                              Key is the taint key that the toleration applies to. Empty means match all taint keys.
                              If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                            type: string
                          operator:
                            description: |-
                              Operator represents a key's relationship to the value.
                              Valid operators are Exists and Equal. Defaults to Equal.
                              Exists is equivalent to wildcard for value, so that a pod can
                              tolerate all taints of a particular category.
                            type: string
                          tolerationSeconds:
                            description: |-
                              TolerationSeconds represents the period of time the toleration (which must be
                              of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                              it is not set, which means tolerate the taint forever (do not evict). Zero and
                              negative values will be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: |-
                              Value is the taint value the toleration matches to.
                              If the operator is Exists, the value should be empty, otherwise just a regular string.
                            type: string
                        type: object
                      type: array
                    waitClusterStatus:
                      default: green
                      description: |-
                        WaitClusterStatus permit to wait the cluster state on readyness probe
                        Default to green
                      enum:
                      - green
                      - yellow
                      - red
                      type: string
                  required:
                  - name
                  - replicas
                  - roles
                  type: object
                type: array
              pluginsList:
                description: |-
                  PluginsList is the list of additionnal plugin to install on each Elasticsearch node
                  Default is empty
                items:
                  type: string
                type: array
              setVMMaxMapCount:
                default: true
                description: |-
                  SetVMMaxMapCount permit to set the right value for VMMaxMapCount on node
                  It need to run pod as root with privileged option
                  Default is true
                type: boolean
              tls:
                description: Tls permit to set the TLS setting for API access
                properties:
                  certificateSecretRef:
                    description: |-
                      CertificateSecretRef is the secret that store your custom certificates.
                      It need to have the following keys: tls.key, tls.crt and optionally ca.crt
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  enabled:
                    default: true
                    description: |-
                      Enabled permit to enabled TLS
                      Default to false
                    type: boolean
                  keySize:
                    default: 2048
                    description: |-
                      KeySize is the key size when generate privates keys
                      Default to 2048
                    type: integer
                  renewalDays:
                    default: 30
                    description: |-
                      RenewalDays is the number of days before certificate expire to become effective renewal
                      Default to 30
                    type: integer
                  selfSignedCertificate:
                    description: SelfSignedCertificate permit to set self signed certificate
                      settings
                    properties:
                      altIPs:
                        description: AltIps permit to set subject alt names of type
                          ip when generate certificate
                        items:
                          type: string
                        type: array
                      altNames:
                        description: AltNames permit to set subject alt names of type
                          dns when generate certificate
                        items:
                          type: string
                        type: array
                    type: object
                  validityDays:
                    default: 365
                    description: |-
                      ValidityDays is the number of days that certificates are valid
                      Default to 365
                    type: integer
                type: object
              version:
                default: latest
                description: |-
                  Version is the Elasticsearch version to use
                  Default is use the latest
                type: string
            type: object
          status:
            description: ElasticsearchStatus defines the observed state of Elasticsearch
            properties:
              conditions:
                description: List of conditions
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              credentialsRef:
                description: CredentialsRef is the secret that store the credentials
                  to access on Elasticsearch
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              health:
                description: Health is the cluster health
                type: string
              isBootstrapping:
                description: IsBootstrapping is true when the cluster is bootstraping
                type: boolean
              isOnError:
                description: IsOnError is true if controller is stuck on Error
                type: boolean
              lastErrorMessage:
                description: LastErrorMessage is the current error message
                type: string
              observedGeneration:
                description: observedGeneration is the current generation applied
                format: int64
                type: integer
              phase:
                description: Phase is the current phase
                type: string
              url:
                description: Url is the Elasticsearch endpoint
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
