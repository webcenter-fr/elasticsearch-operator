---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: kibanas.kibana.k8s.webcenter.fr
spec:
  group: kibana.k8s.webcenter.fr
  names:
    kind: Kibana
    listKind: KibanaList
    plural: kibanas
    singular: kibana
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.url
      name: URL
      type: string
    - description: Deployment status
      jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Kibana is the Schema for the kibanas API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KibanaSpec defines the desired state of Kibana
            properties:
              config:
                additionalProperties:
                  type: string
                description: Config is the Kibana config The key is the file stored
                  on kibana/config
                type: object
              elasticsearchRef:
                description: ElasticsearchRef is the Elasticsearch ref to connect
                  on. The Elasticsearch must be on the same namespace as Kibana
                properties:
                  name:
                    description: Name is the Elasticsearch cluster deployed by operator
                    type: string
                  namespace:
                    description: Namespace is the namespace where Elasticsearch is
                      deployed by operator No need to set if Kibana is deployed on
                      the same namespace
                    type: string
                  targetNodeGroup:
                    description: TargetNodeGroup is the target Elasticsearch node
                      group to use as service to connect on Elasticsearch Default,
                      it use the global service
                    type: string
                type: object
              endpoint:
                description: Endpoint permit to set endpoints to access on Kibana
                  from external kubernetes You can set ingress and / or load balancer
                properties:
                  ingress:
                    description: Ingress permit to set ingress settings
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to set in ingress
                        type: object
                      enabled:
                        description: Enabled permit to enabled / disabled ingress
                        type: boolean
                      host:
                        description: Host is the hostname to access on Kibana
                        type: string
                      ingressSpec:
                        description: IngressSpec it merge with expected ingress spec
                        properties:
                          defaultBackend:
                            description: DefaultBackend is the backend that should
                              handle requests that don't match any rule. If Rules
                              are not specified, DefaultBackend must be specified.
                              If DefaultBackend is not set, the handling of requests
                              that do not match any of the rules will be up to the
                              Ingress controller.
                            properties:
                              resource:
                                description: Resource is an ObjectRef to another Kubernetes
                                  resource in the namespace of the Ingress object.
                                  If resource is specified, a service.Name and service.Port
                                  must not be specified. This is a mutually exclusive
                                  setting with "Service".
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource
                                      being referenced. If APIGroup is not specified,
                                      the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is
                                      required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                                x-kubernetes-map-type: atomic
                              service:
                                description: Service references a Service as a Backend.
                                  This is a mutually exclusive setting with "Resource".
                                properties:
                                  name:
                                    description: Name is the referenced service. The
                                      service must exist in the same namespace as
                                      the Ingress object.
                                    type: string
                                  port:
                                    description: Port of the referenced service. A
                                      port name or port number is required for a IngressServiceBackend.
                                    properties:
                                      name:
                                        description: Name is the name of the port
                                          on the Service. This is a mutually exclusive
                                          setting with "Number".
                                        type: string
                                      number:
                                        description: Number is the numerical port
                                          number (e.g. 80) on the Service. This is
                                          a mutually exclusive setting with "Name".
                                        format: int32
                                        type: integer
                                    type: object
                                required:
                                - name
                                type: object
                            type: object
                          ingressClassName:
                            description: IngressClassName is the name of an IngressClass
                              cluster resource. Ingress controller implementations
                              use this field to know whether they should be serving
                              this Ingress resource, by a transitive connection (controller
                              -> IngressClass -> Ingress resource). Although the `kubernetes.io/ingress.class`
                              annotation (simple constant name) was never formally
                              defined, it was widely supported by Ingress controllers
                              to create a direct binding between Ingress controller
                              and Ingress resources. Newly created Ingress resources
                              should prefer using the field. However, even though
                              the annotation is officially deprecated, for backwards
                              compatibility reasons, ingress controllers should still
                              honor that annotation if present.
                            type: string
                          rules:
                            description: A list of host rules used to configure the
                              Ingress. If unspecified, or no rule matches, all traffic
                              is sent to the default backend.
                            items:
                              description: IngressRule represents the rules mapping
                                the paths under a specified host to the related backend
                                services. Incoming requests are first evaluated for
                                a host match, then routed to the backend associated
                                with the matching IngressRuleValue.
                              properties:
                                host:
                                  description: "Host is the fully qualified domain
                                    name of a network host, as defined by RFC 3986.
                                    Note the following deviations from the \"host\"
                                    part of the URI as defined in RFC 3986: 1. IPs
                                    are not allowed. Currently an IngressRuleValue
                                    can only apply to the IP in the Spec of the parent
                                    Ingress. 2. The `:` delimiter is not respected
                                    because ports are not allowed. Currently the port
                                    of an Ingress is implicitly :80 for http and :443
                                    for https. Both these may change in the future.
                                    Incoming requests are matched against the host
                                    before the IngressRuleValue. If the host is unspecified,
                                    the Ingress routes all traffic based on the specified
                                    IngressRuleValue. \n Host can be \"precise\" which
                                    is a domain name without the terminating dot of
                                    a network host (e.g. \"foo.bar.com\") or \"wildcard\",
                                    which is a domain name prefixed with a single
                                    wildcard label (e.g. \"*.foo.com\"). The wildcard
                                    character '*' must appear by itself as the first
                                    DNS label and matches only a single label. You
                                    cannot have a wildcard label by itself (e.g. Host
                                    == \"*\"). Requests will be matched against the
                                    Host field in the following way: 1. If Host is
                                    precise, the request matches this rule if the
                                    http host header is equal to Host. 2. If Host
                                    is a wildcard, then the request matches this rule
                                    if the http host header is to equal to the suffix
                                    (removing the first label) of the wildcard rule."
                                  type: string
                                http:
                                  description: 'HTTPIngressRuleValue is a list of
                                    http selectors pointing to backends. In the example:
                                    http://<host>/<path>?<searchpart> -> backend where
                                    where parts of the url correspond to RFC 3986,
                                    this resource will be used to match against everything
                                    after the last ''/'' and before the first ''?''
                                    or ''#''.'
                                  properties:
                                    paths:
                                      description: A collection of paths that map
                                        requests to backends.
                                      items:
                                        description: HTTPIngressPath associates a
                                          path with a backend. Incoming urls matching
                                          the path are forwarded to the backend.
                                        properties:
                                          backend:
                                            description: Backend defines the referenced
                                              service endpoint to which the traffic
                                              will be forwarded to.
                                            properties:
                                              resource:
                                                description: Resource is an ObjectRef
                                                  to another Kubernetes resource in
                                                  the namespace of the Ingress object.
                                                  If resource is specified, a service.Name
                                                  and service.Port must not be specified.
                                                  This is a mutually exclusive setting
                                                  with "Service".
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              service:
                                                description: Service references a
                                                  Service as a Backend. This is a
                                                  mutually exclusive setting with
                                                  "Resource".
                                                properties:
                                                  name:
                                                    description: Name is the referenced
                                                      service. The service must exist
                                                      in the same namespace as the
                                                      Ingress object.
                                                    type: string
                                                  port:
                                                    description: Port of the referenced
                                                      service. A port name or port
                                                      number is required for a IngressServiceBackend.
                                                    properties:
                                                      name:
                                                        description: Name is the name
                                                          of the port on the Service.
                                                          This is a mutually exclusive
                                                          setting with "Number".
                                                        type: string
                                                      number:
                                                        description: Number is the
                                                          numerical port number (e.g.
                                                          80) on the Service. This
                                                          is a mutually exclusive
                                                          setting with "Name".
                                                        format: int32
                                                        type: integer
                                                    type: object
                                                required:
                                                - name
                                                type: object
                                            type: object
                                          path:
                                            description: Path is matched against the
                                              path of an incoming request. Currently
                                              it can contain characters disallowed
                                              from the conventional "path" part of
                                              a URL as defined by RFC 3986. Paths
                                              must begin with a '/' and must be present
                                              when using PathType with value "Exact"
                                              or "Prefix".
                                            type: string
                                          pathType:
                                            description: 'PathType determines the
                                              interpretation of the Path matching.
                                              PathType can be one of the following
                                              values: * Exact: Matches the URL path
                                              exactly. * Prefix: Matches based on
                                              a URL path prefix split by ''/''. Matching
                                              is done on a path element by element
                                              basis. A path element refers is the
                                              list of labels in the path split by
                                              the ''/'' separator. A request is a
                                              match for path p if every p is an element-wise
                                              prefix of p of the request path. Note
                                              that if the last element of the path
                                              is a substring of the last element in
                                              request path, it is not a match (e.g.
                                              /foo/bar matches /foo/bar/baz, but does
                                              not match /foo/barbaz). * ImplementationSpecific:
                                              Interpretation of the Path matching
                                              is up to the IngressClass. Implementations
                                              can treat this as a separate PathType
                                              or treat it identically to Prefix or
                                              Exact path types. Implementations are
                                              required to support all path types.'
                                            type: string
                                        required:
                                        - backend
                                        - pathType
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - paths
                                  type: object
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          tls:
                            description: TLS configuration. Currently the Ingress
                              only supports a single TLS port, 443. If multiple members
                              of this list specify different hosts, they will be multiplexed
                              on the same port according to the hostname specified
                              through the SNI TLS extension, if the ingress controller
                              fulfilling the ingress supports SNI.
                            items:
                              description: IngressTLS describes the transport layer
                                security associated with an Ingress.
                              properties:
                                hosts:
                                  description: Hosts are a list of hosts included
                                    in the TLS certificate. The values in this list
                                    must match the name/s used in the tlsSecret. Defaults
                                    to the wildcard host setting for the loadbalancer
                                    controller fulfilling this Ingress, if left unspecified.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                secretName:
                                  description: SecretName is the name of the secret
                                    used to terminate TLS traffic on port 443. Field
                                    is left optional to allow TLS routing based on
                                    SNI hostname alone. If the SNI host in a listener
                                    conflicts with the "Host" header field used by
                                    an IngressRule, the SNI host is used for termination
                                    and value of the Host header is used for routing.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to set in ingress
                        type: object
                      secretRef:
                        description: SecretRef is the secret ref that store certificates
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  loadBalancer:
                    description: Load balancer permit to set load balancer settings
                    properties:
                      enabled:
                        description: Enabled permit to enabled / disabled load balancer
                          Cloud provider need to support it
                        type: boolean
                    type: object
                type: object
              image:
                description: Image is the image to use when deploy Elasticsearch It
                  can be usefull to use internal registry or mirror
                type: string
              imagePullPolicy:
                description: ImagePullPolicy is the image pull policy to use
                type: string
              imagePullSecrets:
                description: ImagePullSecrets is the image pull secrets to use
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              keystoreSecretRef:
                description: KeystoreSecretRef is the secret that store the security
                  settings
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              pluginsList:
                description: PluginsList is the list of additionnal plugin to install
                  on each Kibana instance Default is empty
                items:
                  type: string
                type: array
              tls:
                description: Tls permit to set the TLS setting for Kibana access
                properties:
                  certificateSecretRef:
                    description: 'CertificateSecretRef is the secret that store your
                      custom certificates. It need to have the following keys: tls.key,
                      tls.crt and optionally ca.crt'
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  enabled:
                    description: Enabled permit to enabled TLS on Kibana
                    type: boolean
                  selfSignedCertificate:
                    description: SelfSignedCertificate permit to set self signed certificate
                      settings
                    properties:
                      'altIPs:':
                        description: AltIps permit to set subject alt names of type
                          ip when generate certificate
                        items:
                          type: string
                        type: array
                      'altNames:':
                        description: AltNames permit to set subject alt names of type
                          dns when generate certificate
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              version:
                description: Version is the Kibana version to use Default is use the
                  latest
                type: string
            type: object
          status:
            description: KibanaStatus defines the observed state of Kibana
            properties:
              conditions:
                description: List of conditions
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: Phase is the current deployment phase
                type: string
              url:
                description: Url is the Kibana endpoint
                type: string
            required:
            - conditions
            - phase
            - url
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
