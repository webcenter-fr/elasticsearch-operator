apiVersion: logstash.k8s.webcenter.fr/v1alpha1
kind: Logstash
metadata:
  labels:
    app.kubernetes.io/name: logstash
    app.kubernetes.io/instance: logstash-sample
    app.kubernetes.io/part-of: bootstrap
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: bootstrap
  name: logstash-sample
spec:
  version: 8.6.0
  elasticsearchRef:
    managed:
      name: elasticsearch-sample
  config:
    logstash.yml: |
      pipeline.workers: 2
      queue.type: persisted
      queue.max_bytes: 5gb
      xpack.monitoring.enabled: false
      log.format: json
      dead_letter_queue.enable: true
    pipelines.yml: |
      - pipeline.id: "logs"
        path.config: "/usr/share/logstash/pipeline/logs/src/*.conf"
        pipeline.ecs_compatibility: v1
  services:
    - name: beat
      spec:
        type: NodePort
        ports:
          - name: beats
            protocol: TCP
            port: 5003
            targetPort: 5003
            nodePort: 30002
  deployment:
    replicas: 1
    jvm: "-Xmx1g -Xms1g"
    envFrom:
      - secretRef:
          name: logstash-credentials
    initContainerResources:
      limits:
        cpu: "500m"
        memory: "256Mi"
      requests:
        cpu: "25m"
        memory: "64Mi"
    resources:
      requests:
        cpu: "250m"
        memory: "1Gi"
      limits:
        cpu: "1000m"
        memory: "1300Mi"
    persistence:
      volumeClaim:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "local-path"
        resources:
          requests:
            storage: 5Gi
    annotations:
      co.elastic.logs.logstash/multiline.pattern: '^\{'
      co.elastic.logs.logstash/multiline.negate: 'true'
      co.elastic.logs.logstash/multiline.match: 'after'
      co.elastic.logs.logstash/multiline.timeout: '5s'
      co.elastic.logs.logstash/processors.0.decode_json_fields: '{"fields": ["message"], "target": "hm.logstash", "add_error_key": true, "max_depth": 10}'
      co.elastic.logs.logstash/processors.2.add_fields: '{"target": "", "fields": {"event": {"dataset": "logstash"}, "service": {"type": "logstash"}}}'
      build_id: ''
    additionalVolumes:
      - name: logstash-certificates
        mountPath: /usr/share/logstash/certs
        secret:
          secretName: logstash-certificates
