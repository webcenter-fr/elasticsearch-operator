apiVersion: elasticsearch.k8s.webcenter.fr/v1alpha1
kind: Elasticsearch
metadata:
  name: sample
  labels:
    env: test
spec:
  version: 8.5.1
  endpoint:
    ingress:
      enabled: true
      host: es-sample.cluster.local
      secretRef:
        name: es-sample-tls
      annotations:
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: 512M
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  globalNodeGroup:
    additionalVolumes:
      - name: snapshot
        emptyDir: {}
        mountPath: /mnt/snapshot
    config:
      elasticsearch.yml: |
        action.destructive_requires_name: true
        cluster.routing.allocation.disk.watermark.flood_stage: 1gb
        cluster.routing.allocation.disk.watermark.high: 1gb
        cluster.routing.allocation.disk.watermark.low: 2gb
        gateway.expected_data_nodes: 3
        gateway.recover_after_data_nodes: 2
        gateway.recover_after_time: 5m
        http.cors.allow-credentials: true
        http.cors.allow-headers: X-Requested-With,X-Auth-Token,Content-Type, Content-Length, Authorization
        http.cors.allow-origin: /.*/
        http.cors.enabled: true
        http.max_content_length: 500mb
        path.repo:
          - /mnt/snapshot
        xpack.monitoring.collection.enabled: true
        xpack.security.audit.enabled: true
        xpack.security.audit.logfile.events.exclude:
          - access_granted
        xpack.security.authc:
          anonymous:
            authz_exception: false
            roles: monitoring
            username: anonymous_user
  nodeGroups:
    - name: all
      replicas: 3
      roles:
        - master
        - data
        - ingest
      jvm: "-Xms4512M -Xmx512M"
      resources:
        requests:
          cpu: 300m
          memory: 1Gi
        limits:
          cpu: 1000m
          memory: 1Gi