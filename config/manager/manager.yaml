apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: elastic-operator
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elastic-operator
  namespace: system
  labels:
    control-plane: elastic-operator
spec:
  selector:
    matchLabels:
      control-plane: elastic-operator
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        co.elastic.logs.manager/multiline.match: after
        co.elastic.logs.manager/multiline.negate: "true"
        co.elastic.logs.manager/multiline.pattern: ^\{
        co.elastic.logs.manager/multiline.timeout: 5s
        co.elastic.logs.manager/processors.0.decode_json_fields: '{"fields": ["message"],"target": "operator.elasticsearch", "add_error_key": true, "max_depth": 10}'
        co.elastic.logs.manager/processors.1.add_fields: '{"target": "", "fields":{"event": {"dataset": "elasticsearch-operator"}}}'
      labels:
        control-plane: elastic-operator
        elasticsearch-operator.k8s.webcenter.fr: "true"
        kibana-operator.k8s.webcenter.fr: "true"
    spec:
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        - --health-probe-bind-address=:8081
        image: controller:latest
        name: manager
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: LOG_LEVEL
          value: "INFO"
        - name: LOG_FORMATTER
          value: "json"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 700m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 256Mi
      serviceAccountName: elastic-operator
      terminationGracePeriodSeconds: 10
