apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-ls
  namespace: default
  labels:
    cluster: test
    logstash.k8s.webcenter.fr: "true"
  annotations:
    logstash.k8s.webcenter.fr: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster: test
      logstash.k8s.webcenter.fr: "true"
  template:
    metadata:
      labels:
        cluster: test
        logstash.k8s.webcenter.fr: "true"
      annotations:
        logstash.k8s.webcenter.fr: "true"
      name: test-ls
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    cluster: test
                    logstash.k8s.webcenter.fr: "true"
                topologyKey: kubernetes.io/hostname
              weight: 10
      containers:
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: LS_JAVA_OPTS
          value: ''
        - name: HTTP_HOST
          value: 0.0.0.0
        - name: ELASTICSEARCH_CA_PATH
          value: /usr/share/logstash/config/es-ca/ca.crt
        - name: ELASTICSEARCH_HOST
          value: https://test-es.default.svc:9200
        image: docker.elastic.co/logstash/logstash:latest
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 30
          successThreshold: 1
          tcpSocket:
            port: 9600
          timeoutSeconds: 5
        name: logstash
        ports:
        - containerPort: 9600
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          httpGet:
            path: /
            port: 9600
          timeoutSeconds: 5
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        startupProbe:
          failureThreshold: 30
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 9600
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /usr/share/logstash/config
          name: config
      initContainers:
      - command:
        - /bin/bash
        - -c
        - |
            #!/usr/bin/env bash
            set -euo pipefail
            
            # Move original config
            echo "Move original logstash configs"
            cp -a /usr/share/logstash/config/* /mnt/config/

            # Move configmaps
            if [ -d /mnt/configmap ]; then
              echo "Move custom configs"
              cp -f /mnt/configmap/* /mnt/config/
            fi

            # Move CA Elasticsearch
            if [ -d /mnt/ca-elasticsearch ]; then
              echo "Move CA certificate"
              mkdir -p /mnt/config/es-ca
              cp /mnt/ca-elasticsearch/* /mnt/config/es-ca/
            fi

            # Move keystore
            if [ -f /mnt/keystore/logstash.keystore ]; then
              echo "Move keystore"
              cp /mnt/keystore/logstash.keystore /mnt/config
            fi

            # Set right
            echo "Set right"
            chown -R logstash:logstash /mnt/config
            if [ -d /mnt/data ]; then
              chown -v logstash:logstash /mnt/data
            fi


            if [ -d /mnt/plugins ]; then
              cp -a /usr/share/logstash/plugins/* /mnt/plugins/
              chown -R logstash:logstash /mnt/plugins
            fi

        image: docker.elastic.co/logstash/logstash:latest
        name: init-filesystem
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
          - name: config
            mountPath: /mnt/config
          - name: keystore
            mountPath: /mnt/keystore
          - name: ca-elasticsearch
            mountPath: /mnt/ca-elasticsearch
        securityContext:
          runAsUser: 0
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 120
      volumes:
      - name: keystore
        emptyDir: {}
      - name: config
        emptyDir: {}
      - name: plugin
        emptyDir: {}
      - name: ca-elasticsearch
        secret:
          secretName: test-ca-es-ls