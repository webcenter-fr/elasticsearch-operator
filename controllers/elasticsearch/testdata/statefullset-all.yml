apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-all-es
  namespace: default
  labels:
    cluster: test
    nodeGroup: all
    elasticsearch.k8s.webcenter.fr: "true"
  annotations:
    elasticsearch.k8s.webcenter.fr: "true"
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      cluster: test
      nodeGroup: all
  serviceName: test-all-headless-es
  template:
    metadata:
      labels:
        cluster: test
        nodeGroup: all
      annotations:
        elasticsearch.k8s.webcenter.fr/checksum-elasticsearch.yml: "2a0a8650b1d7a5f22e433877319457161489869868b894d448b2616477b521aa"
      name: test-all-es
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    cluster: test
                    nodeGroup: all
                topologyKey: kubernetes.io/hostname
              weight: 10
      containers:
      - command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash
          set -euo pipefail

          bash elasticsearch-docker-entrypoint.sh
        env:
        - name: node.master
          value: "true"
        - name: node.data
          value: "true"
        - name: node.ingest
          value: "true"
        - name: node.ml
          value: "false"
        - name: node.remote_cluster_client
          value: "false"
        - name: node.transform
          value: "false"
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: test-credential-es
              key: elastic
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: cluster.initial_master_nodes
          value: test-all-es-0
        - name: ELASTICSEARCH_JAVA_OPTS
          value: ''
        - name: discovery.seed_hosts
          value: test-all-headless-es
        - name: cluster.name
          value: test
        - name: network.host
          value: 0.0.0.0
        - name: bootstrap.memory_lock
          value: "true"
        - name: discovery.type
          value: single-node
        image: docker.elastic.co/elasticsearch/elasticsearch:latest
        livenessProbe:
          failureThreshold: 10
          periodSeconds: 30
          successThreshold: 1
          tcpSocket:
            port: 9300
          timeoutSeconds: 5
        name: elasticsearch
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 30
          successThreshold: 1
          tcpSocket:
            port: 9200
          timeoutSeconds: 5
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        startupProbe:
          failureThreshold: 30
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 9200
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/config/certs/node
          name: node-tls
        - mountPath: /usr/share/elasticsearch/config/certs/api
          name: api-tls
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: elasticsearch-config
          subPath: elasticsearch.yml
        - mountPath: /mnt/keystore
          name: keystore
      initContainers:
      - command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        image: docker.elastic.co/elasticsearch/elasticsearch:latest
        name: configure-sysctl
        securityContext:
          privileged: true
          runAsUser: 0
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 120
      volumes:
      - name: node-tls
        secret:
          secretName: test-tls-transport-es
      - name: api-tls
        secret:
          secretName: test-tls-api-es
      - configMap:
          name: test-all-config-es
        name: elasticsearch-config
      - name: keystore
        emptyDir: {}