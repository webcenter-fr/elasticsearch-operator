apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: roles.kibanaapi.k8s.webcenter.fr
spec:
  group: kibanaapi.k8s.webcenter.fr
  names:
    kind: Role
    listKind: RoleList
    plural: roles
    singular: role
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.sync
      name: Sync
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Role is the Schema for the roles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RoleSpec defines the desired state of Role
            properties:
              elasticsearch:
                description: Elasticsearch is the Elasticsearch right
                properties:
                  cluster:
                    description: Cluster is the cluster privilege
                    items:
                      type: string
                    type: array
                  indices:
                    description: Indices is the indice privileges
                    items:
                      properties:
                        fieldSecurity:
                          description: FieldSecurity JSON string
                          type: string
                        names:
                          description: Names
                          items:
                            type: string
                          type: array
                        privileges:
                          description: Privileges
                          items:
                            type: string
                          type: array
                        query:
                          description: Query
                          type: string
                      required:
                      - names
                      - privileges
                      type: object
                    type: array
                  run_as:
                    description: RunAs is the privilege like users
                    items:
                      type: string
                    type: array
                type: object
              kibana:
                description: Kibana is the Kibana right
                items:
                  properties:
                    base:
                      description: Base is the base privilege
                      items:
                        type: string
                      type: array
                    feature:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Feature ontains privileges for specific features
                      type: object
                    spaces:
                      description: Spaces is the list of space o apply the privileges
                        to
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              kibanaRef:
                description: KibanaRef is the Kibana ref to connect on.
                properties:
                  credentialSecretRef:
                    description: KibanaCredentialSecretRef is the secret that contain
                      credential to acess on Kibana API. It need to contain the keys
                      `username` and `password`.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  external:
                    description: ExternalKibanaRef is the external Kibana not managed
                      by operator
                    properties:
                      address:
                        description: Address is the Kibana address
                        type: string
                    required:
                    - address
                    type: object
                  kibanaCASecretRef:
                    description: 'KibanaCaSecretRef is the secret that store your
                      custom CA certificate to connect on Kibana API. It need to have
                      the following keys: ca.crt'
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  managed:
                    description: ManagedKibanaRef is the managed Kibana by operator
                    properties:
                      name:
                        description: Name is the Kibana deployed by operator
                        type: string
                      namespace:
                        description: Namespace is the namespace where Kibana is deployed
                          by operator No need to set if Kibana is deployed on the
                          same namespace
                        type: string
                    required:
                    - name
                    type: object
                type: object
              metadata:
                description: Metadata is optional meta-data JSON string
                type: string
              name:
                description: Name is the role name If empty, it use the ressource
                  name
                type: string
              transient_metadata:
                description: TransientMedata
                properties:
                  enabled:
                    type: boolean
                type: object
            required:
            - kibanaRef
            type: object
          status:
            description: RoleStatus defines the observed state of Role
            properties:
              conditions:
                description: List of conditions
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              originalObject:
                description: OriginalObject is the original object used on 3 way diff
                  merge
                type: string
              sync:
                description: Sync
                type: boolean
            required:
            - conditions
            - originalObject
            - sync
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.sync
      name: Sync
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Role is the Schema for the roles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RoleSpec defines the desired state of Role
            properties:
              elasticsearch:
                description: Elasticsearch is the Elasticsearch right
                properties:
                  cluster:
                    description: Cluster is the cluster privilege
                    items:
                      type: string
                    type: array
                  indices:
                    description: Indices is the indice privileges
                    items:
                      properties:
                        fieldSecurity:
                          description: FieldSecurity JSON string
                          type: string
                        names:
                          description: Names
                          items:
                            type: string
                          type: array
                        privileges:
                          description: Privileges
                          items:
                            type: string
                          type: array
                        query:
                          description: Query
                          type: string
                      required:
                      - names
                      - privileges
                      type: object
                    type: array
                  run_as:
                    description: RunAs is the privilege like users
                    items:
                      type: string
                    type: array
                type: object
              kibana:
                description: Kibana is the Kibana right
                items:
                  properties:
                    base:
                      description: Base is the base privilege
                      items:
                        type: string
                      type: array
                    feature:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Feature ontains privileges for specific features
                      type: object
                    spaces:
                      description: Spaces is the list of space o apply the privileges
                        to
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              kibanaRef:
                description: KibanaRef is the Kibana ref to connect on.
                properties:
                  credentialSecretRef:
                    description: KibanaCredentialSecretRef is the secret that contain
                      credential to acess on Kibana API. It need to contain the keys
                      `username` and `password`.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  external:
                    description: ExternalKibanaRef is the external Kibana not managed
                      by operator
                    properties:
                      address:
                        description: Address is the Kibana address
                        type: string
                    required:
                    - address
                    type: object
                  kibanaCASecretRef:
                    description: 'KibanaCaSecretRef is the secret that store your
                      custom CA certificate to connect on Kibana API. It need to have
                      the following keys: ca.crt'
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  managed:
                    description: ManagedKibanaRef is the managed Kibana by operator
                    properties:
                      name:
                        description: Name is the Kibana deployed by operator
                        type: string
                      namespace:
                        description: Namespace is the namespace where Kibana is deployed
                          by operator No need to set if Kibana is deployed on the
                          same namespace
                        type: string
                    required:
                    - name
                    type: object
                type: object
              metadata:
                description: Metadata is optional meta-data JSON string
                type: string
              name:
                description: Name is the role name If empty, it use the ressource
                  name
                type: string
              transient_metadata:
                description: TransientMedata
                properties:
                  enabled:
                    type: boolean
                type: object
            required:
            - kibanaRef
            type: object
          status:
            description: RoleStatus defines the observed state of Role
            properties:
              conditions:
                description: List of conditions
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              originalObject:
                description: OriginalObject is the original object used on 3 way diff
                  merge
                type: string
              sync:
                description: Sync
                type: boolean
            required:
            - conditions
            - originalObject
            - sync
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
