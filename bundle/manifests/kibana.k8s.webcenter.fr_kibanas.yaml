apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  creationTimestamp: null
  name: kibanas.kibana.k8s.webcenter.fr
spec:
  group: kibana.k8s.webcenter.fr
  names:
    kind: Kibana
    listKind: KibanaList
    plural: kibanas
    singular: kibana
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.url
      name: URL
      type: string
    - description: Phase
      jsonPath: .status.phase
      name: Phase
      type: string
    - description: Is on error
      jsonPath: .status.isOnError
      name: Error
      type: boolean
    - description: health
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Kibana is the Schema for the kibanas API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KibanaSpec defines the desired state of Kibana
            properties:
              config:
                additionalProperties:
                  type: string
                description: |-
                  Config is the Kibana config
                  The key is the file stored on kibana/config
                type: object
              deployment:
                description: Deployment permit to set the deployment settings
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations permit to set annotation on deployment
                    type: object
                  antiAffinity:
                    description: AntiAffinity permit to set anti affinity policy
                    properties:
                      topologyKey:
                        default: kubernetes.io/hostname
                        description: |-
                          TopologyKey is the topology key to use
                          Default to kubernetes.io/hostname
                        type: string
                      type:
                        default: soft
                        description: Type permit to set anti affinity as soft or hard
                        enum:
                        - soft
                        - hard
                        type: string
                    required:
                    - type
                    type: object
                  env:
                    description: Env permit to set some environment variable on containers
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  envFrom:
                    description: EnvFrom permit to set some environment variable from
                      config map or secret
                    items:
                      description: EnvFromSource represents the source of a set of
                        ConfigMaps
                      properties:
                        configMapRef:
                          description: The ConfigMap to select from
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap must be defined
                              type: boolean
                          type: object
                          x-kubernetes-map-type: atomic
                        prefix:
                          description: An optional identifier to prepend to each key
                            in the ConfigMap. Must be a C_IDENTIFIER.
                          type: string
                        secretRef:
                          description: The Secret to select from
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret must be defined
                              type: boolean
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    type: array
                  initContainerResources:
                    description: InitContainerResources permit to set resources on
                      init containers
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels permit to set labels on containers
                    type: object
                  node:
                    description: Node permit to set extra option on Node process
                    type: string
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector permit to set node selector on pod
                    type: object
                  podDisruptionBudget:
                    description: PodDisruptionBudget is the pod disruption budget
                      policy
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at most "maxUnavailable" pods selected by
                          "selector" are unavailable after the eviction, i.e. even in absence of
                          the evicted pod. For example, one can prevent all voluntary evictions
                          by specifying 0. This is a mutually exclusive setting with "minAvailable".
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at least "minAvailable" pods selected by
                          "selector" will still be available after the eviction, i.e. even in the
                          absence of the evicted pod.  So for example you can prevent all voluntary
                          evictions by specifying "100%".
                        x-kubernetes-int-or-string: true
                      selector:
                        description: |-
                          Label query over pods whose evictions are managed by the disruption
                          budget.
                          A null selector will match no pods, while an empty ({}) selector will select
                          all pods within the namespace.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      unhealthyPodEvictionPolicy:
                        description: |-
                          UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods
                          should be considered for eviction. Current implementation considers healthy pods,
                          as pods that have status.conditions item with type="Ready",status="True".

                          Valid policies are IfHealthyBudget and AlwaysAllow.
                          If no policy is specified, the default behavior will be used,
                          which corresponds to the IfHealthyBudget policy.

                          IfHealthyBudget policy means that running pods (status.phase="Running"),
                          but not yet healthy can be evicted only if the guarded application is not
                          disrupted (status.currentHealthy is at least equal to status.desiredHealthy).
                          Healthy pods will be subject to the PDB for eviction.

                          AlwaysAllow policy means that all running pods (status.phase="Running"),
                          but not yet healthy are considered disrupted and can be evicted regardless
                          of whether the criteria in a PDB is met. This means perspective running
                          pods of a disrupted application might not get a chance to become healthy.
                          Healthy pods will be subject to the PDB for eviction.

                          Additional policies may be added in the future.
                          Clients making eviction decisions should disallow eviction of unhealthy pods
                          if they encounter an unrecognized policy in this field.

                          This field is beta-level. The eviction API uses this field when
                          the feature gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default).
                        type: string
                    type: object
                  podTemplate:
                    description: |
                      PodSpec is merged with expected pod
                      It usefull to add some extra properties on pod spec
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  replicas:
                    description: Replicas is the number of replicas
                    format: int32
                    type: integer
                  resources:
                    description: Resources permit to set ressources on container
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  tolerations:
                    description: Tolerations permit to set toleration on pod
                    items:
                      description: |-
                        The pod this Toleration is attached to tolerates any taint that matches
                        the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: |-
                            Effect indicates the taint effect to match. Empty means match all taint effects.
                            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            Key is the taint key that the toleration applies to. Empty means match all taint keys.
                            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal.
                            Exists is equivalent to wildcard for value, so that a pod can
                            tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                            it is not set, which means tolerate the taint forever (do not evict). Zero and
                            negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: |-
                            Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                required:
                - replicas
                type: object
              elasticsearchRef:
                description: ElasticsearchRef is the Elasticsearch ref to connect
                  on.
                properties:
                  elasticsearchCASecretRef:
                    description: |-
                      ElasticsearchCaSecretRef is the secret that store your custom CA certificate to connect on Elasticsearch API.
                      It need to have the following keys: ca.crt
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  external:
                    description: ExternalElasticsearchRef is the external Elasticsearch
                      cluster not managed by operator
                    properties:
                      addresses:
                        description: Addresses is the list of Elasticsearch addresses
                        items:
                          type: string
                        type: array
                    required:
                    - addresses
                    type: object
                  managed:
                    description: ManagedElasticsearchRef is the managed Elasticsearch
                      cluster by operator
                    properties:
                      name:
                        description: Name is the Elasticsearch cluster deployed by
                          operator
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where Elasticsearch is deployed by operator
                          No need to set if Kibana is deployed on the same namespace
                        type: string
                      targetNodeGroup:
                        description: |-
                          TargetNodeGroup is the target Elasticsearch node group to use as service to connect on Elasticsearch
                          Default, it use the global service
                        type: string
                    required:
                    - name
                    type: object
                  secretRef:
                    description: |-
                      SecretName is the secret that contain the setting to connect on Elasticsearch. It can be auto computed for managed Elasticsearch.
                      It need to contain the keys `username` and `password`.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              endpoint:
                description: |-
                  Endpoint permit to set endpoints to access on Kibana from external kubernetes
                  You can set ingress and / or load balancer
                properties:
                  ingress:
                    description: Ingress permit to set ingress settings
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to set in ingress
                        type: object
                      enabled:
                        default: false
                        description: |-
                          Enabled permit to enabled / disabled ingress
                          Default to false
                        type: boolean
                      host:
                        description: Host is the hostname to access on
                        type: string
                      ingressSpec:
                        description: IngressSpec it merge with expected ingress spec
                        properties:
                          defaultBackend:
                            description: |-
                              defaultBackend is the backend that should handle requests that don't
                              match any rule. If Rules are not specified, DefaultBackend must be specified.
                              If DefaultBackend is not set, the handling of requests that do not match any
                              of the rules will be up to the Ingress controller.
                            properties:
                              resource:
                                description: |-
                                  resource is an ObjectRef to another Kubernetes resource in the namespace
                                  of the Ingress object. If resource is specified, a service.Name and
                                  service.Port must not be specified.
                                  This is a mutually exclusive setting with "Service".
                                properties:
                                  apiGroup:
                                    description: |-
                                      APIGroup is the group for the resource being referenced.
                                      If APIGroup is not specified, the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                                x-kubernetes-map-type: atomic
                              service:
                                description: |-
                                  service references a service as a backend.
                                  This is a mutually exclusive setting with "Resource".
                                properties:
                                  name:
                                    description: |-
                                      name is the referenced service. The service must exist in
                                      the same namespace as the Ingress object.
                                    type: string
                                  port:
                                    description: |-
                                      port of the referenced service. A port name or port number
                                      is required for a IngressServiceBackend.
                                    properties:
                                      name:
                                        description: |-
                                          name is the name of the port on the Service.
                                          This is a mutually exclusive setting with "Number".
                                        type: string
                                      number:
                                        description: |-
                                          number is the numerical port number (e.g. 80) on the Service.
                                          This is a mutually exclusive setting with "Name".
                                        format: int32
                                        type: integer
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - name
                                type: object
                            type: object
                          ingressClassName:
                            description: |-
                              ingressClassName is the name of an IngressClass cluster resource. Ingress
                              controller implementations use this field to know whether they should be
                              serving this Ingress resource, by a transitive connection
                              (controller -> IngressClass -> Ingress resource). Although the
                              `kubernetes.io/ingress.class` annotation (simple constant name) was never
                              formally defined, it was widely supported by Ingress controllers to create
                              a direct binding between Ingress controller and Ingress resources. Newly
                              created Ingress resources should prefer using the field. However, even
                              though the annotation is officially deprecated, for backwards compatibility
                              reasons, ingress controllers should still honor that annotation if present.
                            type: string
                          rules:
                            description: |-
                              rules is a list of host rules used to configure the Ingress. If unspecified,
                              or no rule matches, all traffic is sent to the default backend.
                            items:
                              description: |-
                                IngressRule represents the rules mapping the paths under a specified host to
                                the related backend services. Incoming requests are first evaluated for a host
                                match, then routed to the backend associated with the matching IngressRuleValue.
                              properties:
                                host:
                                  description: "host is the fully qualified domain
                                    name of a network host, as defined by RFC 3986.\nNote
                                    the following deviations from the \"host\" part
                                    of the\nURI as defined in RFC 3986:\n1. IPs are
                                    not allowed. Currently an IngressRuleValue can
                                    only apply to\n   the IP in the Spec of the parent
                                    Ingress.\n2. The `:` delimiter is not respected
                                    because ports are not allowed.\n\t  Currently
                                    the port of an Ingress is implicitly :80 for http
                                    and\n\t  :443 for https.\nBoth these may change
                                    in the future.\nIncoming requests are matched
                                    against the host before the\nIngressRuleValue.
                                    If the host is unspecified, the Ingress routes
                                    all\ntraffic based on the specified IngressRuleValue.\n\nhost
                                    can be \"precise\" which is a domain name without
                                    the terminating dot of\na network host (e.g. \"foo.bar.com\")
                                    or \"wildcard\", which is a domain name\nprefixed
                                    with a single wildcard label (e.g. \"*.foo.com\").\nThe
                                    wildcard character '*' must appear by itself as
                                    the first DNS label and\nmatches only a single
                                    label. You cannot have a wildcard label by itself
                                    (e.g. Host == \"*\").\nRequests will be matched
                                    against the Host field in the following way:\n1.
                                    If host is precise, the request matches this rule
                                    if the http host header is equal to Host.\n2.
                                    If host is a wildcard, then the request matches
                                    this rule if the http host header\nis to equal
                                    to the suffix (removing the first label) of the
                                    wildcard rule."
                                  type: string
                                http:
                                  description: |-
                                    HTTPIngressRuleValue is a list of http selectors pointing to backends.
                                    In the example: http://<host>/<path>?<searchpart> -> backend where
                                    where parts of the url correspond to RFC 3986, this resource will be used
                                    to match against everything after the last '/' and before the first '?'
                                    or '#'.
                                  properties:
                                    paths:
                                      description: paths is a collection of paths
                                        that map requests to backends.
                                      items:
                                        description: |-
                                          HTTPIngressPath associates a path with a backend. Incoming urls matching the
                                          path are forwarded to the backend.
                                        properties:
                                          backend:
                                            description: |-
                                              backend defines the referenced service endpoint to which the traffic
                                              will be forwarded to.
                                            properties:
                                              resource:
                                                description: |-
                                                  resource is an ObjectRef to another Kubernetes resource in the namespace
                                                  of the Ingress object. If resource is specified, a service.Name and
                                                  service.Port must not be specified.
                                                  This is a mutually exclusive setting with "Service".
                                                properties:
                                                  apiGroup:
                                                    description: |-
                                                      APIGroup is the group for the resource being referenced.
                                                      If APIGroup is not specified, the specified Kind must be in the core API group.
                                                      For any other third-party types, APIGroup is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              service:
                                                description: |-
                                                  service references a service as a backend.
                                                  This is a mutually exclusive setting with "Resource".
                                                properties:
                                                  name:
                                                    description: |-
                                                      name is the referenced service. The service must exist in
                                                      the same namespace as the Ingress object.
                                                    type: string
                                                  port:
                                                    description: |-
                                                      port of the referenced service. A port name or port number
                                                      is required for a IngressServiceBackend.
                                                    properties:
                                                      name:
                                                        description: |-
                                                          name is the name of the port on the Service.
                                                          This is a mutually exclusive setting with "Number".
                                                        type: string
                                                      number:
                                                        description: |-
                                                          number is the numerical port number (e.g. 80) on the Service.
                                                          This is a mutually exclusive setting with "Name".
                                                        format: int32
                                                        type: integer
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                required:
                                                - name
                                                type: object
                                            type: object
                                          path:
                                            description: |-
                                              path is matched against the path of an incoming request. Currently it can
                                              contain characters disallowed from the conventional "path" part of a URL
                                              as defined by RFC 3986. Paths must begin with a '/' and must be present
                                              when using PathType with value "Exact" or "Prefix".
                                            type: string
                                          pathType:
                                            description: |-
                                              pathType determines the interpretation of the path matching. PathType can
                                              be one of the following values:
                                              * Exact: Matches the URL path exactly.
                                              * Prefix: Matches based on a URL path prefix split by '/'. Matching is
                                                done on a path element by element basis. A path element refers is the
                                                list of labels in the path split by the '/' separator. A request is a
                                                match for path p if every p is an element-wise prefix of p of the
                                                request path. Note that if the last element of the path is a substring
                                                of the last element in request path, it is not a match (e.g. /foo/bar
                                                matches /foo/bar/baz, but does not match /foo/barbaz).
                                              * ImplementationSpecific: Interpretation of the Path matching is up to
                                                the IngressClass. Implementations can treat this as a separate PathType
                                                or treat it identically to Prefix or Exact path types.
                                              Implementations are required to support all path types.
                                            type: string
                                        required:
                                        - backend
                                        - pathType
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - paths
                                  type: object
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          tls:
                            description: |-
                              tls represents the TLS configuration. Currently the Ingress only supports a
                              single TLS port, 443. If multiple members of this list specify different hosts,
                              they will be multiplexed on the same port according to the hostname specified
                              through the SNI TLS extension, if the ingress controller fulfilling the
                              ingress supports SNI.
                            items:
                              description: IngressTLS describes the transport layer
                                security associated with an ingress.
                              properties:
                                hosts:
                                  description: |-
                                    hosts is a list of hosts included in the TLS certificate. The values in
                                    this list must match the name/s used in the tlsSecret. Defaults to the
                                    wildcard host setting for the loadbalancer controller fulfilling this
                                    Ingress, if left unspecified.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                secretName:
                                  description: |-
                                    secretName is the name of the secret used to terminate TLS traffic on
                                    port 443. Field is left optional to allow TLS routing based on SNI
                                    hostname alone. If the SNI host in a listener conflicts with the "Host"
                                    header field used by an IngressRule, the SNI host is used for termination
                                    and value of the "Host" header is used for routing.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to set in ingress
                        type: object
                      secretRef:
                        description: |-
                          SecretRef is the secret ref that store certificates
                          If secret not exist, it will use the default ingress certificate
                          If secret is nil, it will disable TLS on ingress spec.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - host
                    type: object
                  loadBalancer:
                    description: Load balancer permit to set load balancer settings
                    properties:
                      enabled:
                        default: false
                        description: |-
                          Enabled permit to enabled / disabled load balancer
                          Cloud provider need to support it
                          Default to false
                        type: boolean
                    type: object
                  route:
                    description: Route permit to set route settings
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to set in route
                        type: object
                      enabled:
                        default: false
                        description: |-
                          Enabled permit to enabled / disabled route
                          Default to false
                        type: boolean
                      host:
                        description: Host is the hostname to access on
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to set in route
                        type: object
                      routeSpec:
                        description: RouteSpec it merge with expected route spec
                        properties:
                          alternateBackends:
                            description: |-
                              alternateBackends allows up to 3 additional backends to be assigned to the route.
                              Only the Service kind is allowed, and it will be defaulted to Service.
                              Use the weight field in RouteTargetReference object to specify relative preference.
                            items:
                              description: |-
                                RouteTargetReference specifies the target that resolve into endpoints. Only the 'Service'
                                kind is allowed. Use 'weight' field to emphasize one over others.
                              properties:
                                kind:
                                  default: Service
                                  description: The kind of target that the route is
                                    referring to. Currently, only 'Service' is allowed
                                  enum:
                                  - Service
                                  - ""
                                  type: string
                                name:
                                  description: name of the service/target that is
                                    being referred to. e.g. name of the service
                                  minLength: 1
                                  type: string
                                weight:
                                  default: 100
                                  description: |-
                                    weight as an integer between 0 and 256, default 100, that specifies the target's relative weight
                                    against other target reference objects. 0 suppresses requests to this backend.
                                  format: int32
                                  maximum: 256
                                  minimum: 0
                                  type: integer
                              required:
                              - kind
                              - name
                              type: object
                            maxItems: 3
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            - kind
                            x-kubernetes-list-type: map
                          host:
                            description: |-
                              host is an alias/DNS that points to the service. Optional.
                              If not specified a route name will typically be automatically
                              chosen.
                              Must follow DNS952 subdomain conventions.
                            maxLength: 253
                            pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$
                            type: string
                          httpHeaders:
                            description: httpHeaders defines policy for HTTP headers.
                            properties:
                              actions:
                                description: |-
                                  actions specifies options for modifying headers and their values.
                                  Note that this option only applies to cleartext HTTP connections
                                  and to secure HTTP connections for which the ingress controller
                                  terminates encryption (that is, edge-terminated or reencrypt
                                  connections).  Headers cannot be modified for TLS passthrough
                                  connections.
                                  Setting the HSTS (`Strict-Transport-Security`) header is not supported via actions.
                                  `Strict-Transport-Security` may only be configured using the "haproxy.router.openshift.io/hsts_header"
                                  route annotation, and only in accordance with the policy specified in Ingress.Spec.RequiredHSTSPolicies.
                                  In case of HTTP request headers, the actions specified in spec.httpHeaders.actions on the Route will be executed after
                                  the actions specified in the IngressController's spec.httpHeaders.actions field.
                                  In case of HTTP response headers, the actions specified in spec.httpHeaders.actions on the IngressController will be
                                  executed after the actions specified in the Route's spec.httpHeaders.actions field.
                                  The headers set via this API will not appear in access logs.
                                  Any actions defined here are applied after any actions related to the following other fields:
                                  cache-control, spec.clientTLS,
                                  spec.httpHeaders.forwardedHeaderPolicy, spec.httpHeaders.uniqueId,
                                  and spec.httpHeaders.headerNameCaseAdjustments.
                                  The following header names are reserved and may not be modified via this API:
                                  Strict-Transport-Security, Proxy, Cookie, Set-Cookie.
                                  Note that the total size of all net added headers *after* interpolating dynamic values
                                  must not exceed the value of spec.tuningOptions.headerBufferMaxRewriteBytes on the
                                  IngressController. Please refer to the documentation
                                  for that API field for more details.
                                properties:
                                  request:
                                    description: |-
                                      request is a list of HTTP request headers to modify.
                                      Currently, actions may define to either `Set` or `Delete` headers values.
                                      Actions defined here will modify the request headers of all requests made through a route.
                                      These actions are applied to a specific Route defined within a cluster i.e. connections made through a route.
                                      Currently, actions may define to either `Set` or `Delete` headers values.
                                      Route actions will be executed after IngressController actions for request headers.
                                      Actions are applied in sequence as defined in this list.
                                      A maximum of 20 request header actions may be configured.
                                      You can use this field to specify HTTP request headers that should be set or deleted
                                      when forwarding connections from the client to your application.
                                      Sample fetchers allowed are "req.hdr" and "ssl_c_der".
                                      Converters allowed are "lower" and "base64".
                                      Example header values: "%[req.hdr(X-target),lower]", "%{+Q}[ssl_c_der,base64]".
                                      Any request header configuration applied directly via a Route resource using this API
                                      will override header configuration for a header of the same name applied via
                                      spec.httpHeaders.actions on the IngressController or route annotation.
                                      Note: This field cannot be used if your route uses TLS passthrough.
                                    items:
                                      description: RouteHTTPHeader specifies configuration
                                        for setting or deleting an HTTP header.
                                      properties:
                                        action:
                                          description: action specifies actions to
                                            perform on headers, such as setting or
                                            deleting headers.
                                          properties:
                                            set:
                                              description: |-
                                                set defines the HTTP header that should be set: added if it doesn't exist or replaced if it does.
                                                This field is required when type is Set and forbidden otherwise.
                                              properties:
                                                value:
                                                  description: |-
                                                    value specifies a header value.
                                                    Dynamic values can be added. The value will be interpreted as an HAProxy format string as defined in
                                                    http://cbonte.github.io/haproxy-dconv/2.6/configuration.html#8.2.6 and may use HAProxy's %[] syntax and
                                                    otherwise must be a valid HTTP header value as defined in https://datatracker.ietf.org/doc/html/rfc7230#section-3.2.
                                                    The value of this field must be no more than 16384 characters in length.
                                                    Note that the total size of all net added headers *after* interpolating dynamic values
                                                    must not exceed the value of spec.tuningOptions.headerBufferMaxRewriteBytes on the
                                                    IngressController.
                                                  maxLength: 16384
                                                  minLength: 1
                                                  type: string
                                              required:
                                              - value
                                              type: object
                                            type:
                                              description: |-
                                                type defines the type of the action to be applied on the header.
                                                Possible values are Set or Delete.
                                                Set allows you to set HTTP request and response headers.
                                                Delete allows you to delete HTTP request and response headers.
                                              enum:
                                              - Set
                                              - Delete
                                              type: string
                                          required:
                                          - type
                                          type: object
                                          x-kubernetes-validations:
                                          - message: set is required when type is
                                              Set, and forbidden otherwise
                                            rule: 'has(self.type) && self.type ==
                                              ''Set'' ?  has(self.set) : !has(self.set)'
                                        name:
                                          description: |-
                                            name specifies the name of a header on which to perform an action. Its value must be a valid HTTP header
                                            name as defined in RFC 2616 section 4.2.
                                            The name must consist only of alphanumeric and the following special characters, "-!#$%&'*+.^_`".
                                            The following header names are reserved and may not be modified via this API:
                                            Strict-Transport-Security, Proxy, Cookie, Set-Cookie.
                                            It must be no more than 255 characters in length.
                                            Header name must be unique.
                                          maxLength: 255
                                          minLength: 1
                                          pattern: ^[-!#$%&'*+.0-9A-Z^_`a-z|~]+$
                                          type: string
                                          x-kubernetes-validations:
                                          - message: strict-transport-security header
                                              may not be modified via header actions
                                            rule: self.lowerAscii() != 'strict-transport-security'
                                          - message: proxy header may not be modified
                                              via header actions
                                            rule: self.lowerAscii() != 'proxy'
                                          - message: cookie header may not be modified
                                              via header actions
                                            rule: self.lowerAscii() != 'cookie'
                                          - message: set-cookie header may not be
                                              modified via header actions
                                            rule: self.lowerAscii() != 'set-cookie'
                                      required:
                                      - action
                                      - name
                                      type: object
                                    maxItems: 20
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                    x-kubernetes-validations:
                                    - message: Either the header value provided is
                                        not in correct format or the sample fetcher/converter
                                        specified is not allowed. The dynamic header
                                        value will be interpreted as an HAProxy format
                                        string as defined in http://cbonte.github.io/haproxy-dconv/2.6/configuration.html#8.2.6
                                        and may use HAProxy's %[] syntax and otherwise
                                        must be a valid HTTP header value as defined
                                        in https://datatracker.ietf.org/doc/html/rfc7230#section-3.2.
                                        Sample fetchers allowed are req.hdr, ssl_c_der.
                                        Converters allowed are lower, base64.
                                      rule: self.all(key, key.action.type == "Delete"
                                        || (has(key.action.set) && key.action.set.value.matches('^(?:%(?:%|(?:\\{[-+]?[QXE](?:,[-+]?[QXE])*\\})?\\[(?:req\\.hdr\\([0-9A-Za-z-]+\\)|ssl_c_der)(?:,(?:lower|base64))*\\])|[^%[:cntrl:]])+$')))
                                  response:
                                    description: |-
                                      response is a list of HTTP response headers to modify.
                                      Currently, actions may define to either `Set` or `Delete` headers values.
                                      Actions defined here will modify the response headers of all requests made through a route.
                                      These actions are applied to a specific Route defined within a cluster i.e. connections made through a route.
                                      Route actions will be executed before IngressController actions for response headers.
                                      Actions are applied in sequence as defined in this list.
                                      A maximum of 20 response header actions may be configured.
                                      You can use this field to specify HTTP response headers that should be set or deleted
                                      when forwarding responses from your application to the client.
                                      Sample fetchers allowed are "res.hdr" and "ssl_c_der".
                                      Converters allowed are "lower" and "base64".
                                      Example header values: "%[res.hdr(X-target),lower]", "%{+Q}[ssl_c_der,base64]".
                                      Note: This field cannot be used if your route uses TLS passthrough.
                                    items:
                                      description: RouteHTTPHeader specifies configuration
                                        for setting or deleting an HTTP header.
                                      properties:
                                        action:
                                          description: action specifies actions to
                                            perform on headers, such as setting or
                                            deleting headers.
                                          properties:
                                            set:
                                              description: |-
                                                set defines the HTTP header that should be set: added if it doesn't exist or replaced if it does.
                                                This field is required when type is Set and forbidden otherwise.
                                              properties:
                                                value:
                                                  description: |-
                                                    value specifies a header value.
                                                    Dynamic values can be added. The value will be interpreted as an HAProxy format string as defined in
                                                    http://cbonte.github.io/haproxy-dconv/2.6/configuration.html#8.2.6 and may use HAProxy's %[] syntax and
                                                    otherwise must be a valid HTTP header value as defined in https://datatracker.ietf.org/doc/html/rfc7230#section-3.2.
                                                    The value of this field must be no more than 16384 characters in length.
                                                    Note that the total size of all net added headers *after* interpolating dynamic values
                                                    must not exceed the value of spec.tuningOptions.headerBufferMaxRewriteBytes on the
                                                    IngressController.
                                                  maxLength: 16384
                                                  minLength: 1
                                                  type: string
                                              required:
                                              - value
                                              type: object
                                            type:
                                              description: |-
                                                type defines the type of the action to be applied on the header.
                                                Possible values are Set or Delete.
                                                Set allows you to set HTTP request and response headers.
                                                Delete allows you to delete HTTP request and response headers.
                                              enum:
                                              - Set
                                              - Delete
                                              type: string
                                          required:
                                          - type
                                          type: object
                                          x-kubernetes-validations:
                                          - message: set is required when type is
                                              Set, and forbidden otherwise
                                            rule: 'has(self.type) && self.type ==
                                              ''Set'' ?  has(self.set) : !has(self.set)'
                                        name:
                                          description: |-
                                            name specifies the name of a header on which to perform an action. Its value must be a valid HTTP header
                                            name as defined in RFC 2616 section 4.2.
                                            The name must consist only of alphanumeric and the following special characters, "-!#$%&'*+.^_`".
                                            The following header names are reserved and may not be modified via this API:
                                            Strict-Transport-Security, Proxy, Cookie, Set-Cookie.
                                            It must be no more than 255 characters in length.
                                            Header name must be unique.
                                          maxLength: 255
                                          minLength: 1
                                          pattern: ^[-!#$%&'*+.0-9A-Z^_`a-z|~]+$
                                          type: string
                                          x-kubernetes-validations:
                                          - message: strict-transport-security header
                                              may not be modified via header actions
                                            rule: self.lowerAscii() != 'strict-transport-security'
                                          - message: proxy header may not be modified
                                              via header actions
                                            rule: self.lowerAscii() != 'proxy'
                                          - message: cookie header may not be modified
                                              via header actions
                                            rule: self.lowerAscii() != 'cookie'
                                          - message: set-cookie header may not be
                                              modified via header actions
                                            rule: self.lowerAscii() != 'set-cookie'
                                      required:
                                      - action
                                      - name
                                      type: object
                                    maxItems: 20
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                    x-kubernetes-validations:
                                    - message: Either the header value provided is
                                        not in correct format or the sample fetcher/converter
                                        specified is not allowed. The dynamic header
                                        value will be interpreted as an HAProxy format
                                        string as defined in http://cbonte.github.io/haproxy-dconv/2.6/configuration.html#8.2.6
                                        and may use HAProxy's %[] syntax and otherwise
                                        must be a valid HTTP header value as defined
                                        in https://datatracker.ietf.org/doc/html/rfc7230#section-3.2.
                                        Sample fetchers allowed are res.hdr, ssl_c_der.
                                        Converters allowed are lower, base64.
                                      rule: self.all(key, key.action.type == "Delete"
                                        || (has(key.action.set) && key.action.set.value.matches('^(?:%(?:%|(?:\\{[-+]?[QXE](?:,[-+]?[QXE])*\\})?\\[(?:res\\.hdr\\([0-9A-Za-z-]+\\)|ssl_c_der)(?:,(?:lower|base64))*\\])|[^%[:cntrl:]])+$')))
                                type: object
                            type: object
                          path:
                            description: path that the router watches for, to route
                              traffic for to the service. Optional
                            pattern: ^/
                            type: string
                          port:
                            description: |-
                              If specified, the port to be used by the router. Most routers will use all
                              endpoints exposed by the service by default - set this value to instruct routers
                              which port to use.
                            properties:
                              targetPort:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  The target port on pods selected by the service this route points to.
                                  If this is a string, it will be looked up as a named port in the target
                                  endpoints port list. Required
                                x-kubernetes-int-or-string: true
                            required:
                            - targetPort
                            type: object
                          subdomain:
                            description: |-
                              subdomain is a DNS subdomain that is requested within the ingress controller's
                              domain (as a subdomain). If host is set this field is ignored. An ingress
                              controller may choose to ignore this suggested name, in which case the controller
                              will report the assigned name in the status.ingress array or refuse to admit the
                              route. If this value is set and the server does not support this field host will
                              be populated automatically. Otherwise host is left empty. The field may have
                              multiple parts separated by a dot, but not all ingress controllers may honor
                              the request. This field may not be changed after creation except by a user with
                              the update routes/custom-host permission.

                              Example: subdomain `frontend` automatically receives the router subdomain
                              `apps.mycluster.com` to have a full hostname `frontend.apps.mycluster.com`.
                            maxLength: 253
                            pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$
                            type: string
                          tls:
                            description: The tls field provides the ability to configure
                              certificates and termination for the route.
                            properties:
                              caCertificate:
                                description: caCertificate provides the cert authority
                                  certificate contents
                                type: string
                              certificate:
                                description: |-
                                  certificate provides certificate contents. This should be a single serving certificate, not a certificate
                                  chain. Do not include a CA certificate.
                                type: string
                              destinationCACertificate:
                                description: |-
                                  destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt
                                  termination this file should be provided in order to have routers use it for health checks on the secure connection.
                                  If this field is not specified, the router may provide its own destination CA and perform hostname validation using
                                  the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically
                                  verify.
                                type: string
                              externalCertificate:
                                description: |-
                                  externalCertificate provides certificate contents as a secret reference.
                                  This should be a single serving certificate, not a certificate
                                  chain. Do not include a CA certificate. The secret referenced should
                                  be present in the same namespace as that of the Route.
                                  Forbidden when `certificate` is set.
                                properties:
                                  name:
                                    description: |-
                                      name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              insecureEdgeTerminationPolicy:
                                description: |-
                                  insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While
                                  each router may make its own decisions on which ports to expose, this is normally port 80.

                                  If a route does not specify insecureEdgeTerminationPolicy, then the default behavior is "None".

                                  * Allow - traffic is sent to the server on the insecure port (edge/reencrypt terminations only).

                                  * None - no traffic is allowed on the insecure port (default).

                                  * Redirect - clients are redirected to the secure port.
                                enum:
                                - Allow
                                - None
                                - Redirect
                                - ""
                                type: string
                              key:
                                description: key provides key file contents
                                type: string
                              termination:
                                description: |-
                                  termination indicates termination type.

                                  * edge - TLS termination is done by the router and http is used to communicate with the backend (default)
                                  * passthrough - Traffic is sent straight to the destination without the router providing TLS termination
                                  * reencrypt - TLS termination is done by the router and https is used to communicate with the backend

                                  Note: passthrough termination is incompatible with httpHeader actions
                                enum:
                                - edge
                                - reencrypt
                                - passthrough
                                type: string
                            required:
                            - termination
                            type: object
                            x-kubernetes-validations:
                            - message: 'cannot have both spec.tls.termination: passthrough
                                and spec.tls.insecureEdgeTerminationPolicy: Allow'
                              rule: 'has(self.termination) && has(self.insecureEdgeTerminationPolicy)
                                ? !((self.termination==''passthrough'') && (self.insecureEdgeTerminationPolicy==''Allow''))
                                : true'
                          to:
                            description: |-
                              to is an object the route should use as the primary backend. Only the Service kind
                              is allowed, and it will be defaulted to Service. If the weight field (0-256 default 100)
                              is set to zero, no traffic will be sent to this backend.
                            properties:
                              kind:
                                default: Service
                                description: The kind of target that the route is
                                  referring to. Currently, only 'Service' is allowed
                                enum:
                                - Service
                                - ""
                                type: string
                              name:
                                description: name of the service/target that is being
                                  referred to. e.g. name of the service
                                minLength: 1
                                type: string
                              weight:
                                default: 100
                                description: |-
                                  weight as an integer between 0 and 256, default 100, that specifies the target's relative weight
                                  against other target reference objects. 0 suppresses requests to this backend.
                                format: int32
                                maximum: 256
                                minimum: 0
                                type: integer
                            required:
                            - kind
                            - name
                            type: object
                          wildcardPolicy:
                            default: None
                            description: |-
                              Wildcard policy if any for the route.
                              Currently only 'Subdomain' or 'None' is allowed.
                            enum:
                            - None
                            - Subdomain
                            - ""
                            type: string
                        required:
                        - to
                        type: object
                      secretRef:
                        description: |-
                          SecretRef is the secret ref that store certificates
                          If secret not exist, it will use the default route certificate
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      tlsEnabled:
                        description: Set to true to enable TLS on route
                        type: boolean
                    required:
                    - host
                    type: object
                type: object
              image:
                description: |-
                  Image is the image to use when deploy Elasticsearch
                  It can be usefull to use internal registry or mirror
                type: string
              imagePullPolicy:
                default: IfNotPresent
                description: ImagePullPolicy is the image pull policy to use
                enum:
                - Always
                - Never
                - IfNotPresent
                type: string
              imagePullSecrets:
                description: ImagePullSecrets is the image pull secrets to use
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              keystoreSecretRef:
                description: KeystoreSecretRef is the secret that store the security
                  settings
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              monitoring:
                description: |-
                  Monitoring permit to monitor current cluster
                  Default, it not monitor cluster
                properties:
                  metricbeat:
                    description: Metricbeat permit to monitor cluster with metricbeat
                      and to dedicated monitoring cluster
                    properties:
                      elasticsearchRef:
                        description: ElasticsearchRef is the Elasticsearch ref to
                          connect on.
                        properties:
                          elasticsearchCASecretRef:
                            description: |-
                              ElasticsearchCaSecretRef is the secret that store your custom CA certificate to connect on Elasticsearch API.
                              It need to have the following keys: ca.crt
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          external:
                            description: ExternalElasticsearchRef is the external
                              Elasticsearch cluster not managed by operator
                            properties:
                              addresses:
                                description: Addresses is the list of Elasticsearch
                                  addresses
                                items:
                                  type: string
                                type: array
                            required:
                            - addresses
                            type: object
                          managed:
                            description: ManagedElasticsearchRef is the managed Elasticsearch
                              cluster by operator
                            properties:
                              name:
                                description: Name is the Elasticsearch cluster deployed
                                  by operator
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace where Elasticsearch is deployed by operator
                                  No need to set if Kibana is deployed on the same namespace
                                type: string
                              targetNodeGroup:
                                description: |-
                                  TargetNodeGroup is the target Elasticsearch node group to use as service to connect on Elasticsearch
                                  Default, it use the global service
                                type: string
                            required:
                            - name
                            type: object
                          secretRef:
                            description: |-
                              SecretName is the secret that contain the setting to connect on Elasticsearch. It can be auto computed for managed Elasticsearch.
                              It need to contain the keys `username` and `password`.
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      enabled:
                        default: false
                        description: |-
                          Enabled permit to enable Metricbeat monitoring
                          It will deploy metricbeat to collect metric
                          Default to false
                        type: boolean
                      numberOfReplicas:
                        default: 0
                        description: |-
                          NumberOfReplica is the number of replica to set on metricbeat setting when it create templates
                          Default is set to 0
                        format: int64
                        type: integer
                      refreshPeriod:
                        default: 10s
                        description: |-
                          RefreshPeriod permit to set the time to collect data
                          Defaullt to  `10s`
                        type: string
                      resources:
                        description: Resources permit to set resources on metricbeat
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      version:
                        description: |-
                          Version is the Metricbeat version to use
                          Default it use the same version of the product that it monitor
                        type: string
                    type: object
                  prometheus:
                    description: Prometheus permit to monitor cluster with Prometheus
                      and graphana (via exporter)
                    properties:
                      enabled:
                        default: false
                        description: |-
                          Enabled permit to enable Prometheus monitoring
                          It will deploy exporter and add podMonitor policy
                          Default to false
                        type: boolean
                      image:
                        description: |-
                          Image is the image to use when deploy Elasticsearch
                          It can be usefull to use internal registry or mirror
                        type: string
                      imagePullPolicy:
                        default: IfNotPresent
                        description: ImagePullPolicy is the image pull policy to use
                        enum:
                        - Always
                        - Never
                        - IfNotPresent
                        type: string
                      imagePullSecrets:
                        description: ImagePullSecrets is the image pull secrets to
                          use
                        items:
                          description: |-
                            LocalObjectReference contains enough information to let you locate the
                            referenced object inside the same namespace.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      installPlugin:
                        default: true
                        description: |-
                          InstallPlugin permit to install plugin
                          Default to true
                        type: boolean
                      resources:
                        description: |-
                          Resources permit to set ressources on Prometheus expporter container
                          If not defined, it will use the default requirements
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      scrapInterval:
                        default: 10s
                        description: |-
                          ScrapInterval is the scrap interval to collect ressource whith prometheus
                          Default to 10 secode
                        type: string
                      url:
                        description: Url is the plugin URL where to download exporter
                        type: string
                      version:
                        default: latest
                        description: |-
                          Version is the exporter version to use
                          Default is use the latest
                        type: string
                    type: object
                type: object
              pluginsList:
                description: |-
                  PluginsList is the list of additionnal plugin to install on each Kibana instance
                  Default is empty
                items:
                  type: string
                type: array
              tls:
                description: Tls permit to set the TLS setting for Kibana access
                properties:
                  certificateSecretRef:
                    description: |-
                      CertificateSecretRef is the secret that store your custom certificates.
                      It need to have the following keys: tls.key, tls.crt and optionally ca.crt
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  enabled:
                    default: true
                    description: |-
                      Enabled permit to enabled TLS
                      Default to false
                    type: boolean
                  keySize:
                    default: 2048
                    description: |-
                      KeySize is the key size when generate privates keys
                      Default to 2048
                    type: integer
                  renewalDays:
                    default: 30
                    description: |-
                      RenewalDays is the number of days before certificate expire to become effective renewal
                      Default to 30
                    type: integer
                  selfSignedCertificate:
                    description: SelfSignedCertificate permit to set self signed certificate
                      settings
                    properties:
                      altIPs:
                        description: AltIps permit to set subject alt names of type
                          ip when generate certificate
                        items:
                          type: string
                        type: array
                      altNames:
                        description: AltNames permit to set subject alt names of type
                          dns when generate certificate
                        items:
                          type: string
                        type: array
                    type: object
                  validityDays:
                    default: 365
                    description: |-
                      ValidityDays is the number of days that certificates are valid
                      Default to 365
                    type: integer
                type: object
              version:
                default: latest
                description: |-
                  Version is the Kibana version to use
                  Default is use the latest
                type: string
            required:
            - elasticsearchRef
            type: object
          status:
            description: KibanaStatus defines the observed state of Kibana
            properties:
              conditions:
                description: List of conditions
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              isOnError:
                description: IsOnError is true if controller is stuck on Error
                type: boolean
              lastErrorMessage:
                description: LastErrorMessage is the current error message
                type: string
              observedGeneration:
                description: observedGeneration is the current generation applied
                format: int64
                type: integer
              phase:
                description: Phase is the current phase
                type: string
              url:
                description: Url is the Kibana endpoint
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
